<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0912.2355                               -->
<workbook original-version='18.1' source-build='2025.1.8 (20251.25.0912.2355)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='acceptance-roadway-network' inline='true' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='acceptance-roadway-network' name='ogrdirect.0x5ortu0pmu39d1cqrchy042qflm'>
            <connection class='ogrdirect' directory='.' filename='acceptance-roadway-network.geojson' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <relation connection='ogrdirect.0x5ortu0pmu39d1cqrchy042qflm' name='acceptance-roadway-network.geojson' table='[acceptance-roadway-network.geojson]' type='table'>
          <columns>
            <column datatype='integer' name='emme_a_node_id' ordinal='0' />
            <column datatype='integer' name='emme_b_node_id' ordinal='1' />
            <column datatype='string' name='station_id' ordinal='2' />
            <column datatype='string' name='pems_station_type' ordinal='3' />
            <column datatype='real' name='distance_in_miles' ordinal='4' />
            <column datatype='string' name='key_location_name' ordinal='5' />
            <column datatype='string' name='key_location_direction' ordinal='6' />
            <column datatype='string' name='bridge_plaza_name' ordinal='7' />
            <column datatype='string' name='time_period' ordinal='8' />
            <column datatype='string' name='observed_source' ordinal='9' />
            <column datatype='real' name='observed_flow' ordinal='10' />
            <column datatype='string' name='observed_vehicle_class' ordinal='11' />
            <column datatype='real' name='observed_toll_transactions' ordinal='12' />
            <column datatype='real' name='simulated_flow' ordinal='13' />
            <column datatype='real' name='simulated_flow_da' ordinal='14' />
            <column datatype='real' name='simulated_flow_s2' ordinal='15' />
            <column datatype='real' name='simulated_flow_s3' ordinal='16' />
            <column datatype='real' name='simulated_flow_lrgt' ordinal='17' />
            <column datatype='real' name='simulated_flow_trk' ordinal='18' />
            <column datatype='real' name='simulated_flow_managed' ordinal='19' />
            <column datatype='real' name='simulated_flow_da_managed' ordinal='20' />
            <column datatype='real' name='simulated_flow_s2_managed' ordinal='21' />
            <column datatype='real' name='simulated_flow_s3_managed' ordinal='22' />
            <column datatype='real' name='simulated_flow_lrgt_managed' ordinal='23' />
            <column datatype='real' name='simulated_flow_trk_managed' ordinal='24' />
            <column datatype='real' name='simulated_capacity' ordinal='25' />
            <column datatype='real' name='simulated_capacity_managed' ordinal='26' />
            <column datatype='real' name='simulated_facility_type' ordinal='27' />
            <column datatype='real' name='simulated_lanes' ordinal='28' />
            <column datatype='real' name='simulated_lanes_managed' ordinal='29' />
            <column datatype='real' name='simulated_speed_mph' ordinal='30' />
            <column datatype='real' name='simulated_speed_mph_managed' ordinal='31' />
            <column datatype='string' name='odot_flow_category' ordinal='32' />
            <column datatype='real' name='odot_maximum_error' ordinal='33' />
            <column datatype='spatial' name='Geometry' ordinal='34' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>emme_a_node_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[emme_a_node_id]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>emme_a_node_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emme_b_node_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[emme_b_node_id]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>emme_b_node_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station_id]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>station_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pems_station_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pems_station_type]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>pems_station_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance_in_miles</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance_in_miles]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>distance_in_miles</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>key_location_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[key_location_name]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>key_location_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>key_location_direction</remote-name>
            <remote-type>129</remote-type>
            <local-name>[key_location_direction]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>key_location_direction</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bridge_plaza_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bridge_plaza_name]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>bridge_plaza_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_period</remote-name>
            <remote-type>129</remote-type>
            <local-name>[time_period]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>time_period</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[observed_source]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>observed_source</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[observed_flow]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>observed_flow</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_vehicle_class</remote-name>
            <remote-type>129</remote-type>
            <local-name>[observed_vehicle_class]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>observed_vehicle_class</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>observed_toll_transactions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[observed_toll_transactions]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>observed_toll_transactions</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_da</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_da]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_da</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_s2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_s2]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_s2</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_s3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_s3]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_s3</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_lrgt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_lrgt]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_lrgt</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_trk</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_trk]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_trk</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_managed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_managed]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_managed</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_da_managed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_da_managed]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_da_managed</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_s2_managed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_s2_managed]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_s2_managed</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_s3_managed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_s3_managed]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_s3_managed</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_lrgt_managed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_lrgt_managed]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_lrgt_managed</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_flow_trk_managed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_flow_trk_managed]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_flow_trk_managed</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_capacity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_capacity]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_capacity</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_capacity_managed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_capacity_managed]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_capacity_managed</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_facility_type</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_facility_type]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_facility_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_lanes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_lanes]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_lanes</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_lanes_managed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_lanes_managed]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_lanes_managed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_speed_mph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_speed_mph]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_speed_mph</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>simulated_speed_mph_managed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[simulated_speed_mph_managed]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>simulated_speed_mph_managed</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>odot_flow_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[odot_flow_category]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>odot_flow_category</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>odot_maximum_error</remote-name>
            <remote-type>5</remote-type>
            <local-name>[odot_maximum_error]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>odot_maximum_error</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[acceptance-roadway-network.geojson]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>34</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <object-id>[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]&quot;' value='N' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161907429380:qk]&quot;' value='Percent Error Flow' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161939148808:qk]&quot;' value='Percent Error Flow ' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_958070479470522369:qk]&quot;' value='Percent Transaction Error' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509196955650:qk]&quot;' value='Percent Error Large Truck VMT' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509200007173:qk]&quot;' value='Percent Error Large Truck Flow' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]&quot;' value='Percent Root Mean Square Error' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2228015198849597440:qk]&quot;' value='Percent Error ' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2228015198851321857:qk]&quot;' value='Percent Large Truck Flow Error' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2298806161939263497:qk]&quot;' value='Percent RMSE Flow' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2298806161940418575:qk]&quot;' value='Percent Error Flow  ' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_5914352234884481032:qk]&quot;' value='Percent RMSE (VMT)' />
          <alias key='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181689937922:qk]&quot;' value='Percent Error VMT' />
        </aliases>
      </column>
      <column caption='Arterial or Expressway Name' datatype='string' name='[Bridge Name (copy)_2298806161913241605]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='case [station_id]&#10;when &quot;402043_E&quot; then &quot;Highway 37 EB (Marin)&quot;&#10;when &quot;402042_W&quot; then &quot;Highway 37 WB (Marin)&quot;&#10;ELSE NULL&#10;END' />
      </column>
      <column caption='Expressway or Arterial Name' datatype='string' name='[Bridge Name (copy)_2298806161914040326]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='case [station_id]&#10;when &quot;402043_E&quot; then &quot;Highway 37 EB (Marin)&quot;&#10;when &quot;402042_W&quot; then &quot;Highway 37 WB (Marin)&quot;&#10;ELSE NULL&#10;END' />
      </column>
      <column caption='Keep Count' datatype='boolean' name='[Calculation_1474084509194285056]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [observed_source] == &quot;PeMS&quot; then&#10;[Calculation_2059833904549277696]&#10;ELSE&#10;True&#10;END' />
      </column>
      <column caption='Simulated V/C Ratio' datatype='real' name='[Calculation_1674635396155363329]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[simulated_flow]/[simulated_capacity]' />
      </column>
      <column caption='General Purpose V/C Ratio' datatype='real' name='[Calculation_1674635396155543554]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([simulated_flow]-[simulated_flow_managed])/([simulated_capacity]-[simulated_capacity_managed])' />
      </column>
      <column caption='Simulated Managed Lane Speed Difference' datatype='real' name='[Calculation_1674635396158509059]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([simulated_lanes_managed]&gt;0) then&#10;[simulated_speed_mph_managed]-[simulated_speed_mph]&#10;ELSE&#10;0.0&#10;END' />
      </column>
      <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
      </column>
      <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
      </column>
      <column caption='ODOT Maximum Error (Percent)' datatype='real' name='[Calculation_2059833904554663940]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[odot_maximum_error]/100.0' />
      </column>
      <column caption='Observed Large Truck Flow' datatype='real' name='[Calculation_2298806161870094336]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([observed_vehicle_class]==&quot;Large Trucks&quot;) then&#10;[observed_flow]&#10;ELSE&#10;0&#10;END' />
      </column>
      <column caption='Observed Large Truck VMT' datatype='real' name='[Calculation_2298806161870290945]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2298806161870094336]*[distance_in_miles]' />
      </column>
      <column caption='Bridge Name' datatype='string' name='[Calculation_2298806161906384899]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='case [station_id]&#10;when &quot;404917_W&quot; then &quot;Bay Bridge WB (East Span)&quot;&#10;when &quot;404906_E&quot; then &quot;Bay Bridge EB (East Span)&quot;&#10;when &quot;400683_E&quot; then &quot;San Mateo Bridge EB&quot;&#10;when &quot;400071_W&quot; then &quot;San Mateo Bridge WB&quot;&#10;when &quot;401638_W&quot; then &quot;Carquinez WB&quot;&#10;when &quot;402412_S&quot; then &quot;Benicia SB&quot;&#10;when &quot;402541_N&quot; then &quot;Benicia NB&quot;&#10;ELSE NULL&#10;END' />
      </column>
      <column caption='One-way Flow Error' datatype='real' name='[Calculation_3183270912105508864]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[simulated_flow]-[Calculation_71142829710385152]' />
      </column>
      <column caption='Simulated VMT' datatype='real' name='[Calculation_5914352234883481601]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[simulated_flow]*[distance_in_miles]' />
      </column>
      <column caption='Observed VMT' datatype='real' name='[Calculation_5914352234883608578]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[observed_flow]*[distance_in_miles]' />
      </column>
      <column caption='Error VMT' datatype='real' name='[Calculation_5914352234883801091]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5914352234883481601]-[Calculation_5914352234883608578]' />
      </column>
      <column caption='Simulated Passenger Vehicle VMT' datatype='real' name='[Calculation_5914352234884837385]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([simulated_flow_da]+[simulated_flow_s2]+[simulated_flow_s3])*[distance_in_miles]' />
      </column>
      <column caption='Simulated Large Truck VMT' datatype='real' name='[Calculation_5914352234885140490]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([observed_vehicle_class] == &quot;Large Trucks&quot;) then&#10;[simulated_flow_lrgt]*[distance_in_miles]&#10;ELSE&#10;0&#10;END' />
      </column>
      <column caption='Period Duration' datatype='integer' name='[Calculation_6407074181713776646]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [time_period]&#10;when &quot;am&quot; then 4&#10;when &quot;md&quot; then 5&#10;when &quot;pm&quot; then 4&#10;when &quot;ea&quot; then 3&#10;when &quot;ev&quot; then 5&#10;ELSE&#10;NULL&#10;END' />
      </column>
      <column caption='Simulated VPHPL' datatype='real' name='[Calculation_6407074181713997831]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[simulated_flow]/[Calculation_6407074181713776646]/[simulated_lanes]' />
      </column>
      <column caption='Simulated Capacity (VPHPL)' datatype='real' name='[Calculation_6407074181714128904]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[simulated_capacity]/[Calculation_6407074181713776646]/[simulated_lanes]' />
      </column>
      <column caption='Observed VPHPL' datatype='real' name='[Calculation_6407074181714243593]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[observed_flow]/[Calculation_6407074181713776646]/[simulated_lanes]' />
      </column>
      <column caption='One-way Flow' datatype='real' name='[Calculation_71142829710385152]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ([observed_source] == &quot;Caltrans&quot;) then&#10;[observed_flow]/1.0&#10;ELSE&#10;NULL&#10;END' />
      </column>
      <column caption='Transaction Error' datatype='real' name='[Calculation_958070479470063616]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[simulated_flow]-[observed_toll_transactions]' />
      </column>
      <column caption='Error Large Truck Flow' datatype='real' name='[Error Flow (copy)_1474084509197905923]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[simulated_flow_lrgt]-[Calculation_2298806161870094336]' />
      </column>
      <column caption='Error Large Truck VMT' datatype='real' name='[Error VMT (copy)_2298806161870655490]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5914352234885140490]-[Calculation_2298806161870290945]' />
      </column>
      <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
      <column caption='Bridge Plaza Name' datatype='string' name='[bridge_plaza_name]' role='dimension' type='nominal' />
      <column caption='Distance in Miles' datatype='real' name='[distance_in_miles]' role='measure' type='quantitative' />
      <column caption='Emme A Node Id' datatype='integer' name='[emme_a_node_id]' role='dimension' type='ordinal' />
      <column caption='Emme B Node Id' datatype='integer' name='[emme_b_node_id]' role='dimension' type='ordinal' />
      <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
      <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
      <column caption='Observed Toll Transactions' datatype='real' name='[observed_toll_transactions]' role='measure' type='quantitative' />
      <column caption='Observed Vehicle Class' datatype='string' name='[observed_vehicle_class]' role='dimension' type='nominal' />
      <column caption='ODOT Flow Category' datatype='string' name='[odot_flow_category]' role='dimension' type='nominal' />
      <column caption='Odot Maximum Error' datatype='real' name='[odot_maximum_error]' role='dimension' type='ordinal' />
      <column caption='Simulated Capacity' datatype='real' name='[simulated_capacity]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1.0' value='1 - Freeway' />
          <alias key='2.0' value='2 - Expressway' />
          <alias key='3.0' value='3 - Ramp' />
          <alias key='4.0' value='4 - Divided Arterial' />
          <alias key='5.0' value='5 - Undivided Arterial' />
          <alias key='6.0' value='6 - Collector' />
        </aliases>
      </column>
      <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
      <column caption='Simulated Flow Da' datatype='real' name='[simulated_flow_da]' role='measure' type='quantitative' />
      <column caption='Simulated Flow DA Managed' datatype='real' name='[simulated_flow_da_managed]' role='measure' type='quantitative' />
      <column caption='Simulated Large Truck Flow' datatype='real' name='[simulated_flow_lrgt]' role='measure' type='quantitative' />
      <column caption='Simulated Flow LRGT Managed' datatype='real' name='[simulated_flow_lrgt_managed]' role='measure' type='quantitative' />
      <column caption='Simulated Flow Managed' datatype='real' name='[simulated_flow_managed]' role='measure' type='quantitative' />
      <column caption='Simulated Flow S2' datatype='real' name='[simulated_flow_s2]' role='measure' type='quantitative' />
      <column caption='Simulated Flow S2 Managed' datatype='real' name='[simulated_flow_s2_managed]' role='measure' type='quantitative' />
      <column caption='Simulated Flow S3' datatype='real' name='[simulated_flow_s3]' role='measure' type='quantitative' />
      <column caption='Simulated Flow S3 Managed' datatype='real' name='[simulated_flow_s3_managed]' role='measure' type='quantitative' />
      <column caption='Simulated Flow Trk' datatype='real' name='[simulated_flow_trk]' role='measure' type='quantitative' />
      <column caption='Simulated Flow TRK Managed' datatype='real' name='[simulated_flow_trk_managed]' role='measure' type='quantitative' />
      <column caption='Simulated Lanes' datatype='real' name='[simulated_lanes]' role='measure' type='quantitative' />
      <column caption='Simulated Lanes Managed' datatype='real' name='[simulated_lanes_managed]' role='measure' type='quantitative' />
      <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
          <alias key='&quot;daily&quot;' value='Daily' />
          <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
          <alias key='&quot;ev&quot;' value='EV (Evening)' />
          <alias key='&quot;md&quot;' value='MD (Midday)' />
          <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
        </aliases>
      </column>
      <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
      <column-instance column='[observed_toll_transactions]' derivation='Avg' name='[avg:observed_toll_transactions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[simulated_flow]' derivation='Avg' name='[avg:simulated_flow:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2059833904554663940]' derivation='Median' name='[med:Calculation_2059833904554663940:qk]' pivot='key' type='quantitative' />
      <column-instance column='[simulated_flow]' derivation='Median' name='[med:simulated_flow:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2298806161906384899]' derivation='None' name='[none:Calculation_2298806161906384899:nk]' pivot='key' type='nominal' />
      <column-instance column='[odot_flow_category]' derivation='None' name='[none:odot_flow_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
      <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
      <column-instance column='[observed_toll_transactions]' derivation='Sum' name='[sum:observed_toll_transactions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
      <group name='[Emme A Node Id &amp; Emme B Node Id (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[emme_a_node_id]' />
          <groupfilter function='level-members' level='[emme_b_node_id]' />
        </groupfilter>
      </group>
      <layout common-percentage='1' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2298806161906384899:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bay Bridge EB (East Span)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Mateo Bridge WB&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;San Mateo Bridge EB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carquinez WB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benicia SB&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:simulated_facility_type:ok]' type='shape'>
            <map to=':filled/circle'>
              <bucket>1.0</bucket>
            </map>
            <map to=':filled/square'>
              <bucket>2.0</bucket>
            </map>
            <map to=':filled/times'>
              <bucket>3.0</bucket>
            </map>
            <map to='circle'>
              <bucket>5.0</bucket>
            </map>
            <map to='diamond'>
              <bucket>4.0</bucket>
            </map>
            <map to='plus'>
              <bucket>6.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:odot_flow_category:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#4f6980'>
              <bucket>&quot;0.0-62.5&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;0.0-625.0&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;15000.0-17500.0&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;1750.0-2062.5&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;62.5-150.0&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;2500.0-3500.0&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;26250.0-37500.0&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;350.0-450.0&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;3750.0-5500.0&quot;</bucket>
            </map>
            <map to='#7e756d'>
              <bucket>&quot;12500.0-15000.0&quot;</bucket>
            </map>
            <map to='#7e756d'>
              <bucket>&quot;1500.0-1750.0&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;150.0-250.0&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;17500.0-20625.0&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;2062.5-2625.0&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;625.0-1500.0&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;1500.0-2500.0&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;20625.0-26250.0&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;250.0-350.0&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;2625.0-3750.0&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;7000.0-8500.0&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;850.0-1025.0&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;10250.0-12500.0&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;1250.0-1500.0&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;3500.0-4500.0&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;37500.0-55000.0&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;450.0-562.5&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;1025.0-1250.0&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;8500.0-10250.0&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;4500.0-5625.0&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;55000.0-81250.0&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;562.5-700.0&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;5625.0-7000.0&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;700.0-850.0&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;81250.0-inf&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_toll_transactions:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:simulated_flow:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:time_period:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;ea&quot;</bucket>
            <bucket>&quot;am&quot;</bucket>
            <bucket>&quot;md&quot;</bucket>
            <bucket>&quot;pm&quot;</bucket>
            <bucket>&quot;ev&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='acceptance-roadway-network.geojson' id='acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43'>
            <properties context=''>
              <relation connection='ogrdirect.0x5ortu0pmu39d1cqrchy042qflm' name='acceptance-roadway-network.geojson' table='[acceptance-roadway-network.geojson]' type='table'>
                <columns>
                  <column datatype='integer' name='emme_a_node_id' ordinal='0' />
                  <column datatype='integer' name='emme_b_node_id' ordinal='1' />
                  <column datatype='string' name='station_id' ordinal='2' />
                  <column datatype='string' name='pems_station_type' ordinal='3' />
                  <column datatype='real' name='distance_in_miles' ordinal='4' />
                  <column datatype='string' name='key_location_name' ordinal='5' />
                  <column datatype='string' name='key_location_direction' ordinal='6' />
                  <column datatype='string' name='bridge_plaza_name' ordinal='7' />
                  <column datatype='string' name='time_period' ordinal='8' />
                  <column datatype='string' name='observed_source' ordinal='9' />
                  <column datatype='real' name='observed_flow' ordinal='10' />
                  <column datatype='string' name='observed_vehicle_class' ordinal='11' />
                  <column datatype='real' name='observed_toll_transactions' ordinal='12' />
                  <column datatype='real' name='simulated_flow' ordinal='13' />
                  <column datatype='real' name='simulated_flow_da' ordinal='14' />
                  <column datatype='real' name='simulated_flow_s2' ordinal='15' />
                  <column datatype='real' name='simulated_flow_s3' ordinal='16' />
                  <column datatype='real' name='simulated_flow_lrgt' ordinal='17' />
                  <column datatype='real' name='simulated_flow_trk' ordinal='18' />
                  <column datatype='real' name='simulated_flow_managed' ordinal='19' />
                  <column datatype='real' name='simulated_flow_da_managed' ordinal='20' />
                  <column datatype='real' name='simulated_flow_s2_managed' ordinal='21' />
                  <column datatype='real' name='simulated_flow_s3_managed' ordinal='22' />
                  <column datatype='real' name='simulated_flow_lrgt_managed' ordinal='23' />
                  <column datatype='real' name='simulated_flow_trk_managed' ordinal='24' />
                  <column datatype='real' name='simulated_capacity' ordinal='25' />
                  <column datatype='real' name='simulated_capacity_managed' ordinal='26' />
                  <column datatype='real' name='simulated_facility_type' ordinal='27' />
                  <column datatype='real' name='simulated_lanes' ordinal='28' />
                  <column datatype='real' name='simulated_lanes_managed' ordinal='29' />
                  <column datatype='real' name='simulated_speed_mph' ordinal='30' />
                  <column datatype='real' name='simulated_speed_mph_managed' ordinal='31' />
                  <column datatype='string' name='odot_flow_category' ordinal='32' />
                  <column datatype='real' name='odot_maximum_error' ordinal='33' />
                  <column datatype='spatial' name='Geometry' ordinal='34' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='10 - Bridges (PeMS)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 10: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle flows at each of the BATA bridges plus the Golden Gate Bridge should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 10 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='Bridge Name' datatype='string' name='[Calculation_2298806161906384899]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [station_id]&#10;when &quot;404917_W&quot; then &quot;Bay Bridge WB (East Span)&quot;&#10;when &quot;404906_E&quot; then &quot;Bay Bridge EB (East Span)&quot;&#10;when &quot;400683_E&quot; then &quot;San Mateo Bridge EB&quot;&#10;when &quot;400071_W&quot; then &quot;San Mateo Bridge WB&quot;&#10;when &quot;401638_W&quot; then &quot;Carquinez WB&quot;&#10;when &quot;402412_S&quot; then &quot;Benicia SB&quot;&#10;when &quot;402541_N&quot; then &quot;Benicia NB&quot;&#10;ELSE NULL&#10;END' />
            </column>
            <column caption='[Error Flow]/[Observed Flow]' datatype='real' name='[Calculation_2298806161907429380]' role='measure' type='quantitative' user:unnamed='10 - Bridges'>
              <calculation class='tableau' formula='[Calculation_2059833904552247297]/[observed_flow]' />
            </column>
            <column-instance column='[Calculation_2298806161907429380]' derivation='Avg' name='[avg:Calculation_2298806161907429380:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2298806161906384899]' derivation='None' name='[none:Calculation_2298806161906384899:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2059833904552247297]' derivation='Sum' name='[sum:Calculation_2059833904552247297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161907429380:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161907429380:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2298806161906384899:nk]' />
              <groupfilter function='member' level='[none:Calculation_2298806161906384899:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;am&quot;' />
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]' value='27' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='89' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161907429380:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]' value='176' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</rows>
        <cols>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names])</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{B9912167-F121-4228-964A-3BA06DF25292}' />
    </worksheet>
    <worksheet name='10 - Bridges (PeMS) Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 10: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle flows at each of the BATA bridges plus the Golden Gate Bridge should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 10 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='Bridge Name' datatype='string' name='[Calculation_2298806161906384899]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [station_id]&#10;when &quot;404917_W&quot; then &quot;Bay Bridge WB (East Span)&quot;&#10;when &quot;404906_E&quot; then &quot;Bay Bridge EB (East Span)&quot;&#10;when &quot;400683_E&quot; then &quot;San Mateo Bridge EB&quot;&#10;when &quot;400071_W&quot; then &quot;San Mateo Bridge WB&quot;&#10;when &quot;401638_W&quot; then &quot;Carquinez WB&quot;&#10;when &quot;402412_S&quot; then &quot;Benicia SB&quot;&#10;when &quot;402541_N&quot; then &quot;Benicia NB&quot;&#10;ELSE NULL&#10;END' />
            </column>
            <column caption='[Error Flow]/[Observed Flow]' datatype='real' name='[Calculation_2298806161918603271]' role='measure' type='quantitative' user:unnamed='10 - Bridges Chart'>
              <calculation class='tableau' formula='[Calculation_2059833904552247297]/[observed_flow]' />
            </column>
            <column-instance column='[Calculation_2298806161906384899]' derivation='None' name='[none:Calculation_2298806161906384899:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2298806161918603271]' derivation='Sum' name='[sum:Calculation_2298806161918603271:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_2298806161906384899:nk]' />
              <groupfilter function='member' level='[none:Calculation_2298806161906384899:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]' value='187' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]' value='82' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161918603271:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161918603271:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Observed Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Simulated Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Percent Error:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161918603271:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='304' />
                <format attr='maxheight' value='304' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161918603271:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Observed Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Simulated Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Percent Error:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161918603271:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161918603271:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Observed Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Simulated Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Percent Error:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161918603271:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value='asterisk' />
                <format attr='mark-transparency' value='193' />
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk] + [federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</cols>
      </table>
      <simple-id uuid='{F1F0A55E-3F7F-45FB-93A1-98CCD401614D}' />
    </worksheet>
    <worksheet name='10 - Bridges (Transactions)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 10: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle flows at each of the BATA bridges plus the Golden Gate Bridge should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 10 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Transaction Error' datatype='real' name='[Calculation_958070479470063616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_toll_transactions]' />
            </column>
            <column caption='[Transaction Error]/[Observed Toll Transactions]' datatype='real' name='[Calculation_958070479470522369]' role='measure' type='quantitative' user:unnamed='10 - Bridges (Transactions)'>
              <calculation class='tableau' formula='[Calculation_958070479470063616]/[observed_toll_transactions]' />
            </column>
            <column-instance column='[Calculation_958070479470063616]' derivation='Avg' name='[avg:Calculation_958070479470063616:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_958070479470522369]' derivation='Avg' name='[avg:Calculation_958070479470522369:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_toll_transactions]' derivation='Avg' name='[avg:observed_toll_transactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Avg' name='[avg:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Bridge Plaza Name' datatype='string' name='[bridge_plaza_name]' role='dimension' type='nominal' />
            <column-instance column='[bridge_plaza_name]' derivation='None' name='[none:bridge_plaza_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Toll Transactions' datatype='real' name='[observed_toll_transactions]' role='measure' type='quantitative' />
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_958070479470522369]' derivation='Sum' name='[sum:Calculation_958070479470522369:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479470063616:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479470522369:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479470063616:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_958070479470522369:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:bridge_plaza_name:nk]' />
              <groupfilter function='member' level='[none:bridge_plaza_name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter from='&quot;am&quot;' function='range' level='[none:time_period:nk]' to='&quot;pm&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='125' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='34' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_958070479470522369:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479470522369:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='76' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='96' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]' value='168' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{7B2F3EBC-20CC-4551-BF96-735A8B29FCF1}' />
    </worksheet>
    <worksheet name='10 - Bridges (Transactions) Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 10: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle flows at each of the BATA bridges plus the Golden Gate Bridge should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 10 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Transaction Error' datatype='real' name='[Calculation_958070479470063616]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_toll_transactions]' />
            </column>
            <column caption='[Transaction Error]/[Observed Toll Transactions]' datatype='real' name='[Calculation_958070479471456258]' role='measure' type='quantitative' user:unnamed='10 - Bridges (PeMS) Chart (2)'>
              <calculation class='tableau' formula='[Calculation_958070479470063616]/[observed_toll_transactions]' />
            </column>
            <column-instance column='[Calculation_958070479471456258]' derivation='Avg' name='[avg:Calculation_958070479471456258:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_toll_transactions]' derivation='Avg' name='[avg:observed_toll_transactions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Avg' name='[avg:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Bridge Plaza Name' datatype='string' name='[bridge_plaza_name]' role='dimension' type='nominal' />
            <column-instance column='[bridge_plaza_name]' derivation='None' name='[none:bridge_plaza_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Toll Transactions' datatype='real' name='[observed_toll_transactions]' role='measure' type='quantitative' />
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column-instance column='[observed_toll_transactions]' derivation='Sum' name='[sum:observed_toll_transactions:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:bridge_plaza_name:nk]' />
              <groupfilter function='member' level='[none:bridge_plaza_name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]' value='55' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]' value='84' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479471456258:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479471456258:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]>]]></run>
                <run indent='3690'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='3690'>Observed Transactions:&#9;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='11' indent='3690'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk]>]]></run>
                <run indent='3690'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='3690'>Simulated Flow:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='11' indent='3690'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]>]]></run>
                <run indent='3690'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='3690'>Percent Error:&#9;</run>
                <run bold='true' fontcolor='#000000' fontsize='11' indent='3690'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479471456258:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='436' />
                <format attr='maxheight' value='436' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479471456258:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_toll_transactions:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]>]]></run>
                <run indent='3690'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='3690'>Observed Transactions:&#9;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='11' indent='3690'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk]>]]></run>
                <run indent='3690'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='3690'>Simulated Flow:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='11' indent='3690'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]>]]></run>
                <run indent='3690'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='3690'>Percent Error:&#9;</run>
                <run bold='true' fontcolor='#000000' fontsize='11' indent='3690'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479471456258:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value='asterisk' />
                <format attr='mark-transparency' value='193' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479471456258:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk]' />
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]>]]></run>
                <run indent='3690'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='3690'>Observed Transactions:&#9;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='11' indent='3690'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk]>]]></run>
                <run indent='3690'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='3690'>Simulated Flow:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='11' indent='3690'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]>]]></run>
                <run indent='3690'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='3690'>Percent Error:&#9;</run>
                <run bold='true' fontcolor='#000000' fontsize='11' indent='3690'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_958070479471456258:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk] + [federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]</cols>
      </table>
      <simple-id uuid='{2F279417-36C9-43EA-9419-F1B9B5F0A5DB}' />
    </worksheet>
    <worksheet name='11 - Arterials &amp; Exp. Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 11: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle flows at each of these key locations should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 30 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Expressway or Arterial Name' datatype='string' name='[Bridge Name (copy)_2298806161914040326]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [station_id]&#10;when &quot;402043_E&quot; then &quot;Highway 37 EB (Marin)&quot;&#10;when &quot;402042_W&quot; then &quot;Highway 37 WB (Marin)&quot;&#10;ELSE NULL&#10;END' />
            </column>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='[Error Flow]/[Observed Flow]' datatype='real' name='[Calculation_2298806161918603271]' role='measure' type='quantitative' user:unnamed='10 - Bridges Chart'>
              <calculation class='tableau' formula='[Calculation_2059833904552247297]/[observed_flow]' />
            </column>
            <column-instance column='[Calculation_2298806161918603271]' derivation='Avg' name='[avg:Calculation_2298806161918603271:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bridge Name (copy)_2298806161914040326]' derivation='None' name='[none:Bridge Name (copy)_2298806161914040326:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Bridge Name (copy)_2298806161914040326:nk]' />
              <groupfilter function='member' level='[none:Bridge Name (copy)_2298806161914040326:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]' value='103' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]' value='280' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161918603271:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161918603271:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Observed Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Simulated Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Percent Error:&#9;</run>
                <run bold='true' fontcolor='#787878' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161918603271:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='560' />
                <format attr='maxwidth' value='560' />
                <format attr='minheight' value='416' />
                <format attr='maxheight' value='416' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161918603271:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Observed Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Simulated Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Percent Error:&#9;</run>
                <run bold='true' fontcolor='#787878' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161918603271:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161918603271:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Observed Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Simulated Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]>]]></run>
                <run indent='2520'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2520'>Percent Error:&#9;</run>
                <run bold='true' fontcolor='#787878' fontsize='11' indent='2520'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161918603271:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='shape' value='asterisk' />
                <format attr='mark-transparency' value='193' />
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk] + [federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]</cols>
      </table>
      <simple-id uuid='{450499CE-8894-46C6-A5F9-A20A566620A9}' />
    </worksheet>
    <worksheet name='11 - Arterials &amp; Expressways'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 11: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle flows at each of these key locations should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 30 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Expressway or Arterial Name' datatype='string' name='[Bridge Name (copy)_2298806161914040326]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='case [station_id]&#10;when &quot;402043_E&quot; then &quot;Highway 37 EB (Marin)&quot;&#10;when &quot;402042_W&quot; then &quot;Highway 37 WB (Marin)&quot;&#10;ELSE NULL&#10;END' />
            </column>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='[Error Flow]/[Observed Flow]' datatype='real' name='[Calculation_2298806161907429380]' role='measure' type='quantitative' user:unnamed='10 - Bridges'>
              <calculation class='tableau' formula='[Calculation_2059833904552247297]/[observed_flow]' />
            </column>
            <column-instance column='[Calculation_2298806161907429380]' derivation='Avg' name='[avg:Calculation_2298806161907429380:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bridge Name (copy)_2298806161914040326]' derivation='None' name='[none:Bridge Name (copy)_2298806161914040326:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2059833904552247297]' derivation='Sum' name='[sum:Calculation_2059833904552247297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161907429380:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161907429380:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Bridge Name (copy)_2298806161914040326:nk]' />
              <groupfilter function='member' level='[none:Bridge Name (copy)_2298806161914040326:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;am&quot;' />
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='87' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]' value='36' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161907429380:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='60' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]' value='172' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]</rows>
        <cols>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names])</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{577630FA-5F08-4542-A106-FE70801D4C09}' />
    </worksheet>
    <worksheet name='12 - Freeways'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 12: Percent root mean square error in </run>
            <run bold='true'>daily</run>
            <run> vehicle flows on Freeways and Arterials with high-quality counts should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 10 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='sqrt(avg([Error Flow]*[Error Flow]))/avg([Observed Flow])' datatype='real' name='[Calculation_2298806161939263497]' role='measure' type='quantitative' user:unnamed='12 - Freeways'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_2059833904552247297]*[Calculation_2059833904552247297]))/avg([observed_flow])' />
            </column>
            <column caption='avg([Error Flow])/avg([Observed Flow])' datatype='real' name='[Calculation_2298806161940418575]' role='measure' type='quantitative' user:unnamed='12 - Freeways'>
              <calculation class='tableau' formula='avg([Calculation_2059833904552247297])/avg([observed_flow])' />
            </column>
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station_id]' derivation='None' name='[none:station_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2059833904552247297]' derivation='Sum' name='[sum:Calculation_2059833904552247297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2298806161939263497]' derivation='User' name='[usr:Calculation_2298806161939263497:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2298806161940418575]' derivation='User' name='[usr:Calculation_2298806161940418575:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2298806161940418575:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2298806161939263497:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2298806161940418575:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2298806161939263497:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]'>
            <groupfilter function='member' level='[none:Calculation_2059833904549277696:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:simulated_facility_type:ok]' member='1.0' />
              <groupfilter function='member' level='[none:simulated_facility_type:ok]' member='2.0' />
              <groupfilter function='member' level='[none:simulated_facility_type:ok]' member='4.0' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:station_id:nk]' />
              <groupfilter function='member' level='[none:station_id:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='33' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='130' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2298806161939263497:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2298806161940418575:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='152' />
            <format attr='height-header' value='36' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='88' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='156' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
        </subtotals>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{016C1523-683A-47C6-9BDD-E0603864B4E8}' />
    </worksheet>
    <worksheet name='7 - Pct RMSE Daily'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 7: Percent root mean square error by volume category for </run>
            <run bold='true'>daily</run>
            <run> outcomes should meet the </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Ohio DOT RMSE Standard</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='sqrt(avg([Error Flow]*[Error Flow]))/avg([Observed Flow])' datatype='real' name='[Calculation_2059833904552968195]' role='measure' type='quantitative' user:unnamed='7 - Pct RMSE Daily'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_2059833904552247297]*[Calculation_2059833904552247297]))/avg([observed_flow])' />
            </column>
            <column caption='ODOT Maximum Error (Percent)' datatype='real' name='[Calculation_2059833904554663940]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[odot_maximum_error]/100.0' />
            </column>
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Avg' name='[avg:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Avg' name='[avg:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2059833904554663940]' derivation='Median' name='[med:Calculation_2059833904554663940:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[odot_flow_category]' derivation='None' name='[none:odot_flow_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='ODOT Flow Category' datatype='string' name='[odot_flow_category]' role='dimension' type='nominal' />
            <column caption='Odot Maximum Error' datatype='real' name='[odot_maximum_error]' role='dimension' type='ordinal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2059833904554663940]' derivation='Sum' name='[sum:Calculation_2059833904554663940:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2059833904552968195]' derivation='User' name='[usr:Calculation_2059833904552968195:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904554663940:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]'>
            <groupfilter function='member' level='[none:Calculation_2059833904549277696:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:odot_flow_category:nk]' />
              <groupfilter function='member' level='[none:odot_flow_category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='112' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' value='26' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='80' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' value='180' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{5F7CA1FA-8A7D-456C-B3F2-A9E638A1CFDB}' />
    </worksheet>
    <worksheet name='7 - Pct RMSE Daily Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 7: Percent root mean square error by volume category for </run>
            <run bold='true'>daily</run>
            <run> outcomes should meet the </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Ohio DOT RMSE Standard</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='sqrt(avg([Error Flow]*[Error Flow]))/avg([Observed Flow])' datatype='real' name='[Calculation_2059833904552968195]' role='measure' type='quantitative' user:unnamed='7 - Pct RMSE Daily'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_2059833904552247297]*[Calculation_2059833904552247297]))/avg([observed_flow])' />
            </column>
            <column caption='ODOT Maximum Error (Percent)' datatype='real' name='[Calculation_2059833904554663940]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[odot_maximum_error]/100.0' />
            </column>
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column-instance column='[odot_flow_category]' derivation='Attribute' name='[attr:odot_flow_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2059833904554663940]' derivation='Median' name='[med:Calculation_2059833904554663940:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[odot_flow_category]' derivation='None' name='[none:odot_flow_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='ODOT Flow Category' datatype='string' name='[odot_flow_category]' role='dimension' type='nominal' />
            <column caption='Odot Maximum Error' datatype='real' name='[odot_maximum_error]' role='dimension' type='ordinal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2059833904552968195]' derivation='User' name='[usr:Calculation_2059833904552968195:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]'>
            <groupfilter function='member' level='[none:Calculation_2059833904549277696:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:odot_flow_category:nk]' />
              <groupfilter function='member' level='[none:odot_flow_category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' value='72' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' value='139' />
            <format attr='title' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' scope='rows' value='Percent Root Mean Square Error' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' field-type='quantitative' max='2.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' scope='rows' value='Ohio DOT Maximum' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' value='72' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' value='38' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' value='p0.0%' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' value='-90' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Category:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Observations:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Pct RMSE:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Goal Pct RMSE:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='352' />
                <format attr='maxheight' value='352' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Category:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Observations:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Pct RMSE:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Goal Pct RMSE:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.5082871913909912' />
                <format attr='shape' value='asterisk' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Category:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Observations:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Pct RMSE:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Goal Pct RMSE:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.813093900680542' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk] + [federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</cols>
      </table>
      <simple-id uuid='{D4470DB3-E58F-480E-8412-50A195B2523E}' />
    </worksheet>
    <worksheet name='8 - Pct RMSE Time-of-day '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 8: Percent root mean square error by volume category for </run>
            <run bold='true'>time-period-specific</run>
            <run> outcomes should meet the </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Ohio DOT RMSE Standard</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='sqrt(avg([Error Flow]*[Error Flow]))/avg([Observed Flow])' datatype='real' name='[Calculation_2059833904552968195]' role='measure' type='quantitative' user:unnamed='7 - Pct RMSE Daily'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_2059833904552247297]*[Calculation_2059833904552247297]))/avg([observed_flow])' />
            </column>
            <column caption='ODOT Maximum Error (Percent)' datatype='real' name='[Calculation_2059833904554663940]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[odot_maximum_error]/100.0' />
            </column>
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Avg' name='[avg:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Avg' name='[avg:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2059833904554663940]' derivation='Median' name='[med:Calculation_2059833904554663940:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_flow]' derivation='None' name='[none:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[odot_flow_category]' derivation='None' name='[none:odot_flow_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[odot_maximum_error]' derivation='None' name='[none:odot_maximum_error:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='ODOT Flow Category' datatype='string' name='[odot_flow_category]' role='dimension' type='nominal' />
            <column caption='Odot Maximum Error' datatype='real' name='[odot_maximum_error]' role='dimension' type='ordinal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2059833904554663940]' derivation='Sum' name='[sum:Calculation_2059833904554663940:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2059833904552968195]' derivation='User' name='[usr:Calculation_2059833904552968195:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904554663940:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]'>
            <groupfilter function='member' level='[none:Calculation_2059833904549277696:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]' included-values='in-range'>
            <min>182.5</min>
            <max>148687.75</max>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:odot_flow_category:nk]' />
              <groupfilter function='member' level='[none:odot_flow_category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;am&quot;' />
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;md&quot;' />
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;pm&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_maximum_error:ok]' value='27' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='112' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='80' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' value='120' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_maximum_error:ok]' value='68' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk] / ([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_maximum_error:ok]))</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{FF61317B-1CE5-45F9-ACD5-65A8D370EE4F}' />
    </worksheet>
    <worksheet name='8 - Pct RMSE Time-of-day Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 8: Percent root mean square error by volume category for </run>
            <run bold='true'>daily</run>
            <run> outcomes should meet the </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Ohio DOT RMSE Standard</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='sqrt(avg([Error Flow]*[Error Flow]))/avg([Observed Flow])' datatype='real' name='[Calculation_2059833904552968195]' role='measure' type='quantitative' user:unnamed='7 - Pct RMSE Daily'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_2059833904552247297]*[Calculation_2059833904552247297]))/avg([observed_flow])' />
            </column>
            <column caption='ODOT Maximum Error (Percent)' datatype='real' name='[Calculation_2059833904554663940]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[odot_maximum_error]/100.0' />
            </column>
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column-instance column='[odot_flow_category]' derivation='Attribute' name='[attr:odot_flow_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2059833904554663940]' derivation='Median' name='[med:Calculation_2059833904554663940:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_flow]' derivation='None' name='[none:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[odot_flow_category]' derivation='None' name='[none:odot_flow_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='ODOT Flow Category' datatype='string' name='[odot_flow_category]' role='dimension' type='nominal' />
            <column caption='Odot Maximum Error' datatype='real' name='[odot_maximum_error]' role='dimension' type='ordinal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2059833904552968195]' derivation='User' name='[usr:Calculation_2059833904552968195:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]'>
            <groupfilter function='member' level='[none:Calculation_2059833904549277696:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]' included-values='in-range'>
            <min>182.5</min>
            <max>148687.75</max>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:odot_flow_category:nk]' />
              <groupfilter function='member' level='[none:odot_flow_category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;am&quot;' />
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;md&quot;' />
              <groupfilter function='member' level='[none:time_period:nk]' member='&quot;pm&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' value='116' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' value='84' />
            <format attr='title' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' scope='rows' value='Percent Root Mean Square Error' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' field-type='quantitative' max='2.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' scope='rows' value='Ohio DOT Maximum' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' value='34' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='76' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='84' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='vertical-align' value='bottom' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' value='-90' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Category:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Observations:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Pct RMSE:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Goal Pct RMSE:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Category:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Observations:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Pct RMSE:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Goal Pct RMSE:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.1270718574523926' />
                <format attr='shape' value='asterisk' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Category:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:odot_flow_category:nk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Observations:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Pct RMSE:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Goal Pct RMSE:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.813093900680542' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk] * ([federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2059833904552968195:qk] + [federated.0u3lcsj12sliw51gvvfvc1enpi25].[med:Calculation_2059833904554663940:qk]))</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</cols>
      </table>
      <simple-id uuid='{41F14365-2419-4D76-BE6C-C564749AAE73}' />
    </worksheet>
    <worksheet name='9 - VMT by Vehicle Type (Cars)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 9: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle miles traveled segmented by vehicle type (passenger cars, large trucks) should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 10 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Keep Count' datatype='boolean' name='[Calculation_1474084509194285056]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [observed_source] == &quot;PeMS&quot; then&#10;[Calculation_2059833904549277696]&#10;ELSE&#10;True&#10;END' />
            </column>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Observed Large Truck Flow' datatype='real' name='[Calculation_2298806161870094336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_vehicle_class]==&quot;Large Trucks&quot;) then&#10;[observed_flow]&#10;ELSE&#10;0&#10;END' />
            </column>
            <column caption='Observed Large Truck VMT' datatype='real' name='[Calculation_2298806161870290945]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2298806161870094336]*[distance_in_miles]' />
            </column>
            <column caption='Simulated VMT' datatype='real' name='[Calculation_5914352234883481601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]*[distance_in_miles]' />
            </column>
            <column caption='Observed VMT' datatype='real' name='[Calculation_5914352234883608578]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[observed_flow]*[distance_in_miles]' />
            </column>
            <column caption='Error VMT' datatype='real' name='[Calculation_5914352234883801091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5914352234883481601]-[Calculation_5914352234883608578]' />
            </column>
            <column caption='Simulated Passenger Vehicle VMT' datatype='real' name='[Calculation_5914352234884837385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([simulated_flow_da]+[simulated_flow_s2]+[simulated_flow_s3])*[distance_in_miles]' />
            </column>
            <column caption='Simulated Large Truck VMT' datatype='real' name='[Calculation_5914352234885140490]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_vehicle_class] == &quot;Large Trucks&quot;) then&#10;[simulated_flow_lrgt]*[distance_in_miles]&#10;ELSE&#10;0&#10;END' />
            </column>
            <column caption='sum([Error VMT])/sum([Observed VMT])' datatype='real' name='[Calculation_6407074181689937922]' role='measure' type='quantitative' user:unnamed='VMT Table'>
              <calculation class='tableau' formula='sum([Calculation_5914352234883801091])/sum([Calculation_5914352234883608578])' />
            </column>
            <column caption='Distance in Miles' datatype='real' name='[distance_in_miles]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1474084509194285056]' derivation='None' name='[none:Calculation_1474084509194285056:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_flow]' derivation='None' name='[none:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_source]' derivation='None' name='[none:observed_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_vehicle_class]' derivation='None' name='[none:observed_vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='Observed Vehicle Class' datatype='string' name='[observed_vehicle_class]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow Da' datatype='real' name='[simulated_flow_da]' role='measure' type='quantitative' />
            <column caption='Simulated Large Truck Flow' datatype='real' name='[simulated_flow_lrgt]' role='measure' type='quantitative' />
            <column caption='Simulated Flow S2' datatype='real' name='[simulated_flow_s2]' role='measure' type='quantitative' />
            <column caption='Simulated Flow S3' datatype='real' name='[simulated_flow_s3]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2298806161870290945]' derivation='Sum' name='[sum:Calculation_2298806161870290945:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234883481601]' derivation='Sum' name='[sum:Calculation_5914352234883481601:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234883608578]' derivation='Sum' name='[sum:Calculation_5914352234883608578:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234883801091]' derivation='Sum' name='[sum:Calculation_5914352234883801091:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234884837385]' derivation='Sum' name='[sum:Calculation_5914352234884837385:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234885140490]' derivation='Sum' name='[sum:Calculation_5914352234885140490:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_6407074181689937922]' derivation='User' name='[usr:Calculation_6407074181689937922:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883608578:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883481601:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234884837385:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883801091:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181689937922:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883608578:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883481601:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234884837385:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234885140490:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870290945:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883801091:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181689937922:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]'>
            <groupfilter function='member' level='[none:Calculation_1474084509194285056:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>44289.0</max>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]'>
            <groupfilter function='member' level='[none:observed_vehicle_class:nk]' member='&quot;All Vehicles&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='110' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='82' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]' value='45' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181689937922:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='104' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='156' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='156' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]' value='120' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
        </subtotals>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{EC85161D-0245-4DAD-869A-A8E3EF4D06B6}' />
    </worksheet>
    <worksheet name='9 - VMT by Vehicle Type (Trucks)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 9: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle miles traveled segmented by vehicle type (passenger cars, large trucks) should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 10 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='sum([Error Large Truck VMT])/sum([Observed Large Truck VMT])' datatype='real' name='[Calculation_1474084509196955650]' role='measure' type='quantitative' user:unnamed='9 - VMT by Vehicle Type (Trucks)'>
              <calculation class='tableau' formula='sum([Error VMT (copy)_2298806161870655490])/sum([Calculation_2298806161870290945])' />
            </column>
            <column caption='Observed Large Truck Flow' datatype='real' name='[Calculation_2298806161870094336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_vehicle_class]==&quot;Large Trucks&quot;) then&#10;[observed_flow]&#10;ELSE&#10;0&#10;END' />
            </column>
            <column caption='Observed Large Truck VMT' datatype='real' name='[Calculation_2298806161870290945]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2298806161870094336]*[distance_in_miles]' />
            </column>
            <column caption='Simulated Large Truck VMT' datatype='real' name='[Calculation_5914352234885140490]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_vehicle_class] == &quot;Large Trucks&quot;) then&#10;[simulated_flow_lrgt]*[distance_in_miles]&#10;ELSE&#10;0&#10;END' />
            </column>
            <column caption='Error Large Truck VMT' datatype='real' name='[Error VMT (copy)_2298806161870655490]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5914352234885140490]-[Calculation_2298806161870290945]' />
            </column>
            <column-instance column='[Calculation_2298806161870094336]' derivation='Avg' name='[avg:Calculation_2298806161870094336:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_lrgt]' derivation='Avg' name='[avg:simulated_flow_lrgt:qk]' pivot='key' type='quantitative' />
            <column caption='Distance in Miles' datatype='real' name='[distance_in_miles]' role='measure' type='quantitative' />
            <column-instance column='[observed_source]' derivation='None' name='[none:observed_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_vehicle_class]' derivation='None' name='[none:observed_vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='Observed Vehicle Class' datatype='string' name='[observed_vehicle_class]' role='dimension' type='nominal' />
            <column caption='Simulated Large Truck Flow' datatype='real' name='[simulated_flow_lrgt]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2298806161870290945]' derivation='Sum' name='[sum:Calculation_2298806161870290945:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234885140490]' derivation='Sum' name='[sum:Calculation_5914352234885140490:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Error VMT (copy)_2298806161870655490]' derivation='Sum' name='[sum:Error VMT (copy)_2298806161870655490:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1474084509196955650]' derivation='User' name='[usr:Calculation_1474084509196955650:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870290945:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234885140490:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Error VMT (copy)_2298806161870655490:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509196955650:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161870094336:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_lrgt:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870290945:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234885140490:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Error VMT (copy)_2298806161870655490:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509196955650:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_2298806161870094336:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_lrgt:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]'>
            <groupfilter function='member' level='[none:observed_vehicle_class:nk]' member='&quot;Large Trucks&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='97' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='82' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]' value='59' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509196955650:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='104' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='156' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='156' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]' value='132' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
        </subtotals>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{FAA0CAD8-B054-4437-AAA1-C8BFFEF2B8DE}' />
    </worksheet>
    <worksheet name='Caltrans Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='SUM([One-way Flow Error])/sum([One-way Flow])' datatype='real' name='[Calculation_2228015198849597440]' role='measure' type='quantitative' user:unnamed='Caltrans Table'>
              <calculation class='tableau' formula='SUM([Calculation_3183270912105508864])/sum([Calculation_71142829710385152])' />
            </column>
            <column caption='One-way Flow Error' datatype='real' name='[Calculation_3183270912105508864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[Calculation_71142829710385152]' />
            </column>
            <column caption='One-way Flow' datatype='real' name='[Calculation_71142829710385152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_source] == &quot;Caltrans&quot;) then&#10;[observed_flow]/1.0&#10;ELSE&#10;NULL&#10;END' />
            </column>
            <column-instance column='[observed_source]' derivation='None' name='[none:observed_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_vehicle_class]' derivation='None' name='[none:observed_vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='Observed Vehicle Class' datatype='string' name='[observed_vehicle_class]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow Trk' datatype='real' name='[simulated_flow_trk]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3183270912105508864]' derivation='Sum' name='[sum:Calculation_3183270912105508864:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_71142829710385152]' derivation='Sum' name='[sum:Calculation_71142829710385152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_trk]' derivation='Sum' name='[sum:simulated_flow_trk:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2228015198849597440]' derivation='User' name='[usr:Calculation_2228015198849597440:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_71142829710385152:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_3183270912105508864:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2228015198849597440:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_71142829710385152:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_3183270912105508864:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2228015198849597440:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_trk:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]'>
            <groupfilter function='member' level='[none:observed_source:nk]' member='&quot;Caltrans&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]'>
            <groupfilter function='member' level='[none:observed_vehicle_class:nk]' member='&quot;All Vehicles&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>147597049.625</max>
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='43' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='32' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='96' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2228015198849597440:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='148' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='60' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='104' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='vertical-align' value='bottom' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{EEA4C70C-A264-4201-9D36-18E0A27D5542}' />
    </worksheet>
    <worksheet name='Caltrans Truck Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='SUM([One-way Flow Error])/sum([One-way Flow])' datatype='real' name='[Calculation_2228015198849597440]' role='measure' type='quantitative' user:unnamed='Caltrans Table'>
              <calculation class='tableau' formula='SUM([Calculation_3183270912105508864])/sum([Calculation_71142829710385152])' />
            </column>
            <column caption='SUM([Error Large Truck Flow])/sum([Observed Large Truck Flow])' datatype='real' name='[Calculation_2228015198851321857]' role='measure' type='quantitative' user:unnamed='Caltrans Truck Table'>
              <calculation class='tableau' formula='SUM([Error Flow (copy)_1474084509197905923])/sum([Calculation_2298806161870094336])' />
            </column>
            <column caption='Observed Large Truck Flow' datatype='real' name='[Calculation_2298806161870094336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_vehicle_class]==&quot;Large Trucks&quot;) then&#10;[observed_flow]&#10;ELSE&#10;0&#10;END' />
            </column>
            <column caption='One-way Flow Error' datatype='real' name='[Calculation_3183270912105508864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[Calculation_71142829710385152]' />
            </column>
            <column caption='One-way Flow' datatype='real' name='[Calculation_71142829710385152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_source] == &quot;Caltrans&quot;) then&#10;[observed_flow]/1.0&#10;ELSE&#10;NULL&#10;END' />
            </column>
            <column caption='Error Large Truck Flow' datatype='real' name='[Error Flow (copy)_1474084509197905923]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow_lrgt]-[Calculation_2298806161870094336]' />
            </column>
            <column-instance column='[observed_source]' derivation='None' name='[none:observed_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_vehicle_class]' derivation='None' name='[none:observed_vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='Observed Vehicle Class' datatype='string' name='[observed_vehicle_class]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Large Truck Flow' datatype='real' name='[simulated_flow_lrgt]' role='measure' type='quantitative' />
            <column caption='Simulated Flow Trk' datatype='real' name='[simulated_flow_trk]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2298806161870094336]' derivation='Sum' name='[sum:Calculation_2298806161870094336:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Error Flow (copy)_1474084509197905923]' derivation='Sum' name='[sum:Error Flow (copy)_1474084509197905923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_lrgt]' derivation='Sum' name='[sum:simulated_flow_lrgt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_trk]' derivation='Sum' name='[sum:simulated_flow_trk:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2228015198849597440]' derivation='User' name='[usr:Calculation_2228015198849597440:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2228015198851321857]' derivation='User' name='[usr:Calculation_2228015198851321857:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870094336:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_lrgt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Error Flow (copy)_1474084509197905923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2228015198851321857:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870094336:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_lrgt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_trk:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Error Flow (copy)_1474084509197905923:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2228015198849597440:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]'>
            <groupfilter function='member' level='[none:observed_source:nk]' member='&quot;Caltrans&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]'>
            <groupfilter function='member' level='[none:observed_vehicle_class:nk]' member='&quot;Large Trucks&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>147597049.625</max>
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='43' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='30' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='116' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2228015198849597440:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_2228015198851321857:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='160' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='60' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='124' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{6C0CAA1E-1B8B-43C0-A54C-97B7AF7EE240}' />
    </worksheet>
    <worksheet name='Debug Table'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#e15759'>Simulated flow doesn&apos;t seem to be tabulated for Daily</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pems_station_type]' derivation='Attribute' name='[attr:pems_station_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[station_id]' derivation='Attribute' name='[attr:station_id:nk]' pivot='key' type='nominal' />
            <column caption='Emme A Node Id' datatype='integer' name='[emme_a_node_id]' role='dimension' type='ordinal' />
            <column caption='Emme B Node Id' datatype='integer' name='[emme_b_node_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[emme_a_node_id]' derivation='None' name='[none:emme_a_node_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[emme_b_node_id]' derivation='None' name='[none:emme_b_node_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[pems_station_type]' derivation='None' name='[none:pems_station_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station_id]' derivation='None' name='[none:station_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2059833904552247297]' derivation='Sum' name='[sum:Calculation_2059833904552247297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]'>
            <groupfilter function='member' level='[none:Calculation_2059833904549277696:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='64' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]' value='56' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='wrap' value='on' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:pems_station_type:nk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:station_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok] / ([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk] / ([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk] / ([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]))))</rows>
        <cols>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A06F7777-CD06-47B4-B557-4BB5FFA9B830}' />
    </worksheet>
    <worksheet name='Error Map (AM)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AM (Morning Commute) Error Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Simulated V/C Ratio' datatype='real' name='[Calculation_1674635396155363329]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]/[simulated_capacity]' />
            </column>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Simulated VMT' datatype='real' name='[Calculation_5914352234883481601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]*[distance_in_miles]' />
            </column>
            <column caption='Observed VMT' datatype='real' name='[Calculation_5914352234883608578]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[observed_flow]*[distance_in_miles]' />
            </column>
            <column caption='Error VMT' datatype='real' name='[Calculation_5914352234883801091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5914352234883481601]-[Calculation_5914352234883608578]' />
            </column>
            <column caption='sum([Error VMT])/sum([Observed VMT])' datatype='real' name='[Calculation_6407074181693337604]' role='measure' type='quantitative' user:unnamed='V/C Map'>
              <calculation class='tableau' formula='sum([Calculation_5914352234883801091])/sum([Calculation_5914352234883608578])' />
            </column>
            <column caption='Period Duration' datatype='integer' name='[Calculation_6407074181713776646]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [time_period]&#10;when &quot;am&quot; then 4&#10;when &quot;md&quot; then 5&#10;when &quot;pm&quot; then 4&#10;when &quot;ea&quot; then 3&#10;when &quot;ev&quot; then 5&#10;ELSE&#10;NULL&#10;END' />
            </column>
            <column caption='Simulated VPHPL' datatype='real' name='[Calculation_6407074181713997831]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]/[Calculation_6407074181713776646]/[simulated_lanes]' />
            </column>
            <column caption='Simulated Capacity (VPHPL)' datatype='real' name='[Calculation_6407074181714128904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_capacity]/[Calculation_6407074181713776646]/[simulated_lanes]' />
            </column>
            <column caption='Observed VPHPL' datatype='real' name='[Calculation_6407074181714243593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[observed_flow]/[Calculation_6407074181713776646]/[simulated_lanes]' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_facility_type]' derivation='Attribute' name='[attr:simulated_facility_type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station_id]' derivation='Attribute' name='[attr:station_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1674635396155363329]' derivation='Avg' name='[avg:Calculation_1674635396155363329:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6407074181713997831]' derivation='Avg' name='[avg:Calculation_6407074181713997831:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6407074181714128904]' derivation='Avg' name='[avg:Calculation_6407074181714128904:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6407074181714243593]' derivation='Avg' name='[avg:Calculation_6407074181714243593:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Avg' name='[avg:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_capacity]' derivation='Avg' name='[avg:simulated_capacity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Avg' name='[avg:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_lanes]' derivation='Avg' name='[avg:simulated_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_speed_mph]' derivation='Avg' name='[avg:simulated_speed_mph:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Distance in Miles' datatype='real' name='[distance_in_miles]' role='measure' type='quantitative' />
            <column caption='Emme A Node Id' datatype='integer' name='[emme_a_node_id]' role='dimension' type='ordinal' />
            <column caption='Emme B Node Id' datatype='integer' name='[emme_b_node_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[pems_station_type]' derivation='None' name='[none:pems_station_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[station_id]' derivation='None' name='[none:station_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column caption='Simulated Capacity' datatype='real' name='[simulated_capacity]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow Managed' datatype='real' name='[simulated_flow_managed]' role='measure' type='quantitative' />
            <column caption='Simulated Lanes' datatype='real' name='[simulated_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[simulated_speed_mph]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[simulated_flow_managed]' derivation='Sum' name='[sum:simulated_flow_managed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_6407074181693337604]' derivation='User' name='[usr:Calculation_6407074181693337604:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]'>
            <groupfilter function='member' level='[none:Calculation_2059833904549277696:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pems_station_type:nk]' />
              <groupfilter function='member' level='[none:pems_station_type:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]'>
            <groupfilter function='level-members' level='[none:simulated_facility_type:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]'>
            <groupfilter function='level-members' level='[none:station_id:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;am&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Longitude (generated)]' field-type='quantitative' max='-13569196.992135113' min='-13648236.700828627' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Latitude (generated)]' field-type='quantitative' max='4596962.4925621478' min='4522815.7202802533' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181693337604:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181714128904:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181693337604:qk]' max='1.0' min='-1.0' num-steps='5' palette='orange_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181693337604:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[clct:Geometry:nk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_capacity:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_managed:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:simulated_facility_type:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396155363329:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181714243593:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181713997831:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181714128904:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:station_id:nk]' />
              <geometry column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='2610'>PeMS Station ID: </run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:station_id:nk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Link ID:&#9;</run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Facility Type:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:simulated_facility_type:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Lanes:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes:qk]>]]></run>
                <run indent='2610'>Æ&#10;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='2610'>Observed Flow:&#9;</run>
                <run bold='true' fontsize='12' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='12' indent='4140'>Simulated Flow:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='12' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='12' indent='4140'>Simulated Capacity:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='12' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_capacity:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='12' indent='4140'>General Purpose V/C Ratio:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='12' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396155363329:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='12' indent='4140'>Simulated Speed (mph):&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='12' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph:qk]>]]></run>
                <run indent='4140'>Æ&#10;&#10;</run>
                <run fontcolor='#4e79a7' fontsize='12' indent='4140'>Error:&#9;</run>
                <run bold='true' fontcolor='#4e79a7' fontsize='12' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181693337604:qk]>]]></run>
                <run indent='4140'>Æ&#10;&#10;</run>
                <run fontcolor='#59a14f' fontsize='12' indent='4140'>Observed VPHPL:&#9;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='12' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181714243593:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#59a14f' fontsize='12' indent='4140'>Simulated VPHPL:&#9;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='12' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181713997831:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#59a14f' fontsize='12' indent='4140'>Assumed Capacity PHPL:&#9;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='12' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181714128904:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2413811683654785' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Latitude (generated)]</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6A935143-D940-487C-8D06-88EB9A23B3BB}' />
    </worksheet>
    <worksheet name='Managed Lane Map (AM)'>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Simulated Managed Lane Speed Difference' datatype='real' name='[Calculation_1674635396158509059]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([simulated_lanes_managed]&gt;0) then&#10;[simulated_speed_mph_managed]-[simulated_speed_mph]&#10;ELSE&#10;0.0&#10;END' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[simulated_facility_type]' derivation='Attribute' name='[attr:simulated_facility_type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1674635396158509059]' derivation='Avg' name='[avg:Calculation_1674635396158509059:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Avg' name='[avg:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_capacity]' derivation='Avg' name='[avg:simulated_capacity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Avg' name='[avg:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_da_managed]' derivation='Avg' name='[avg:simulated_flow_da_managed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_managed]' derivation='Avg' name='[avg:simulated_flow_managed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_s2_managed]' derivation='Avg' name='[avg:simulated_flow_s2_managed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_s3_managed]' derivation='Avg' name='[avg:simulated_flow_s3_managed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_lanes]' derivation='Avg' name='[avg:simulated_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_lanes_managed]' derivation='Avg' name='[avg:simulated_lanes_managed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_speed_mph]' derivation='Avg' name='[avg:simulated_speed_mph:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_speed_mph_managed]' derivation='Avg' name='[avg:simulated_speed_mph_managed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Emme A Node Id' datatype='integer' name='[emme_a_node_id]' role='dimension' type='ordinal' />
            <column caption='Emme B Node Id' datatype='integer' name='[emme_b_node_id]' role='dimension' type='ordinal' />
            <column-instance column='[simulated_lanes_managed]' derivation='None' name='[none:simulated_lanes_managed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Capacity' datatype='real' name='[simulated_capacity]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow DA Managed' datatype='real' name='[simulated_flow_da_managed]' role='measure' type='quantitative' />
            <column caption='Simulated Flow Managed' datatype='real' name='[simulated_flow_managed]' role='measure' type='quantitative' />
            <column caption='Simulated Flow S2 Managed' datatype='real' name='[simulated_flow_s2_managed]' role='measure' type='quantitative' />
            <column caption='Simulated Flow S3 Managed' datatype='real' name='[simulated_flow_s3_managed]' role='measure' type='quantitative' />
            <column caption='Simulated Lanes' datatype='real' name='[simulated_lanes]' role='measure' type='quantitative' />
            <column caption='Simulated Lanes Managed' datatype='real' name='[simulated_lanes_managed]' role='measure' type='quantitative' />
            <column datatype='real' name='[simulated_speed_mph]' role='measure' type='quantitative' />
            <column datatype='real' name='[simulated_speed_mph_managed]' role='measure' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_lanes_managed:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>1.0</max>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;am&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_lanes_managed:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Longitude (generated)]' field-type='quantitative' max='-13542006.533985782' min='-13680205.392141523' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Latitude (generated)]' field-type='quantitative' max='4618016.705362468' min='4488578.4728082642' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph_managed:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes_managed:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_managed:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396158509059:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396158509059:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_managed:qk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[clct:Geometry:nk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_capacity:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_managed:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:simulated_facility_type:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph_managed:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes_managed:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_s2_managed:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_s3_managed:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_da_managed:qk]' />
              <geometry column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16'>ID:&#9;</run>
                <run bold='true' fontsize='16'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id & Emme B Node Id (Combined)]>]]></run>
                <run indent='2700'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2700'>Facility Type:&#9;</run>
                <run bold='true' fontsize='16' indent='2700'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:simulated_facility_type:qk]>]]></run>
                <run indent='2700'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2700'>Lanes:&#9;</run>
                <run bold='true' fontsize='16' indent='2700'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes:qk]>]]></run>
                <run indent='2700'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2700'>Managed Lanes:&#9;</run>
                <run bold='true' fontsize='16' indent='2700'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes_managed:qk]>]]></run>
                <run indent='2700'>Æ&#10;</run>
                <run indent='4770'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='16' indent='4770'>Flow:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='16' indent='4770'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]>]]></run>
                <run indent='4770'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='16' indent='4770'>Flow in Managed Lanes:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='16' indent='4770'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_managed:qk]>]]></run>
                <run indent='4770'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='16' indent='4770'>SOV Flow in Managed Lanes:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='16' indent='4770'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_da_managed:qk]>]]></run>
                <run indent='4770'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='16' indent='4770'>HOV2 Flow in Managed Lanes:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='16' indent='4770'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_s2_managed:qk]>]]></run>
                <run indent='4770'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='16' indent='4770'>HOV3+ Flow in Managed Lanes:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='16' indent='4770'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_s3_managed:qk]>]]></run>
                <run indent='4770'>Æ&#10;</run>
                <run indent='5040'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='5040'>Managed Lane Speed (mph):&#9;</run>
                <run bold='true' fontsize='16' indent='5040'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph_managed:qk]>]]></run>
                <run indent='5040'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='5040'>General Purpose Speed (mph):&#9;</run>
                <run bold='true' fontsize='16' indent='5040'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph:qk]>]]></run>
                <run indent='5040'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='5040'>Managed Lane Speed Difference:&#9;</run>
                <run bold='true' fontsize='16' indent='5040'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396158509059:qk]>]]></run>
                <run indent='5040'>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Latitude (generated)]</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C303D94B-466A-4E27-88BD-D5FFB3F97E94}' />
    </worksheet>
    <worksheet name='PeMS Match Confusion'>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_flow]' derivation='None' name='[none:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pems_station_type]' derivation='None' name='[none:pems_station_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]' included-values='in-range'>
            <min>3.0</min>
            <max>148687.75</max>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]'>
            <groupfilter from='&quot;FF&quot;' function='range' level='[none:pems_station_type:nk]' to='&quot;OR&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='30' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]' value='73' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]' value='48' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='144' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]' value='116' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='vertical-align' value='bottom' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</cols>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{0F445B8F-184F-42E5-A10B-8D2931B8EAA5}' />
    </worksheet>
    <worksheet name='Scatter Plot Daily (Caltrans)'>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='One-way Flow Error' datatype='real' name='[Calculation_3183270912105508864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[Calculation_71142829710385152]' />
            </column>
            <column caption='One-way Flow' datatype='real' name='[Calculation_71142829710385152]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_source] == &quot;Caltrans&quot;) then&#10;[observed_flow]/1.0&#10;ELSE&#10;NULL&#10;END' />
            </column>
            <column-instance column='[pems_station_type]' derivation='Attribute' name='[attr:pems_station_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[station_id]' derivation='Attribute' name='[attr:station_id:nk]' pivot='key' type='nominal' />
            <column caption='Emme A Node Id' datatype='integer' name='[emme_a_node_id]' role='dimension' type='ordinal' />
            <column caption='Emme B Node Id' datatype='integer' name='[emme_b_node_id]' role='dimension' type='ordinal' />
            <column-instance column='[emme_a_node_id]' derivation='None' name='[none:emme_a_node_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[emme_b_node_id]' derivation='None' name='[none:emme_b_node_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[observed_source]' derivation='None' name='[none:observed_source:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_vehicle_class]' derivation='None' name='[none:observed_vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='Observed Vehicle Class' datatype='string' name='[observed_vehicle_class]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3183270912105508864]' derivation='Sum' name='[sum:Calculation_3183270912105508864:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_71142829710385152]' derivation='Sum' name='[sum:Calculation_71142829710385152:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]'>
            <groupfilter function='member' level='[none:observed_source:nk]' member='&quot;Caltrans&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]'>
            <groupfilter function='member' level='[none:observed_vehicle_class:nk]' member='&quot;All Vehicles&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]'>
            <groupfilter from='1.0' function='range' level='[none:simulated_facility_type:ok]' to='6.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>147597049.625</max>
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_71142829710385152:qk]' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='248' />
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_3183270912105508864:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_3183270912105508864:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_71142829710385152:qk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:station_id:nk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:pems_station_type:nk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_71142829710385152:qk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='true' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Emme A Node:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Emme B Node:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Station ID:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:station_id:nk]>]]></run>
                <run indent='2610'>Æ&#10;&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Facility Type:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]>]]></run>
                <run indent='2610'>Æ&#10;&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Observed Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_71142829710385152:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Simulated Flow:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2610'>Error:&#9;</run>
                <run bold='true' fontsize='11' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_3183270912105508864:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.637182354927063' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='760' />
                <format attr='maxwidth' value='760' />
                <format attr='minheight' value='944' />
                <format attr='maxheight' value='944' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1106' />
                <format attr='maxwidth' value='1106' />
                <format attr='minheight' value='944' />
                <format attr='maxheight' value='944' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='1106' />
                <format attr='maxwidth' value='1106' />
                <format attr='minheight' value='944' />
                <format attr='maxheight' value='944' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_71142829710385152:qk]</cols>
      </table>
      <simple-id uuid='{9A190D5E-D973-47FB-A473-47556041211E}' />
    </worksheet>
    <worksheet name='Scatter Plot by Time Period'>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Error Flow' datatype='real' name='[Calculation_2059833904552247297]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]-[observed_flow]' />
            </column>
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pems_station_type]' derivation='Attribute' name='[attr:pems_station_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[station_id]' derivation='Attribute' name='[attr:station_id:nk]' pivot='key' type='nominal' />
            <column caption='Emme A Node Id' datatype='integer' name='[emme_a_node_id]' role='dimension' type='ordinal' />
            <column caption='Emme B Node Id' datatype='integer' name='[emme_b_node_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[emme_a_node_id]' derivation='None' name='[none:emme_a_node_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[emme_b_node_id]' derivation='None' name='[none:emme_b_node_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2059833904552247297]' derivation='Sum' name='[sum:Calculation_2059833904552247297:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]'>
            <groupfilter function='member' level='[none:Calculation_2059833904549277696:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;am&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>147597049.625</max>
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' value='224' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' field-type='quantitative' max='50000.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' field-type='quantitative' max='50000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' value='36' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='72' />
            <format attr='height-header' value='40' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:station_id:nk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:pems_station_type:nk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='true' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' indent='2610'>Emme A Node:&#9;</run>
                <run bold='true' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' indent='2610'>Emme B Node:&#9;</run>
                <run bold='true' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' indent='2610'>Pems Station ID:&#9;</run>
                <run bold='true' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:station_id:nk]>]]></run>
                <run indent='2610'>Æ&#10;&#10;</run>
                <run fontcolor='#787878' indent='2610'>Facility Type:&#9;</run>
                <run bold='true' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]>]]></run>
                <run indent='2610'>Æ&#10;&#10;</run>
                <run fontcolor='#787878' indent='2610'>Observed Flow:&#9;</run>
                <run bold='true' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' indent='2610'>Simulated Flow:&#9;</run>
                <run bold='true' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' indent='2610'>Error:&#9;</run>
                <run bold='true' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='2.4640884399414062' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='513' />
                <format attr='maxwidth' value='513' />
                <format attr='minheight' value='478' />
                <format attr='maxheight' value='478' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk] * [federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]</cols>
      </table>
      <simple-id uuid='{60C96B6D-CB5D-4713-8572-F472EEA56487}' />
    </worksheet>
    <worksheet name='Truck Volume Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 9: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle miles traveled segmented by vehicle type (passenger cars, large trucks) should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 10 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Keep Count' datatype='boolean' name='[Calculation_1474084509194285056]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [observed_source] == &quot;PeMS&quot; then&#10;[Calculation_2059833904549277696]&#10;ELSE&#10;True&#10;END' />
            </column>
            <column caption='sum([Error Large Truck Flow])/sum([Observed Large Truck Flow])' datatype='real' name='[Calculation_1474084509200007173]' role='measure' type='quantitative' user:unnamed='Truck Volume Table'>
              <calculation class='tableau' formula='sum([Error Flow (copy)_1474084509197905923])/sum([Calculation_2298806161870094336])' />
            </column>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Observed Large Truck Flow' datatype='real' name='[Calculation_2298806161870094336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_vehicle_class]==&quot;Large Trucks&quot;) then&#10;[observed_flow]&#10;ELSE&#10;0&#10;END' />
            </column>
            <column caption='Error Large Truck Flow' datatype='real' name='[Error Flow (copy)_1474084509197905923]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow_lrgt]-[Calculation_2298806161870094336]' />
            </column>
            <column caption='Emme A Node Id' datatype='integer' name='[emme_a_node_id]' role='dimension' type='ordinal' />
            <column caption='Emme B Node Id' datatype='integer' name='[emme_b_node_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1474084509194285056]' derivation='None' name='[none:Calculation_1474084509194285056:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_vehicle_class]' derivation='None' name='[none:observed_vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[station_id]' derivation='None' name='[none:station_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='Observed Vehicle Class' datatype='string' name='[observed_vehicle_class]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Large Truck Flow' datatype='real' name='[simulated_flow_lrgt]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2298806161870094336]' derivation='Sum' name='[sum:Calculation_2298806161870094336:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Error Flow (copy)_1474084509197905923]' derivation='Sum' name='[sum:Error Flow (copy)_1474084509197905923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_lrgt]' derivation='Sum' name='[sum:simulated_flow_lrgt:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1474084509200007173]' derivation='User' name='[usr:Calculation_1474084509200007173:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]'>
            <groupfilter function='member' level='[none:Calculation_1474084509194285056:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]'>
            <groupfilter function='member' level='[none:observed_vehicle_class:nk]' member='&quot;Large Trucks&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870094336:qk]' field-type='quantitative' max='15000.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_lrgt:qk]' field-type='quantitative' max='15000.0' min='0.029555863000000002' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='82' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]' value='48' />
            <format attr='font-weight' data-class='total' value='bold' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='color' data-class='subtotal' value='#606b76' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509200007173:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='156' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='156' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]' value='180' />
            <format attr='font-weight' data-class='total' value='bold' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#606b76' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#606b76' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Error Flow (copy)_1474084509197905923:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Error Flow (copy)_1474084509197905923:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870094336:qk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509200007173:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='true' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='11'>Model Link ID:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id & Emme B Node Id (Combined)]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Count Station ID:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Observed Large Truck Flow:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870094336:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11'>Simulated Large Truck Flow:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_lrgt:qk]>]]></run>
                <run>Æ&#10;</run>
                <run indent='2430'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2430'>Error:&#9;</run>
                <run bold='true' fontsize='11' indent='2430'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Error Flow (copy)_1474084509197905923:qk]>]]></run>
                <run indent='2430'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='11' indent='2430'>Percent Error:&#9;</run>
                <run bold='true' fontsize='11' indent='2430'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509200007173:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_lrgt:qk]</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870094336:qk]</cols>
        <subtotals>
          <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
        </subtotals>
      </table>
      <simple-id uuid='{6691A6E0-4100-42FF-B795-11CE4CF07002}' />
    </worksheet>
    <worksheet name='Truck Volume Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Roadway Validation </run>
            <run>--</run>
            <run bold='true'>Æ </run>
            <run>Criterion 9: Percent error in </run>
            <run bold='true'>daily</run>
            <run> vehicle miles traveled segmented by vehicle type (passenger cars, large trucks) should be </run>
            <run bold='true' fontcolor='#b07aa1' italic='true'>Less than 10 percent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Keep Count' datatype='boolean' name='[Calculation_1474084509194285056]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if [observed_source] == &quot;PeMS&quot; then&#10;[Calculation_2059833904549277696]&#10;ELSE&#10;True&#10;END' />
            </column>
            <column caption='sum([Error Large Truck Flow])/sum([Observed Large Truck Flow])' datatype='real' name='[Calculation_1474084509200007173]' role='measure' type='quantitative' user:unnamed='Truck Volume Table'>
              <calculation class='tableau' formula='sum([Error Flow (copy)_1474084509197905923])/sum([Calculation_2298806161870094336])' />
            </column>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Observed Large Truck Flow' datatype='real' name='[Calculation_2298806161870094336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_vehicle_class]==&quot;Large Trucks&quot;) then&#10;[observed_flow]&#10;ELSE&#10;0&#10;END' />
            </column>
            <column caption='Observed Large Truck VMT' datatype='real' name='[Calculation_2298806161870290945]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2298806161870094336]*[distance_in_miles]' />
            </column>
            <column caption='Simulated VMT' datatype='real' name='[Calculation_5914352234883481601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]*[distance_in_miles]' />
            </column>
            <column caption='Observed VMT' datatype='real' name='[Calculation_5914352234883608578]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[observed_flow]*[distance_in_miles]' />
            </column>
            <column caption='Error VMT' datatype='real' name='[Calculation_5914352234883801091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5914352234883481601]-[Calculation_5914352234883608578]' />
            </column>
            <column caption='Simulated Large Truck VMT' datatype='real' name='[Calculation_5914352234885140490]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_vehicle_class] == &quot;Large Trucks&quot;) then&#10;[simulated_flow_lrgt]*[distance_in_miles]&#10;ELSE&#10;0&#10;END' />
            </column>
            <column caption='sum([Error VMT])/sum([Observed VMT])' datatype='real' name='[Calculation_6407074181689937922]' role='measure' type='quantitative' user:unnamed='VMT Table'>
              <calculation class='tableau' formula='sum([Calculation_5914352234883801091])/sum([Calculation_5914352234883608578])' />
            </column>
            <column caption='Error Large Truck Flow' datatype='real' name='[Error Flow (copy)_1474084509197905923]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow_lrgt]-[Calculation_2298806161870094336]' />
            </column>
            <column caption='Distance in Miles' datatype='real' name='[distance_in_miles]' role='measure' type='quantitative' />
            <column caption='Emme A Node Id' datatype='integer' name='[emme_a_node_id]' role='dimension' type='ordinal' />
            <column caption='Emme B Node Id' datatype='integer' name='[emme_b_node_id]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1474084509194285056]' derivation='None' name='[none:Calculation_1474084509194285056:nk]' pivot='key' type='nominal' />
            <column-instance column='[observed_flow]' derivation='None' name='[none:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_vehicle_class]' derivation='None' name='[none:observed_vehicle_class:nk]' pivot='key' type='nominal' />
            <column-instance column='[station_id]' derivation='None' name='[none:station_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='Observed Vehicle Class' datatype='string' name='[observed_vehicle_class]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Large Truck Flow' datatype='real' name='[simulated_flow_lrgt]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2298806161870094336]' derivation='Sum' name='[sum:Calculation_2298806161870094336:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2298806161870290945]' derivation='Sum' name='[sum:Calculation_2298806161870290945:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234885140490]' derivation='Sum' name='[sum:Calculation_5914352234885140490:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Error Flow (copy)_1474084509197905923]' derivation='Sum' name='[sum:Error Flow (copy)_1474084509197905923:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_lrgt]' derivation='Sum' name='[sum:simulated_flow_lrgt:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1474084509200007173]' derivation='User' name='[usr:Calculation_1474084509200007173:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6407074181689937922]' derivation='User' name='[usr:Calculation_6407074181689937922:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870094336:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_lrgt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Error Flow (copy)_1474084509197905923:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509200007173:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870094336:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_lrgt:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234885140490:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870290945:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181689937922:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]'>
            <groupfilter function='member' level='[none:Calculation_1474084509194285056:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]' included-values='in-range'>
            <min>1.0</min>
            <max>44289.0</max>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]'>
            <groupfilter function='member' level='[none:observed_vehicle_class:nk]' member='&quot;Large Trucks&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;daily&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='133' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='82' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]' value='26' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181689937922:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_1474084509200007173:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='68' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='156' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]' value='156' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]' value='112' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]' value='120' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
        </subtotals>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{9A78AEF7-3126-4F17-B736-3795CF56845B}' />
    </worksheet>
    <worksheet name='V/C Explore Map (AM)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AM (Morning Commute) Error Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Simulated V/C Ratio' datatype='real' name='[Calculation_1674635396155363329]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]/[simulated_capacity]' />
            </column>
            <column caption='Period Duration' datatype='integer' name='[Calculation_6407074181713776646]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [time_period]&#10;when &quot;am&quot; then 4&#10;when &quot;md&quot; then 5&#10;when &quot;pm&quot; then 4&#10;when &quot;ea&quot; then 3&#10;when &quot;ev&quot; then 5&#10;ELSE&#10;NULL&#10;END' />
            </column>
            <column caption='Simulated VPHPL' datatype='real' name='[Calculation_6407074181713997831]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]/[Calculation_6407074181713776646]/[simulated_lanes]' />
            </column>
            <column caption='Simulated Capacity (VPHPL)' datatype='real' name='[Calculation_6407074181714128904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_capacity]/[Calculation_6407074181713776646]/[simulated_lanes]' />
            </column>
            <column caption='Observed VPHPL' datatype='real' name='[Calculation_6407074181714243593]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[observed_flow]/[Calculation_6407074181713776646]/[simulated_lanes]' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_facility_type]' derivation='Attribute' name='[attr:simulated_facility_type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[station_id]' derivation='Attribute' name='[attr:station_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1674635396155363329]' derivation='Avg' name='[avg:Calculation_1674635396155363329:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6407074181713997831]' derivation='Avg' name='[avg:Calculation_6407074181713997831:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6407074181714128904]' derivation='Avg' name='[avg:Calculation_6407074181714128904:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6407074181714243593]' derivation='Avg' name='[avg:Calculation_6407074181714243593:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Avg' name='[avg:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_capacity]' derivation='Avg' name='[avg:simulated_capacity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Avg' name='[avg:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_lanes]' derivation='Avg' name='[avg:simulated_lanes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_speed_mph]' derivation='Avg' name='[avg:simulated_speed_mph:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Emme A Node Id' datatype='integer' name='[emme_a_node_id]' role='dimension' type='ordinal' />
            <column caption='Emme B Node Id' datatype='integer' name='[emme_b_node_id]' role='dimension' type='ordinal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Capacity' datatype='real' name='[simulated_capacity]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow Managed' datatype='real' name='[simulated_flow_managed]' role='measure' type='quantitative' />
            <column caption='Simulated Lanes' datatype='real' name='[simulated_lanes]' role='measure' type='quantitative' />
            <column datatype='real' name='[simulated_speed_mph]' role='measure' type='quantitative' />
            <column datatype='string' name='[station_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1674635396155363329]' derivation='Sum' name='[sum:Calculation_1674635396155363329:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow_managed]' derivation='Sum' name='[sum:simulated_flow_managed:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396155363329:qk]' included-values='in-range'>
            <min>0.68000000000000005</min>
            <max>10.0</max>
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]'>
            <groupfilter function='member' level='[none:simulated_facility_type:ok]' member='1.0' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]'>
            <groupfilter function='member' level='[none:time_period:nk]' member='&quot;am&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396155363329:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Longitude (generated)]' field-type='quantitative' max='-13572392.18525954' min='-13656416.183787368' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Latitude (generated)]' field-type='quantitative' max='4592638.6909627263' min='4513816.1802521255' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181714128904:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396155363329:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181713997831:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396155363329:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.75' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_1674635396155363329:qk]' max='2.0' min='0.0' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_1674635396155363329:qk]' />
              <size column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[clct:Geometry:nk]' />
              <lod column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_capacity:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow_managed:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:simulated_facility_type:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396155363329:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181714243593:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181713997831:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181714128904:qk]' />
              <tooltip column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:station_id:nk]' />
              <geometry column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='16' indent='2610'>Link ID:&#9;</run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2610'>Facility Type:&#9;</run>
                <run bold='true' fontsize='16' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[attr:simulated_facility_type:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2610'>Lanes:&#9;</run>
                <run bold='true' fontsize='16' indent='2610'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_lanes:qk]>]]></run>
                <run indent='2610'>Æ&#10;</run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='16' indent='4140'>Simulated Flow:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='16' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='16' indent='4140'>Simulated Capacity:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='16' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_capacity:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='16' indent='4140'>General Purpose V/C Ratio:&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='16' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396155363329:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#b07aa1' fontsize='16' indent='4140'>Simulated Speed (mph):&#9;</run>
                <run bold='true' fontcolor='#b07aa1' fontsize='16' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_speed_mph:qk]>]]></run>
                <run indent='4140'>Æ&#10;&#10;</run>
                <run fontcolor='#59a14f' fontsize='16' indent='4140'>Simulated VPHPL:&#9;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='16' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181713997831:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
                <run fontcolor='#59a14f' fontsize='16' indent='4140'>Assumed Capacity PHPL:&#9;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='16' indent='4140'><![CDATA[<[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_6407074181714128904:qk]>]]></run>
                <run indent='4140'>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Latitude (generated)]</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{32947B09-381E-490C-825C-BB7342D14768}' />
    </worksheet>
    <worksheet name='VMT Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='acceptance-roadway-network' name='federated.0u3lcsj12sliw51gvvfvc1enpi25' />
          </datasources>
          <datasource-dependencies datasource='federated.0u3lcsj12sliw51gvvfvc1enpi25'>
            <column caption='Good PeMS Facility Type Match' datatype='boolean' name='[Calculation_2059833904549277696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([simulated_facility_type] == 1) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;ML&quot; OR [pems_station_type]==&quot;FF&quot;)&#10;ELSEif ([simulated_facility_type] == 2) then&#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;ELSEIF ([simulated_facility_type]==3) then&#10;[observed_source] == &quot;PeMS&quot; AND ([pems_station_type] == &quot;OR&quot; OR [pems_station_type]==&quot;FR&quot;)&#10;ELSE &#10;[observed_source] == &quot;PeMS&quot; AND [pems_station_type] == &quot;ML&quot;&#10;END' />
            </column>
            <column caption='Simulated VMT' datatype='real' name='[Calculation_5914352234883481601]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[simulated_flow]*[distance_in_miles]' />
            </column>
            <column caption='Observed VMT' datatype='real' name='[Calculation_5914352234883608578]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[observed_flow]*[distance_in_miles]' />
            </column>
            <column caption='Error VMT' datatype='real' name='[Calculation_5914352234883801091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5914352234883481601]-[Calculation_5914352234883608578]' />
            </column>
            <column caption='sqrt(avg([Error VMT]*[Error VMT]))/avg([Observed VMT])' datatype='real' name='[Calculation_5914352234884481032]' role='measure' type='quantitative' user:unnamed='table'>
              <calculation class='tableau' formula='sqrt(avg([Calculation_5914352234883801091]*[Calculation_5914352234883801091]))/avg([Calculation_5914352234883608578])' />
            </column>
            <column caption='Simulated Passenger Vehicle VMT' datatype='real' name='[Calculation_5914352234884837385]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([simulated_flow_da]+[simulated_flow_s2]+[simulated_flow_s3])*[distance_in_miles]' />
            </column>
            <column caption='Simulated Large Truck VMT' datatype='real' name='[Calculation_5914352234885140490]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ([observed_vehicle_class] == &quot;Large Trucks&quot;) then&#10;[simulated_flow_lrgt]*[distance_in_miles]&#10;ELSE&#10;0&#10;END' />
            </column>
            <column caption='sum([Error VMT])/sum([Observed VMT])' datatype='real' name='[Calculation_6407074181689937922]' role='measure' type='quantitative' user:unnamed='VMT Table'>
              <calculation class='tableau' formula='sum([Calculation_5914352234883801091])/sum([Calculation_5914352234883608578])' />
            </column>
            <column caption='acceptance-roadway-network.geojson' datatype='table' name='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]' pivot='key' type='quantitative' />
            <column caption='Distance in Miles' datatype='real' name='[distance_in_miles]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2059833904549277696]' derivation='None' name='[none:Calculation_2059833904549277696:nk]' pivot='key' type='nominal' />
            <column-instance column='[simulated_facility_type]' derivation='None' name='[none:simulated_facility_type:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time_period]' derivation='None' name='[none:time_period:nk]' pivot='key' type='nominal' />
            <column caption='Observed Flow' datatype='real' datatype-customized='true' name='[observed_flow]' role='measure' type='quantitative' />
            <column caption='Observed Source' datatype='string' name='[observed_source]' role='dimension' type='nominal' />
            <column caption='Observed Vehicle Class' datatype='string' name='[observed_vehicle_class]' role='dimension' type='nominal' />
            <column datatype='string' name='[pems_station_type]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Simulated Facility Type' datatype='real' name='[simulated_facility_type]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1.0' value='1 - Freeway' />
                <alias key='2.0' value='2 - Expressway' />
                <alias key='3.0' value='3 - Ramp' />
                <alias key='4.0' value='4 - Divided Arterial' />
                <alias key='5.0' value='5 - Undivided Arterial' />
                <alias key='6.0' value='6 - Collector' />
              </aliases>
            </column>
            <column caption='Simulated Flow' datatype='real' name='[simulated_flow]' role='measure' type='quantitative' />
            <column caption='Simulated Flow Da' datatype='real' name='[simulated_flow_da]' role='measure' type='quantitative' />
            <column caption='Simulated Large Truck Flow' datatype='real' name='[simulated_flow_lrgt]' role='measure' type='quantitative' />
            <column caption='Simulated Flow S2' datatype='real' name='[simulated_flow_s2]' role='measure' type='quantitative' />
            <column caption='Simulated Flow S3' datatype='real' name='[simulated_flow_s3]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5914352234883481601]' derivation='Sum' name='[sum:Calculation_5914352234883481601:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234883608578]' derivation='Sum' name='[sum:Calculation_5914352234883608578:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234883801091]' derivation='Sum' name='[sum:Calculation_5914352234883801091:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234884837385]' derivation='Sum' name='[sum:Calculation_5914352234884837385:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5914352234885140490]' derivation='Sum' name='[sum:Calculation_5914352234885140490:qk]' pivot='key' type='quantitative' />
            <column-instance column='[observed_flow]' derivation='Sum' name='[sum:observed_flow:qk]' pivot='key' type='quantitative' />
            <column-instance column='[simulated_flow]' derivation='Sum' name='[sum:simulated_flow:qk]' pivot='key' type='quantitative' />
            <column caption='Time Period' datatype='string' name='[time_period]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;am&quot;' value='AM (Morning Commute)' />
                <alias key='&quot;daily&quot;' value='Daily' />
                <alias key='&quot;ea&quot;' value='EA (Early Morning)' />
                <alias key='&quot;ev&quot;' value='EV (Evening)' />
                <alias key='&quot;md&quot;' value='MD (Midday)' />
                <alias key='&quot;pm&quot;' value='PM (Evening Commute)' />
              </aliases>
            </column>
            <column-instance column='[Calculation_5914352234884481032]' derivation='User' name='[usr:Calculation_5914352234884481032:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6407074181689937922]' derivation='User' name='[usr:Calculation_6407074181689937922:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883608578:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883481601:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234884837385:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234885140490:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883801091:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181689937922:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_5914352234884481032:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[__tableau_internal_object_id__].[cnt:acceptance-roadway-network.geojson_F8635E48D7974429A730A602CA0BDE43:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883608578:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883481601:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234884837385:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234885140490:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_5914352234883801091:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181689937922:qk]&quot;</bucket>
              <bucket>&quot;[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_5914352234884481032:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]'>
            <groupfilter function='member' level='[none:Calculation_2059833904549277696:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</column>
            <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='31' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='83' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_5914352234884481032:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181689937922:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' value='136' />
            <format attr='height-header' value='36' />
            <format attr='height' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='56' />
            <format attr='width' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' value='bottom' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk] / [federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok])</rows>
        <cols>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</cols>
        <subtotals>
          <column>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</column>
        </subtotals>
        <tooltip-style tooltip-mode='none' />
      </table>
      <simple-id uuid='{253E28AD-6C4F-4FE5-92C0-BDBD6C25043B}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Debug Table'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]' type='filter' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C7929D6F-E320-4385-9090-D356C77BF7A2}' />
    </window>
    <window class='worksheet' name='PeMS Match Confusion'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{81F6FB7C-D627-4A80-A7F3-830AD86618F7}' />
    </window>
    <window class='worksheet' name='VMT Table'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E5741D2-FAF5-428F-A128-2E747EAB6A82}' />
    </window>
    <window class='worksheet' name='Scatter Plot by Time Period'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='dropdown' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2059833904552247297:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{62DD386E-73F9-4288-8581-152E58B49F6E}' />
    </window>
    <window class='worksheet' name='Scatter Plot Daily (Caltrans)'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card pane-specification-id='4' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_71142829710385152:qk]' type='size' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_3183270912105508864:qk]' type='color' />
            <card param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' type='filter' />
            <card param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_3183270912105508864:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74834C7B-6DD7-43A0-9EDC-BFFC67B40FB7}' />
    </window>
    <window class='worksheet' name='Caltrans Table'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_3183270912105508864:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF4546F5-B493-46A4-AC82-77A71AFE5FE9}' />
    </window>
    <window class='worksheet' name='Caltrans Truck Table'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_b_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_3183270912105508864:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E918F46-0561-4310-8D01-2724993E4744}' />
    </window>
    <window class='worksheet' name='Error Map (AM)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181693337604:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_flow:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[clct:Geometry:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_type:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[usr:Calculation_6407074181693337604:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{2C44A749-DD94-4423-BE6A-5EAC1FB83F36}' />
    </window>
    <window class='worksheet' name='V/C Explore Map (AM)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396155363329:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_1674635396155363329:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[clct:Geometry:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_1674635396155363329:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{1EF22340-3E39-4FC9-9CF5-DC5D42AE40C9}' />
    </window>
    <window class='worksheet' name='Managed Lane Map (AM)'>
      <cards>
        <edge name='left'>
          <strip size='299'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='dropdown' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396158509059:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:simulated_flow_managed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:Calculation_1674635396158509059:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[clct:Geometry:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_lanes_managed:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{CB278073-9A57-4D84-A879-590ACB3F1CD6}' />
    </window>
    <window class='worksheet' name='7 - Pct RMSE Daily'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_maximum_error:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D66D8A84-DF45-49B8-BDEA-BD3170139EFC}' />
    </window>
    <window class='worksheet' name='7 - Pct RMSE Daily Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_maximum_error:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8227C853-B1C6-4B04-96AC-627E570C5C81}' />
    </window>
    <window class='worksheet' name='8 - Pct RMSE Time-of-day '>
      <cards>
        <edge name='left'>
          <strip size='223'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_maximum_error:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6A27173-E5D8-4F44-802E-47905ED82694}' />
    </window>
    <window class='worksheet' name='8 - Pct RMSE Time-of-day Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_flow_category:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:odot_maximum_error:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{11D04E51-A97C-40FB-9AFE-FCDAC530F59A}' />
    </window>
    <window class='worksheet' name='9 - VMT by Vehicle Type (Cars)'>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49AB0586-B12F-4B31-B7B0-C797A2557272}' />
    </window>
    <window class='worksheet' name='9 - VMT by Vehicle Type (Trucks)'>
      <cards>
        <edge name='left'>
          <strip size='282'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB37815E-290B-478D-8FE4-35717B1465F1}' />
    </window>
    <window class='worksheet' name='Truck Volume Table'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D8B2B2DD-0636-4D99-AA88-092601AE901C}' />
    </window>
    <window class='worksheet' name='Truck Volume Scatter'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Error Flow (copy)_1474084509197905923:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:Calculation_2298806161870094336:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[Emme A Node Id &amp; Emme B Node Id (Combined)]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_1474084509194285056:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:model_link_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_source:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_vehicle_class:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F863FA86-10BD-40FB-9514-A20B304BCF86}' />
    </window>
    <window class='worksheet' name='10 - Bridges (PeMS)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:key_road_name:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9C435E7-B7CC-4241-81FC-B28EE3EF0A28}' />
    </window>
    <window class='worksheet' name='10 - Bridges (PeMS) Chart'>
      <cards>
        <edge name='left'>
          <strip size='195'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' type='size' />
            <card pane-specification-id='4' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:key_road_name:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5B9CBF1-A3D6-4E4E-9A82-B1540809E708}' />
    </window>
    <window class='worksheet' name='10 - Bridges (Transactions)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:key_road_name:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68CBDE1F-7594-46DD-B9A5-E53EDA94001D}' />
    </window>
    <window class='worksheet' name='10 - Bridges (Transactions) Chart'>
      <cards>
        <edge name='left'>
          <strip size='236'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='dropdown' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_toll_transactions:qk]' type='size' />
            <card pane-specification-id='5' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]' type='color' />
            <card pane-specification-id='5' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[avg:observed_toll_transactions:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:bridge_plaza_name:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:key_road_name:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{052B9348-EFB9-4901-81FB-EA4E1677AAE0}' />
    </window>
    <window class='worksheet' name='11 - Arterials &amp; Expressways'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:key_road_name:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{975236BF-A83B-4B97-8F78-A23E46D4F2D1}' />
    </window>
    <window class='worksheet' name='11 - Arterials &amp; Exp. Chart'>
      <cards>
        <edge name='left'>
          <strip size='247'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:simulated_flow:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.0u3lcsj12sliw51gvvfvc1enpi25].[sum:observed_flow:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[:Measure Names]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Bridge Name (copy)_2298806161914040326:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161906384899:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:key_road_name:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6506C38-8DA3-44B8-930A-447C3C379C15}' />
    </window>
    <window class='worksheet' name='12 - Freeways'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2059833904549277696:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:Calculation_2298806161940406286:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:emme_a_node_id:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:observed_flow:qk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:pems_station_id:nk]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:simulated_facility_type:ok]</field>
            <field>[federated.0u3lcsj12sliw51gvvfvc1enpi25].[none:time_period:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C342272-CDB7-4F56-858C-D41A725358C4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='10 - Bridges (PeMS)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='10 - Bridges (PeMS) Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='10 - Bridges (Transactions)' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='10 - Bridges (Transactions) Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='11 - Arterials &amp; Exp. Chart' width='192'>
      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
      HfOMhAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='11 - Arterials &amp; Expressways' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAS1klEQVR4nO3df1xV9f3A8dcGUg+czImCYpmp/JAMJS7yw7iKFOqQULFY4WLJ+jps/sh0
      bfr9ZmyhNTfLb3NLyzlctBGxYEmG4q9rIFcuooRXfjgFKlPsml+WaHr53v1xCS+Xi4kgYp/3
      8/Hwj8793HvPufe87vmcG497vmOxWCwIoajv3uwVEOJmkgCE0iQAoTQJQChNAhBKkwCE0iQA
      oTQJQHyrGAyGTo2XAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0C
      EEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJACh
      NAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqT
      AITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlA
      KE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITS
      JAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0C
      EEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJACh
      NAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqT
      AITSJAChNAlAKO07FovFcrUBBoOhp9ZFiB73jQEIcSsxGAxoNJprHi9TIKE0CUAoTQIQSpMA
      hNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAerNGHSsfXYmu8WavCICZ4+lJTF9Tivlm
      r0o36kIAdaQnalipa78sMb2uGx6rp53HmP0cc6Mj0Gg0aCKimftyEWfNADpWajTW5bb/EtOx
      31LdSgfjWjasLj2xzfKwyNnMf+0AjvfvRt5PTcP85DNo3QDdSuv9YtdjbDPOyPpY6+Pd2NfP
      mRFJv+bhQ8t5ufTbk8CNPQLoVqLRrOSm7tfX7BwnLwazJD2fYoOBouxl3PnBM6zMMwFaUg0G
      DK3/8lg2DnyjJ3GXg0fyXZBtM9aAIVV75caYta3L926Jx5L+SzaUtn8Mc+kG1p2YRdJkN5sH
      jiHGrYgS2+rqSijyeYInfK9/y+vSEx3G3N5dJC6KZNufsjl9/U/Xq9zYALSpGAypaL95ZC8w
      lAcSYxkzxBVnwMUjkomay5w992W7kWbjO2Qemczjsx3t/tfO5c5wQkc08uX5ds/AwR3buDNh
      Bj5tlo8gKhqKDabWJSZDMW7hoXyvC+txV1IGhowkhzHbcx7/EPGnM8mp7sIT9iI3/ghg88nS
      WJ7O0hnWKUZE9FzmJy/AdrZ0cv8Gls6OJEyjISI5g+NmoHQNkyev4esPydI1k9FoVrCr5Shs
      yk4hbKUOM1C1eS4xkWGt04vn8hsAM8b1s9CkZNO625iySQl7hvc7mFubmz7DkP40LxlimDfT
      frc4z86/vMm5uNlE9e3Ca2Nu4sR763nr8zimBNnfeJi92/sSeK9nu7vdFRzOJ0V6zresi76o
      kVDNwDZjTAWp/MhmKvfUJmPL+K+nmo0cePlRIlqOznXpia3TNOt0L4G0P69umQ6GMX1xrs3R
      wZ/A8Z9RVPJpFza+9+hyAHlLbOe78bxa1cHA8/m8MO8tvpv8FkUGA/u2Porb4bNtxwyYwDNb
      drC/6HVmNvyBjANA0GSmYeDwcYA6Kg4FEhNjpPQwWHeAQ0RHhePMBW4PWsIbefus04u14ZQ9
      v4EinPGfncC4km0UtBy3TXsKOBQdR7Qbdqxz/VBtLEu3erJo0wrr/NvW6a1k7RpCwqzxOHew
      qVWvxreZ67c5J8pbYl0equWJLW4s2vQs4fYhnT/NqcYARvvQnn8o2go9pWbAXIr+Yy1h9o16
      PcQL7+zEYDBQnJuC859eIsdmfz226Tne8nqO/OKOjs5NXPB6mFe27qN4+y8Y+eHb7LHZhKHD
      RnCk+l8dbP2tpaP38JrFrDVwZYpbR3piPNsdDSwtYtewBN6OvRMXAJfbuM1uiJfvGIa4AgzA
      3e0y/2cGGEtIRD1/KzMx9/sGit3CeT7qe6QUG2Hs5+iLwgn5tXUzXD5/jxVLUyg/e+HrtbN+
      Y+E5ncdjNvBKTjUJ89zZU1BF3BPhDjbeOtdPvdTIJ+Xv8lJyLPoVWaTaVFCdk8mRiT9lraOd
      s4XvgmwykjqYUMSsbTknuETjsXxeSI7lyKo8lgXZrM3nZziFM84O352xhIQuR38YtOg5NjEG
      H2C/zYg+5nJem7uEwtp/c9m6Rtxne946cSG/SxhxlTffDe/Ro3BzAQa407/jTb3l9ezXoM5O
      OHX+TgSFhFNSpKfx8EEaQzV4BoVwd8VRTIf17BsXTkhfwJTLr39RQeg660msIXsBV84L+6JN
      TID83VSfLmDb6QRmjb9K+y5u3KFJYuljA8nbeejK8vP5vPGXc8QlRNPu4NFpLriNimV6qIn9
      huNtbxo4iMGYMTv8ssWZoJAx6IqNGIsPMS7U3+72UjYsTue25Ez2GgwYDGuJsRsxatTVdn61
      9FwAvv6Mq9pOTtlZzJhpOlHHyWu8a9+QcIKL9Gw4UEt48F3Qdyz3NRXxRoGOEZPuxx3g4kWa
      GMggTxecLzVQUVTOZ7YP4jODhAGZ/OnFHdDu5BL4tICM9yr4pPESAOamo+zcdZxhXoNbh5ze
      msWuId8QTydcatjBzuI+DB3sbrfBngx2K+doByeafUPCuaMok8wDowgZa3/rV1y80Bf3wf1x
      MTdxYt9+jnXL2l7xaf1x7vEZ2c2PenP0XACe8Sz/1RB2L4wmNOxB5v29E2+Lu4bQEXlk5o7i
      Xh+AoQSOryYry42I0JYTxaGxJMfXsTY6lIhHnmfHhQEMarsCTH9YQ/E+eHBS+5NL+ntxe8la
      5sVNRKPREDplER/6pbE+uSUVs5F3Mg8xzlE8duzPATS2X9B/fQ6g0RAev4aPp/6e1Bi7ABjL
      xOjzlH3UwZeN7pN4wC2PvIEhBLVrcTyJPx/Ke/PDCXtwHptP3s5AR49x3YyUHRhCePDQbn3U
      m8bSY05b6mvOWs5ftlgslq8sp3UvWmZGrrboL/fU839lqdr0uOX+ZR9Yvuypp+yCy4bfWqJn
      vmaputkrYueyfrUlMvnvllM3e0U6UFJS0qnxPXgO8AUFqxKYEqpBowkn/vdniHtlPt00m7i6
      unQSNeEk7xjH7/97Cl359rKnOAfNY9Hd/yB9V6/4O4gWdWSs2820lHgcHENvSfK7QL1Zo46V
      83YStSG1/dexPc7M8fRkFjYsJGdZUK89ie7s7wJJAOJbRX4YS4hOkACE0iQAoTQJQChNAhBK
      kwCE0iQAoTQJQChNAhBK+8b/o93U1NQT6yFEt+nMPitHAKE0CUAoTQIQSpMAhNIkAKE0CUAo
      TQIQSpMAhNIkAKE0CUAoTQIQSpMAbinN1GY8xVMZtTTf7FUBaCwkbfZichtu9opcvy4EUE9G
      spa0wvbLkjPqu+GxeloTlbkvkBIXjVarRRsdR8p6PV80AxSSptVal9v+S86gzZbWZ5CsXc72
      1r/FamZvqhZt1EsUtw6qZUtSFGmFzXy93VceM4qYOUvYVOr4x7CaKzexfFcIy340HCeb+y7f
      3vaPv5q2L3e8ft3NbQJPPz2IzatyuVUbuLFHgMI0tNo0bup+fc3OcerifSzYmMNunY6CjEXc
      sWM5aR+YgAms0OnQtf57h0UB4D05gmG2DzHMnwC3co62XiOhhqqqiUwMMVJd27KoqZrKE/cy
      xu/K72RPWf31425jY5yFt1Zupqzd+jWw9bV3GPnYbIbb/MR21JQpGErKbI4IzZSV1DJnzpQu
      vBbX/kHmOuFJfmx+nTdLe8UxqdNubAATVqDTrWDCDX2S7uLFpIQf4u/pihPgMmgi9wde5otz
      7a5fRHNlDtlHJ/LYzGF2t/gyOqARY3XL716bqjB6aJjhB5XVLZ/SVUcpH+yPr/3v4QLgwtAQ
      DcMbv6TdH/Q27GPHsanMmOTaZrHz/ZOYWGKgvHVJOYaKEILv6cSmtzOMxE06NiXab58jHkx7
      KIC8nD3t1/kWcOOPADaH4caKDFY8ap1iRMelsGT+Umw/ZE4d+DMr5sQQpdUS/VQmtc1A2Tqm
      T1/X+olYtm46Wm0qe1s+cEy5i4lKK6QZqHkzhfiYKLRaLVExc0jbeQZopnLjY2gX59pcIimX
      xVHL2d7Bz242N53mYMazvFw2hbmx9jtBE3syMmmMmYHdvgi44nePN0cra6yfyDWVNPj7EuTj
      T22tdUNPVhu5EBSAn8PnreP917MwxUQRaHebaf8+ygPGMNr+AgvOgQT7F1JS2fLflSXox2gI
      aHtv9qz+CXHR2pbXfglbKlt21/oMkrVpFDaWsv6JaLRphdhPSQvTtCSt2cLvUuKI1mqJmv0s
      eTbvm+uYsYwqso3w1tHlAPJ/ZTuHncOGmg4GNu1kzaIsvvvjzRTodGzPepjvVXzRdkz/UBZu
      /Cc7C/5A7JmNZJYAgVoe5CAf1QLUYywPYMqUSg6VAzRRqv+IyZNCceIit41bwB+ztqPT6di2
      OoTDq/5MMU74zYgn4OAO9rRMVE0f7uajyTFEtfu9TetcP3Lqw6z4wIP565cxwX5Mwzbe3evJ
      rNgghxf7GOYfgNuRKmqA2mojvr7e4O2Hh7EKE1Bfe4x7/bwdvoaRU3/G3/rNZ/3Todi3deb0
      Se7282m3HFwJCvFCX2rdI+tLSxkZGthu3QbHPMebW3XodLvJ/Kkzb7z8ns31GY6zJe1tBv8y
      h90rHB+vL1wYwqzfZrF9dy6LR+znH/tsCvC6g2GXq/nXDT3huDG6HMCV+asOne5N5nl3MLCs
      mL13zCL5h0M7vETSYB9/PF2dwKU/A/pdxtwMEIAm7BMOHjaBqYySfiE8OWkM+pJKaC6jRB9C
      cKAT0AcX0/s8/+g0tFotD/w8i1OXzdZPYo9pPDqlluytNYCJD3cfI2ZqqIMduGWuX5DHG08P
      ZftTj5BW2PYwUbM1m6P3/4TZHW2n72gCThmpMjVRXXk7ft5O4O6Lf0MlNdRSbXTH327+0/oa
      FrxN6ph9PPXIOsrsptSmM6dwdnL8drkHBkNJGSZMlJW4ExFmn0kfzB9tImVmFFptJHFrisFs
      bnPB6wkpq4j3de3wCj79Rvoyop8LOP2AAd/vYNAtqMcvkdT5J3QiMDiEg/pSGisO8e/gQDwC
      gxlurMJUbmD/vSEEuQKmrbz4P0cZ/1vrSazuzXlc2UddmfDILCjYR03DHnY0zCI26CoXa3Lp
      x9D7Eln4sDv5ez66srxpJ1syGomJj+r4EkmuftzjfYza+iqOnvDHxwtgGMOHG6muqKbyxD34
      dhSPSz9G/HAqwWf1lNldNcl90GDMzf/v+H7Dggg5qaf0TCl6Wl4PW2Wb+eXfXEj6yzZraKvt
      T5BHMHJ45y9e9W3QcwF4+xFQs4ut5V/QTDNNdR9z6hrv6hoUwn36EjaX1hMSNAxcxzD2gp4t
      ewoZHhFmvUTSVxe5gDsDPW7D6dIZjPojbS/m7D2d+AH/YNPa3RA/nXb74Mk9ZL5v5NN/Wy+R
      1NxUxR5dLXcM8Wgd0rDtXfZ6fkM8DMM/AIw7d2K8e3TLdcpc8fGDytwSyu8bx5gO736JM7v2
      UNLHC88BbW8Z5OnFicrqDk40/QieYGT/xv2YggNpd3791UUuuA7A8/suNDfVUXTguKMHuX4n
      P6G+jw8jr+WcuZfpuQA8ZrD0mcHsWxpHZNRDLMrqxGU23QMJHp5Pdt4I7vEG8GJs0DHefbcf
      YcEtO6jXNB5/6GNejYskOmk1uy/8wG5H8GDazEBKiiAywqPdU9B/MLcffJWFP7JOoSJn/IL9
      3s+xNqklleZKcrLLCXAUjx3f0QEc/ec/uWgzZx/u448+Px9Xf992O+iV86gHSFz3CQ+uWsFU
      u0HuYREElFdwtINvGwO1kZTkHyEoyMFeGJzAfw35gKcfiOKhRX/ls9scfgV13ZoqDnMs3P7E
      +9bwjdcH6L5fhTjDp8f78IO7+uPqdIkzRetZtMrCM7lLuOoHare5xLEtC5hf8wg5v4lycDLZ
      2zWQu3gOhtgcfhPVm9a+geyfz6XuiVyW9MwbeVVGoxF/f/srZ3asBy/0cY7da5ay5cgXXARu
      HxpB0ovP9szOX59B8pwNfDwygdXrbsWdH8CD6T+bTeaad6id9Di9ZcreVPg6f3V+ko29YOe/
      Hj14BBBd10xtxkLWsIz/TRx+Hddc7maNhaTNzWLMH18hzsGs8mbo7BFAAhDfKp0NQP4aVChN
      AhBKkwCE0iQAoTQJQChNAhBK+w/HEx3Q/zkwAQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='12 - Freeways' width='192'>
      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
      JAChaf8DjUnQ0cgPflAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='7 - Pct RMSE Daily' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='7 - Pct RMSE Daily Chart' width='192'>
      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
      4N0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='8 - Pct RMSE Time-of-day ' width='192'>
      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
      KGxtbbG6ukqtVjtT2w4PD2m323Q6HVKpVC9RsFarkUql6HQ6tFotSqUSmqaRzWYpFAo9zed7
      HWDhd58SvPERNy6NUMmnePJkjp3dLX7+80/JlxvMPvoVv/r1Z9SbdT771S/4fDaOYDDx4V9/
      iMMa5WrMw+PPfslcMs1v/uV/559/9oj9rSQ///Q3HDUabG3tnNlN0nk1Op0O5XKZX//613S7
      XQwGA2azmc8++4xyucynn37aK9RPJpMUCoUzs63b7fLFF1/0HLTZbPK73/0OOFGJn0+H3Nzc
      5PPPP6fVanF0dMRvfvObP90ct92ScVhVPv2v/0JqLU7FEqJ9uEulvMtXc6ukd4sEzUd8+euf
      Yb/8V8QGvpubcpxdouG5SnHtKYGxS3zy0XvkshmKmTUWN/Zf823ROU3sdjuCIBAKhbBYLL0M
      3evXrxMOh3sdmJ93hp6cnDwz22w2G9PT0wAMDw+TzWa5evUqcKJYP+8EceXKFcxmMw6HA0VR
      ejME4I+kQ7/7Nw/411/9FptviEAoxOBwhG56DZs7QMDnQrUM4vFZsA8OMPfk12B9figzEwx6
      cQ8OU5/7DJNnmLFRF58/m2XMLOINRfC5nFgCekVTv1AoFHj48CF/8zd/w/HxMTabjdnZWf7x
      H/+RcrlMLpcjm80iiiJXr149s5YoAO12m+3tbWw2G8vLy/h8vt4g71qtxuTkJMViEavVSj6f
      Z21tjSdPnvCjH/2otwXShbA+4/Dw8EyjQKIocnh4iCAIbG1tce/ePRRFwePx0Gg0qFQq2Gw2
      7HY7Vqv1zOqB/9A2m81Gq9XCZDKRTqe5c+cO9XqdYDDI8fExkiThcrloNBqYTCbC4TAGg0F3
      gH7jrB3gTef/A/YCrJ47Xz8OAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='8 - Pct RMSE Time-of-day Chart' width='192'>
      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
      Qb7exGG/KwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='9 - VMT by Vehicle Type (Cars)' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='167' name='9 - VMT by Vehicle Type (Trucks)' width='192'>
      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
      QEz7H8MGsxZzcv8MAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Caltrans Table' width='192'>
      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
      ghxSf0b0BHYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Caltrans Truck Table' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Debug Table' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Error Map (AM)' width='192'>
      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
      FN7umBdLEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Managed Lane Map (AM)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='PeMS Match Confusion' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot Daily (Caltrans)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO292XNcSXan+fld4sYegR3Eyp3JZG6sNVVSSSp1q0s9ozGbhzFrm7aet3mY
      f2rM5k3drbbulnpTm7q1lEpVWZlZuTMzmSQIktiBiABiv6v7PNyIAIIEQAQAkiDhnxlpiHvj
      engAfnw5/jvHhVJKodGcU4yXXQGN5mVidX+otDxW6s1TKdQxTa6N5BFCHOn9nufhOM6xP09K
      iWGczJZPWsZJn1dKoZR6qXU4je8AHPnv/jzqIKVECHHkOvQMYLnW5K8XVo/9wXsZSSa4Opw7
      ciWCIDiRAURRdGIDOGkZr0MdTvq8lBIA0zRfah0G+Xzr2W/pJ2xts3bvPoniJLK2iq8yFCdG
      SDoGnkrT2nxMkEoQvn3xyAYQRRFBEAxalb7nT8pJy3gd6nDS57sjQNcQXkYdpJQMsqwd2ACs
      9BAJGwQQhSGSEHd7nUpbcPG998gP3WIkmcCyrCNbsmma2LY9aFX6OOnzp1HGSZ7v/tFe9u/h
      JM93G+9JRoCT1iEMQ0zTPHLnO/BYEzRrJIen8GpllHCwZADpIkPDKZqN1sAV1mheJgOPAKbj
      QLXKxPVbyHaVkATJdBLTMgmD8HnUUaN5bgxsAIblUJiajV84o333bOdkQ59G86LR+wCac402
      AM25RhuA5lyjDUBzrtEGoDnXaAPQnGu0AWjONdoANOcabQCac83AO8HSb7J291sK829g+NvU
      aiHF8RESjo3nRaSymedRT81LQClFECm2Gj6tICKftBjNJDDEyTT/Z4mBDQBhMzw7R2X1MdJt
      MHb9Fo2NFWTgUbx0E7/VxFcBSqkjy2IHee9BnPT50yjjdajD3uerbsgHj6qUWz5KgSEE0wWH
      9+eLJMz9DeBl/y27gUVHlUQPbgCGSbu6jWnbBNUmG199jpXPEnkhhiGolbdwkoleZM5RkFKe
      6EsP8lnPq4zXoQ57n4+k4qPHVUpNf/e+UiztuKStKt+byT/1/GnEA5z0OwxqgAMbQNSu0typ
      kZmYJ2lLmi0oTIySStu0anWGZy8ynExgmuZA8QCWNbgtdlFKnej50yjjNJ4/C3XoPl9vBVTa
      4b6NcbUecFsY2Gb/3/c04gFO+h0GjQcY+JPs7DCz7w53Xo1R3HMvd/yoRs0ZI5QHTyMiqZCv
      SS4R7QXS7EvWMUnZ+/fkhZSFfcAa4FVDG4BmX5KWwa3JLKbR39Ady+CdCzmMc+sF0pwLhBBc
      GU2Tsg0Wym3aQUTesbgxnmE4ffL467OCNgDNgRhCMFNMMVVIIhWYr5H/v4s2AM0zMYTAeL3a
      fQ+9BtCca7QBaM412gA05xptAJpzjTYAzblmYC+QUpIoCDCsBEKAkhFCGMQvFOKEGZI1mhfJ
      4PEA7Tqbi4tIM83IaJJH360xNjNBwoxQmQnyxezzqKdG81wYPDdouoCJj+kUqaxXyGRswuY2
      1bbi0u0rrN+9o9Ojv6J10OnRj4Bf28IPBIbXIpFMsrOxQXL2MhfGBNXyDpM3dHr046DTo59O
      HZ67HDqRH2P2vbHe67Grb/R+Tg1amEbzktErVs25RhuA5lyjDUBzrtEGoDnXaAPQnGu0AWjO
      NdoANOcabQCac402AM25RhuA5lxzDDm0iiXQhglKoejPFPC6ZQ3QvN4cQw5dZW1hAewsjnCp
      VT3yk+MkLYlKj2s5tOaV4hhy6CK2EUIyQzZfRGRDZH2DrRZcun35WHLoMAy1HPoM1EHLoY9A
      LIc2EG6TlccPSA7NkRwaZXLk+HJoy7Jeugz4NMrQcujzJod+40bfvfSghWk0LxntBdKca7QB
      aM412gA05xptAJpzjTYAzblGG4DmXKMNQHOu0QagOddoA9Cca7QBaM412gA055qBtUBha5u1
      e/dJjkxDYwNPZCgMF0mmTNwgQW4o9zzqqdE8FwY2ACs9RMIWqChEODnSYUS9vEK5LZh7771j
      yaGllFoOfQbqoOXQRyBsNynMXmXr4SMsSxBIgZ0rkky0cdveseTQnue9dBnwaZSh5dDnQA5t
      mILa8hqjV96AdoVQpEmmE1i2je/5A1dYo3mZDG4AiTTj127GL9IX+u45aX3utubVQnuBNOca
      bQCac402AM25RhuA5lxziAGErN/5hLXv7hGGJ/dxazRnkUNHAK+2Q7NcIoyOv7Gh0ZxlDjEA
      g3SxSGNzRY8AmteWw9cAQjBy7S3SKecFVUejebEcugZo1gJSokW93n5xNdJoXiAHGIDCq7ex
      EyGlUpN0Wo8AmteTA7QLksbmKtgZcsNmn7ouau2weu8eyeFpZGMNX6Upjo+STBpaDq155TjA
      AELa9QjLkIy8/TYWu8o6I1Vg4tJlajWXwHWJDJtWaflEcmidHfps1EHLoXsYSLfMTrNF44M2
      M9/7IUknlqjKZplKpc3o1Bgb1QqJMID0EDm7hdf2dXboY6Ll0KdTh1OSQ1vM/vj3972jDAvZ
      2qZWTpAfyRGQJlvIYidsPDcAEsesukbz4jlwDbD1zaeUVjax7ARTP/wp2Uy8ELbSRabeLO77
      VDJz8l5Yo3mRHDBHMRl/8z3SmRTCEDDAnEqjeZU4dCeY0CNRGNEH32leWw4xAEnke1RXV0Ab
      gOY15cAYxtBrk790iyFTYD5n0fRJXKAazUk4sGl7tTKrX37CxqMlxBHdmcflNFyYGs1xOHAE
      yIxN4ZigZETghziJVz/gXckAVfkW/Dpi6AYkh/X65pxzSNduM/W9H5LMpLHtV7/xA6jqImrt
      N6jyHeTqr0Bpmfd554CWHbH2+Uc0my5go3hN3KBRAN3vIn1QOtDnvHPgPsCFd39IYXgIw3h9
      tgFE8TIUr0N6EjHxAzD02uO8c+jcxrATqKBN4Iekkq9BYzGTGDM/7bwQev6vOcwADJxcjvzM
      ZVLpXX1P1K6y+t09kqPTmN42rkySH8rhJE3cwCZXPLty6LjB60av2eUQAwjZ+O4+hdmLfVeN
      ZI6JS5eoVltsrz4mO/sWra1lSq5g7t13jyWHjqJIy6HPQB20HPoJVOjR3tkhd2Fm9wNa22zv
      uIxNXyBsVjEaWwTpIjmrieeGx5JDm6b50mXAp1GGlkO/NnLo2EFiJxMEntdnUQqDsLpJxTQZ
      Gh+h0YLR4QK2Y+O2feA1WCtozg0HGkBzaxMrlSZo9g9JVmaI6beHeq+Tw7v3Ulnd+DWvFgfM
      USKatQbpXIog8F8bN6hG8yQHjgDt0go7kcPk7DhhEMLr4AbVaJ7gAAMwmX//DwGBDEMMSzd+
      zdlCKYUbRCgFjm1iGsdzbx84AggRz45MrdTUnCGUUpQbHr+4s85SuUkkFUPZBL9zfZwbU4WB
      y3s9VG6a145IKjaqbSoNj1TCZGooTSphsd30+bNfPqDe3t03Wttu8x8/fMSfvDfDW7ODGYE2
      AM2Zo94O+G+fLfNws9GTYeZTNn/8zhRfL233Nf4uUsHffb3O1YksmdTR9yG0AWjOFFIp/vMn
      yzwuNfuu19oBf/HxY6JDUvW3vJD1apsrqaOn5tEnxGjOFMvlFktPNP4ufiipNA4/infQsyz0
      CKA5FfxQ8rjUpOYGFNMOsyNp7GMEk5fq7oHRJ4LD8zNYhmC8kBro87QBaE6MG0T8+4+XKNU9
      IFbdjmYd/vk7FyhmBssU6FgHz9+FEEwPZ2i6AZF82kxuXx4hlxrMazm4iSpJeeEbWk0XJSPq
      W5v47RYqCvBa+hyB88iXSzuUn5ialBoe/+Pr9X0b6mHMjWZw7P5mqZSi7YfsNH3yKZsfXBkl
      v6ehW4bgx9fG+MNbFwYWuw9sAJHbIDU+Q3X5IfXVBTaX1qhvbVB5dA+lI6zOHWEkubte3/fe
      2o7LdvPwOfuT5FI2f/jmZG+qI6Vis+qyWXXxgojlcpOPFkpMFFPMj2UwDJgfz3J9Ko91jM2w
      gadApuPQWHrI8Nw0C7/4O6QSpBLTeJ5k6JJ1rHgAKaWOBzgDdTjO834kafshSql9dfj1tkch
      efR+Nooibk3nySUtfvugwuePKkRSkkvaKKVY22kTRZLvVqsIAaYheLBR5+/vrPHP3rnAz9+d
      Or14gP3wKhs0GlVEKcebP/9TdlZXMRMJxjM29crOseIBPM976Tr40yjjPMYDmKaimE7gBm7v
      WrfjMwSM5lIDl2nbNlcmC1wYyvBwq0E6YbFZc/HDONjFC6J4oaxUxwggUvBXX6wyWUzz4+sT
      J48HOAhndI7Lo3O918Wp6d7PAy7ANa8BhiH43sVh/uvnq0/de3O6QDZ5fD/LTstHSkWtHeCH
      sXszkntzlAiiSCEloCRCCH7xzTo/vDaOeUQD0PsAmhMzP5Lm3bkijmVgGoKEZfDeXJGfXh87
      UeKBdMJECGj7Ye9aX3CWUkipiCJJJBVhJLm/XuPeWu3I0yDtBtWcGMs0+P0b4/zg4hAtPyKX
      tHHsk4VFAhTSCaaH0yyVW7sXu/akYN8NAwV/+dEj/p9/dpN8+tkuWD0CaE4NxzIYSp9O44d4
      LfEnt2cYzu42ZLOjUlY9C+i3gmzSxgsi7ixtx+9T8cgQhBK5z6igRwDNmWY0l+T/+v0r/L9/
      cw/Xj71UyYRBten3mn93UMg4FoXOxttO06flBXy6sMX9tSpeGDGaS3L7yhjzY3kMQ6CU0gag
      OftcnczzL35yib+9s4brRyilMAS03BCFwjQE2aRNLmX3jMEw4N/+8j6PNnf3KNYqLe6u7PDH
      783y1vwIXzwsaQPQnH2EELx3cZirkzkel5p4QewO/e+fLRNG8dTGEAJDxL26bRls192+xt/F
      DyX/84tlvny4xcPNmjYAzauBEIJcKsGt2XiK0/JCfv3dBneWtpFSYRiCtGMxnHH42a0pPvj2
      abcsxFOmrZ0265UGuZStF8GaF0cQSjaqbZbKTaotf99F6VHL+Y8fPmS74TGSS5JJWiQsA6Vg
      LO9wfSqPFxywq60UTW9XTKdHAM0LYaPa5m/urLNZdZEq9hi9NVvk/WtjJKzB+uFvV3d4sFFH
      CEHSNknu8TptVF1WKi2SCYu2/7QRKOLNtGRHcKdHAM1zp94O+M+frLBSaRNEikgqWn7ERwtl
      Pri/NfBIsLixv/iuy3K5ya254X3vCcCxDZKJ2GiOJYeuPPyOdtOlVVple32LwG3Hcui2++zn
      NeeOb1ar+6pCFXBnaYeGO5gQ8lkSa6kUP7l5gasXng6QTzkWP31zCqcz6gw8BYrcBomhcbaX
      FsmNDuGW1wn9LGbokpq6OmhxmnPAVu3gjtENJLV2QH6AON6ZkUxvo+ug+6mExf/xu1f58lGZ
      71a28YKIsUKK25fHGCukSDsWH9/bOI4cOkl7eZHRy9dwS8tkLszibi5SbUqKl2ydHv0VrsPz
      So+eMMWB2hwBmKje3/8odbg5lefjBYfSPoY1nne4NpElCAIM4N35Id6ZGwLUbntUkn/67gyX
      xnPHkUOvU69VYX2D9sZDjOQYuclphuds6uXjyaF1evTB5dANL+SzlRqlpk/aNnlzMsdE5uX+
      Hg9Kj35jqshXy7V9py6TQ2lGC/3xw3vr4IcR3yxXKTdcMo7NjakCxYzD//l7V/gvv11icY+v
      /9qFPD9/d4qkk3hm52sDb86PnlAOPTfdd6+QHrQ0zXHwQsn//K5Mo+PlaPqSXyxU+L2LeeZG
      zl5U3sxImh9fHeU390t9RjCUSfCzNycODJ5f32nz579e7MsD9Pd31vj5e9O8Mz/Mv/zpFWqt
      gFrbp5BOkEvZA41iQgjtBn0VWdpp9xp/FwV8V3aZG8m+nEodgiEE718bZWY4xb31Om0/Yjyf
      5OZ04cAgdi+I+PcfPHwqCVYoFX/12Qqj+STTwxkKmURP/3MYSimkUjTaAaGUZJMJEpahDeBV
      xA32z33jHrT58wLoNjClwDDUU1MQQwjmRrPMjR7NQBc26uy09o8njqTi84cVpoczR67bUqnO
      336+xFKpTssLSSUsvnd1XBvAq8hoNoHgaTn82IApSE6LIJJ8cK/E/Y06tXZIPmUxN5rhzekC
      k4XksYJithveofcrz7jfJW78Df7s7+5SqrWo1F3CzjTs/uqONoBXkYlsguvjGb7bbPaMYCht
      8ebEi1+EKaX47NE2Hz6oUG54+KFEAN+s1vj04TZ/cHOcH1waHtgIss84jyJ3xPMqpFL87eeP
      2Wm4lGpub9NNKYUfRNoAXkWEEHx/Js9cMUm5FZC2TaYKDsgXPwVq+REfPaj0xe1CfLh6teXz
      q++2mBvJMFFIDlTulckcqYS5r5xBCHhztvjUdS+IeLxZY7Pm0nRDHNukmEmwUm5Qd/3+xh9G
      RFLHA7yyCCEYzzmM55zeteAlGECp7uEG0b7iMz+ShFKxsFEf2ACySZv/5fYM/+m3S32GJQT8
      +OoYVybzQNzoVypNVkoNPri7zqOtGm0vrkvXAKoNt69+UqresV/aADQnwjIFKPbd6BIIBLEh
      HIcb00WGsg6fP4ynVxnH4uZMkcsTOQwhWCo1+E8fP2St0mS90ozTpSjVifaK1yZBGCGlxA+i
      XrKtUBuA5rQYyyUZyiQoNzyisL+hdxWXF4rHz5czXkjxx+9OP3W92vL4d79aoO4G1Ns+oZRI
      KZEKwkh1EukKWlGEacRrAaEgkpK99qgNQHMiEpbBH9wcZ6vuxYvMznXbjMMUZ0cyXBk/3b2J
      7YbHX3y4yP31GkKA54coFR+SsXcgUqqTQ0gCCMIoPlOs50HTG2Ga0+DiWIZ/8f4cd5Z3eFxq
      0g7iVIZXJ7K8f3UU6xhp0g9ipdzk3/7jAosbtd68PgglUfRE42d3miOJ7wnDQKh4jyKMJAo9
      AmhOAUMI5kczzAwlOwEnccY4yxAnSoy1F6kUj7ca/Jtf3qdUd4n2tHZDCCJUvEJWKk6Z0jcS
      xAtfgcI0BdlkglTCYqvaOoYcurXD6r17GOlhaK7jqwyFsWGSCQjtIfJDuVP5wppXkzjg5HTy
      AnXxgoi/+PARd5YqrFbi02MiKZEyzgiBEHF6lE5Q/N723zU/ITrenwhabsBwNnk8KYSRKlAY
      G0PZWYKEIBNGtBoldlqCS7fntBz6Fa7D85JDn7QOf/XpMndXdwg6yXGh0+urOLosknGSXHXI
      6QCGIVCduZAfSRquT9sLBzcAv/SA1cUNRucv0i6vEJAhPzpMviCpVqpaDn1MXtXs0Hs5SA59
      kjq0vJA7SzsIIbAto69TtS2DMIp3nhEC24jn+VKB37cvEaduNw0RJ9dVinKtTRAdYyc4MXqJ
      68PzIAzE1GR88ZTmeRrNk1QacRA9xDlIkwkLt5MsV3RyAZlW3P6GMgkEivXt1u46QIDo5JBT
      Ih4Jokh19gLU4DHBQhgYZty7i+4/IXr/XnWUUmzXayyurrBeLp3K1EZD7wCNgw7SOIhUYreP
      FkIwmkuS2HOOmBDxZlsuZZNNWkgVb84ZQqGURPWmY/HmmAIsa1dKqL1AT9DyXNZKJZRStFwX
      IQQTwyMvu1qvLArw/Ch2kZabCGB+NMvNmQKObe47a1dqV149lHWYLKZY34nPnzNNg8mhNG0v
      xAsjrl0o4PoBy6U6lYZHyw1QCizTRMkwXhh3yjWEQMq495c6L9D+BEHY10N5/mBnXGn6aXkh
      f/nxEo9KTWRnHn5vvc69jRp/enuGtNPfBINI8tGDDb5e3qbpRQxlElyezFNt+T1hnBCCdNJm
      Pp/jj966wF/+ZpFay8cPZCdVosQyDLIpp7P51VmcK3BliJISJeP5kTaAJ8ikUjiJBJ7vYxgG
      xVz+ZVfplUUpxa/ubvLF421cP4pzeBqCXNLm4WaD3z4o83tvjPemzmEk+cuPl1jYbPTKaLgB
      S+Um784PYxmC5XIT0xBcnsjz3sVh/vUv7rG23URGe6ZWnR3hQsaJk+h6QSdNusLz9xyxqrND
      P41tWcxPXqDluiRsm2Ti5QSZvA40vZAP7pWot0MiGfWmIm4QEcoEDzYbvH9tDLuziL2ztM39
      jTrxsjWesMe2IfhqaZv/+49u8Ce3Z3vlP1ivcn+9SqXuoRSYhoEhFAHxPkGl7pKyY0+RYRgI
      wDIMIiG1GO4wbMuikD17sbWvGgsbDSoNj/AJmbZSiu2mR90N+rLC3VuvIaWi7vq0vBCp4lMg
      c0mbTNLiwWad0XwSpRRfL23zHz5YYG27GYdhCoEh4h1jRbx+aLo+QRB7ipyEiWUaSKWwTYMg
      kqD0FEjzHNmotvskC3vpypUtc3cZ7AURpbqLt0dVKiNFpekRSokfxvP5D+9t8P/9zbe0/dhI
      FCCVBNn1NnV6eCGQKj6t0jIM0gmLbeI1hGObRJGeAr12RDLu/U5Th3NcTCPulQ+8L2Lpclcr
      l7RN3EDuu63UzR7X8kP+/B8XdgNcdqf98eJ2zzoAASFgsnvQnmObeEGEgcC29Ajw2hBJxUKp
      zeK2SxBKRrMOb0/lyDrmSzOEi2NZEmY8Bw/35AMSQDJhxvn599TNDyWmIfZNlpuwDNp+yIP1
      GtsNL5ZARLuL2a6TX3Qdq4LeOsKPFI4ANwjJJG1AkLBiRag2gNcApRR3Nxp8+Ginp4cptwIq
      LZ9/cmOU1D7itEgqgihucJZhPJfN/ItjWW7NDvHJYjnemOpcNw3BUMaJUxOa/R88mnPYbvrx
      HL1D0jYZzjqEUZzbX6rdxt8RgB4YkdbRhuKHkoRpkHZsCmmHhGUQhK+5ASglCdu1OPAhmUOI
      1zMbfCAVX683kKpflbLV8FnebnNtT0CKUoq1qssnj3eotgOStskbkznemDx9Fa9pCP73H87S
      DkIWN+tIGe/SZpMWl8Zz/ODySN/oNDWcZmGjxkQxhR/Gak/LFNhmrDa4MJTGNPobe/z8s8V3
      UsUGbxiC/+39K0yPZHm0cYwjkqTfYnXhEdNvvEHp/hf4KkNxdAgnaeEGJtnC2fGeuDurtMqL
      AGRGr5AsTr3kGj0fglDihftLNupe//Vy0+d/fLNJu5Ncq+FF/GqhjEJxY+z006rk0wn+1e9d
      5otH2yxVmgghmBvJ8Pbc0FObYLcvjvDZYpmGF/YdegHxaHJxLItUiosTee6vVoHuovfgzxfs
      SqQRivnxPN+/OoFjm1wYzgxuAMJycJIOKIXXaiOFoFlqUXEVU2+9Q+nhAiqVIHrn0pFlsVEU
      EYbhs994AFLKfZ/3mxVUxwXnNStY2fGByzhpHV5EGaZQpGzjqcxwAsg7Rl+Z36zVaD2RaiRS
      8PVqjYvFZyeVPYyDtD5JS/CjK8P84PIQQG/eHz3xXdMJg5+/c4H/+tkKDS+MJc9SYhsG4/kk
      3yxvE0QRhVScGCyUsqfvObBOe+6mHDseRYRipVTj3/3y3jEMwDAxTAOIEFYGKwyRiRyOahMG
      EYXJaQqpBIZhDCSHPomEVim17/PJwgUirwECkoXJQz/joDJOWocXUYZpwnszBX65UOktNoWA
      mWKK2eE05p6QxKa3/0jhBRKpxIm+Q7fDO+jvfljJ9XbAX3+xwv31KqGk49uP1yqRkvzizhpb
      tTaGiIVvck/Pv1+WPLrXOv8ZHa9YyrFxA8mf/d1dyvX28SLCmuVNQmmSyTn4DFMYLpBI2rTb
      Lk4ui91JTz1Ib3JST8V+zyeyo9ipWMogzGf3bs+jDkel22set4xLI2lsAxYrLn4omcg7XB/P
      kDD7NfSjWYdHlfZTz+dSNokn9PbHZdAy3CDizz9YZH2njdoTs7tSapG0TUZySbZq7dgYgK1q
      uydm2/OhPDUX6myKCeJdYtMwuHKhyKcLm1Qa7vGyQ5vpInO3f7TvvfSeJE1nASEEwjpbdXpe
      CCGYzCWYGUr3XXuSmxdyPCg12W4FvcBxUwhuTeXj8MJjUm543F+r4UeSmZEM86OZPhfnYXz1
      uNJTe3apt2MRohtEVOpuX1r14InkwPH3VHt6/NgBArujQxhJpkeyXJoo8OHdNSAOkXytvUDn
      kWf1vhnH4n99e5IvV2rcWa2y3fBJJkw+uF+iMpHh+xdHBs7isLrd4t/8+mGvkX64UObyeJY/
      vT2DbRkopdhpBazvtBDAZDFNIW336vqo1HiqzGDPbnDL718rKLo9ey/UZXcPQOxJh7IHqWBj
      p8lyqU4YSUq1Fq3jhERqXh2UUmy3AkoNn4QlmMwncSyDjGMxM5Tky6Udssm4CTT9iE8fV0km
      bN6ZKRx5GhNEkr/+co0nZyQPNht8uFDi/Wtj/ObeFh/e3+pJHJK2yfvXxvjBlVFMQ+x6auhO
      BQWmIehGiXcXw/GCt9P4O/Xr/r83E8T+ATeKUq3FX3xwn2bb7507oA3gCMSpPiTlzgbNcDpB
      yn55O6xHQSrFlys1Pl3aIehsGg2nbX52Y4yhtM23a/U+nY7qBJj/9uE2phBMFJKMZBIYz5gW
      leoepfpuqnIvjHD9OOfOpw8rJG2Tf7y70WcgbhDxD99ukEvZXL+QRyrFRtWNT3wXgmzKIu3Y
      uH6s/bFNg7YfyxxkT8vfqznd/V9Ft/c/QH8k4cO760wMpbE6O9TaAI6AUoq7m3XWay6gSFom
      704XyTpn7ziiLlt1j08e7/TtqFZaAR8sVvj5mxN9LlOlFF4oqbYCSvg0vZCEZfD2TIEfXRo+
      dErkdlyqSimqrYCaG9Dtl5teg42dNmkn9v9EsrsgFYQSPntYYWG9xrcr1ditGcW9vBtE5JIW
      Kcei5QZ4ocQ0DIIo2g1xfDLvCd3UJ/u43rujC/GZY34QMV5IU6odIy/QecQNIrZ6BzII3DB+
      fZYNYL3m0QoiWl4nDbgpSCdMSg2fdhAxmU+yvB0vPKWCajsglIqkZXQao+LzxzuMZBJcn8wd
      ONqN5BwsQ1B3I6rtACkVsuN5cSyDuhvgBiFhFO/ECuJsDoV0gkelBjKSCAQj2SSr281eJuhK
      w2c055BNQRjGEoi4IXd6/F51OpOgzkh1WAh3Z61MKGVnIyyrT4o/CkKIJ35R4kQekxeBF0q2
      m3Fj9yNJy4/YbsXRUIaAN6fzjGadTu8fEUVxuGLGsXqNXSq4v9noeReVUrT9kAj/K04AAAlj
      SURBVK26S63T2HNJi3fnh2j5IUEoe/G2sdZI4YeSnaZPww3wggg3iGh5IeW6S7XpIxXU2h4r
      2814jSBin33CijX7Lb8rmVbxHGafKGLRmf8nLKM/KdcekRzQiwswDYMgjGi0fT0CHIWkZTA7
      lObxdgupFPmkzXh2sHz3LxKp1L7na0VSkbJNEqbBwlYTRdxIg1Dh2AaZTtDIXoJIddZAii+X
      dvj04TYtP8QyDa6MZ/nJtVF+59oY/3h3iwrxZwri4HUh4kWyVHSyNe/Www8ljqWoNFwaXtjL
      49PT9iuBUiZKwU7LR0nZC3bpKj6fnOvvivtEb0Owu69giviU+LF8mpbrs1pp6jXAURFCMD+c
      YayjSMw4FtYZHgGkVLQDSSFlU3fDnnvSsQ2yjsk3a3V+vVBCdnpNgEojgsTT/etEPo6r/Wa1
      xj98u0lXgRxEEV8tVwml4g/fGMdJmL2ygN0EtB2B3pPlis7FhhcSdRLV7iXsxDWYBrhSEYbd
      MMZulod+3b/qKEQD2UmF0uv44/9Nw2CimOHtiyP88qtlXD/U+wCDYAhxpuf8e4kDzy0cy8DO
      2HGyWhEvPrOOxZ2Vap9XxjYFSTv2tNip3SnEaDbBrekCUim+eLzTa/x7ebDR4J3ZAo4VG4Af
      yt4Uqjt1Mg2BKXZ1/kZHJdB0Q8JQ7h81JmL/v6CT0xP2aJ+7aRA72qM9edH37gHsHS2EEIwX
      UtSaHjtND9OIXa/aAF5DBHHj/eRx2AsyyToWxaTFlbEMi1v9G09CCPJpG8cUpBIWLS9iPO/w
      u9dGySUtvFDS8sNeA+4ePgHxgjKIFBOFJA03oNYO8AKJIl54S2kgOlocozt1UYowktDJ1hyF
      e3rzXp1ir1AUyT3z+O44Ejd4iYInvT5CIBQo0TEUFa9JXKX49MFmx6BiIzyWAaigzeqDR0xd
      v0Ft+R4t3yY/XMBJmrj+2ZJDn1fWax6fLVVJ2fEcOpKxm/N7c0Um80nSCQsv3F0jSKWot0Oq
      UhJJF4hDCMNI8tPrYzi2Sd0NY3+/goRtkEva8XzbNMglLX5yfYy17VanZ43L9UNJreURSdl3
      zhfEI1I2abPd9PYVs0mlkL3Gv+dZsWtET2p/1N73KPZkhYvLi9OjxNKPrkxj8BHAsLETNihJ
      ZWWZwsW3aG2tUPEUU2++TWXpISI5mBz6VZYin7U6BGHIndUqbhBhm4J8yuqlF1ndbnN5JMXb
      0zl+ea9EpOKGUWuHNNywT2DmhZJIKv77l+tYRpzgKujM6f0obtAj2QSXx7I8LjX4ZqXW2bCK
      SDsmUsJEwcEeS/Nwq0HTi0cGiNcdphA4lkHTDXZlD6J/N7fXyPe0c0XHK2cYKAlS7e/33G83
      uHule1ySEAKhOu8st1yWq60j/aLdRh0nm6GxuY5SAjPpEIUR+ZEx/HYTxzS4OXWw9v5Joig6
      sQz3qNLr51XGWapDEKl942oNIbBN0QsR7IrH4h3U7vOi7/195T9RZre87k5zt9GZ3YPz9j73
      xPRm17XaX+5gv4N+AVy3DgOpkNX+wokXShiGWNbxlyMnff4s1CH2YkQvtQ4nff5Z8QAvog5R
      FMVJsI5oBGfCAAa12tN+/izU4aTxAKdVh9fhOwxShzNhABrNy+KluUGVDPns449oS4dLE0OQ
      MgmNArPjhSM9v/7oLiU/zWTK5+6jdabmZkA5tBtV3rh5/ZnBGKHX4uuvv8E3UzhBjapvMj01
      RjZh0BY55iaHnlEDyb2v77C+02RqJM/mVon5axdx/Qytxg5v3bxylN8C9z7/B1qZm4Slb2kb
      WabHh8hYEpWeYGI488wSPviHvyE3cQknrLK53WDu8hwycnD9gOuXZ575+QvffEHVM5kdz3L3
      4SqTU1OYIoHbrHHt5g2sZ/0e3TqffvoVZmYIv1nGyowwkk8iApfh2Svkk4fvnbiNCp9+8S2J
      7BBOWGPHE8xMT5C2DNoiw/yF4Wf+Dhbvfkl5p8n49DRLS8tkhybIJw2CZoP5N27hmAd/h5em
      BVJRRHFyhstjOWrtBncWN5keO3om5smZeTJJm5YLP/zJbcJGk7tffMbw1OyRIpHMRIqJ8TGm
      J0dIF6a4MjuOW6/y1f11ZiaKR6iBwfBQDstykIbDj3/yLs2tGp/95iNmr14+0ndoVNYxs6MY
      qk1x9DJTQznc5jb31+qMDz278QM4TgLf9xGJPN+7fZ1GqcoXn33NzPzTh0s/jaJaraNCl42y
      xw9+5/so1+XBt1+SGb3wzMYPYCVzvPPuG8xPjzJ/9RbFlEWtvEzFtcgdYePQNC2EUBimIpW/
      wNX5Sdq1Kl/dW2XmmZ1QTDqVxhABDxa3ePO975E2JeW1+3hW8dDGDy/RAIRpUdta5WGlRTGT
      551rUyytV474tOLxg3vc++47MCI+/vVnOIU8N29/n8raUl/43EG4tU3u3F1kp+7hNjZYXC2R
      KQzx3o1ZHq2Wnl0FGbBZqhLJEEv5fPjBl+Qninz/J++zdP/+kb6FxKBV22G72qZWechGrUU6
      N8Ibs0OslqpHKCEgYWdot12MsMlnn9+nMD7M7e+/w+PFx0d4XjAyOoxSESnH4Le//gQrk+Hq
      rXdpldd63p3DUaytlilmUywtfE3dVxTH5pjISnZa3jOfDkMPISyCALzmBovLW2SKQ7x3c45H
      K1tH+Hxwkkn80OLm9Qt8+/mn+NiMTV8nQ5VmcLgrXq8BNOcaLYfWnGu0AWjONdoANOcabQCa
      c402AM25RhuA5lyjDUDzFOX1JRaX1g/NunwYrVqZL774glK5TG2f2OSzhI4I0/Th1zf4+w+/
      ZiIV4Aa3Mb0qxcl5vO1lrPwFLozmKZdKGNLHzhbxm03WNzeZGB8nk8/g+bD89Zf4Q5cIy/e5
      G80yKSoUpi4hAhfP8yikk1j5YZwz0P3qjTBNH/XNe3x43+V6vs4n320xPD/D9t173N/aYfri
      JS4O59hp1TBo4tUkQ5cus/BgkUtTk9TrDW7c/l3cxQ/4fMPnR5eHuLe2jT18hcbqAo4tqSwt
      k56/xp/+/J9in4G8AmfABjVniezIPGZjic+XGtx++xozU1NcuHiFG/OTXLl8iR/99Cf88Pok
      qnCd0E5wsWhQGJ3ixq1brG1UuTiRIzs8yc9+9kdMjo8xc/E67sZ9RqfnGc+b3P79P8A08mei
      8YMeATSnRGnlAW5ihJmxo6l5zwraADTnmv8fC3EJHIBJeWQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot by Time Period' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Truck Volume Scatter' width='192'>
      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
      /j8qGXQJjTlF/AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Truck Volume Table' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3NcWZbv9zsnvffw3oPem2J1VXdXT0/P9PSY1lyFQoorKRSKuJ9CofkG
      0oOe9KIr3bkR907PtJme6ukuQxa9AQsgAMImkADSIZHem5PH6AFVYNUUqwlWg0Wgmb8nBnm4
      c+fJs/bZa/3XWlvQNE2jRYs3FPF1T6BFi9dJywAOiGaz+bqn0OIb0DKAA6JUKr3uKbT4BrQM
      oMUbTcsAWrzRtAygxRtNywBavNG0DKDFG03LAFq80bQMoMUbTcsAWrzRtAygxRtNywBavNG0
      DKDFG03LAA4aTSMZ3SQUSaDUS+Qq0jcaJpvNogGZbHbf/6dezjE3O8viyjqy+vxrXma856Ep
      EqtLi2QK1d97XTaX5UWZ9p/PJZvN/EFz+joUuc7S/CyLa1tfe03LAA6YWi7MJ4+DRGdvMr8w
      w2/uzJLOV0hth4kk0pTzKTbC21TKBRKJBKlMnka1QLlSYXV1DUlRiW6u8f4HN1CBW3fvAJBO
      RNiIJqiWcmxvpyiXsgSDa1TrEqHVVcp1Gb3RTGxrBc1oo5BPk0omKZarFItF5EaFYDDE9Tt3
      qBRy1L/OQl5AaPoukbJKtVJmdu4J2VSC9fUQW5sbFMpVyp993t17d6lViqysBMnnIvyn//iP
      5EsVQmtrVOpNkrEtfv7+7wC4c/cWAMVMguBGhFq5RCKRpFwqsBZcpVitE9sKkSlUXmqu9eI2
      K1tpAl4X+XyOVDJFNrNDKpsntrlOplBF/43uQouvpVFI4+4d45h1g3vrBUSzjY8/+BCttk37
      xFtEn3xEWrJwfMCDFjiDvLOK2aSnUisRiScYCg5Tt3ShE4QvjKry9PF9HsxGuHSuB8V/lurW
      HN0ehemZeaLJOGPHrvCT75/H7Xbh87j511/+f3zn3e8xs74NtQz6RpGe8XOolSy//O1N/vZv
      /+obfb/e42fZuHmLlaZKNbPB1soKFouC6O6ltrSG2x1Aquyu6KnIOtd/+1u6L30fVREIPbnJ
      jcerDIyOo0OPQf/l9Tf4dJrffjzLd75/mozchqMSxhGws7S6xurCIr7B4/zP/+7PXmq+21vr
      BLs6iC/d48w7f8WN93/G96+dZSljQvp0ofUGOGjsXaNUQg+4Ppfm0rE+qukwNp+fns4etkJb
      dHT3M3n8JH5/gGPjw5wbDxCpWpno66Szf4LR4T4qySiCwQSAUkpxZ+oJ2WKTwd4OLA4vxyZG
      cJgFNsIJPB2ddHb0MTLYBYDZYkWnE2jvG6a/u4NCZJVkvkqb10UwGMLs62Ws00qu8s3qFwrp
      HSRNQFFkbDY7Tm+Anp4uunv6cNgsbG8skqsq2Gw20uk0vQND2B0+7KYaosVLT98Q48P9yNUc
      TU0HgEGu8sGtR6SzRYYH+jCaHRw/Po7HZWFrM4bB6qant5dj48MvNVdRZ8BiMSHLMp7OAUZ6
      2xgYm6S3b4BaOoLB4UFolUQeDNlsFq/X+6193sbSDKvRAt/53rtY9cKL/8MRJLG5zOxqjAtX
      38bnML2Sz2gZwAHxbRtAi4Oh5QP8EfLww1+T0hyMdbnQfEOMd7peyzwef/JLpter/OSnf0On
      x/KVf6+mN1lJGTk72QXk+fv/+9eMXblMs5zhyltX0X0Lc2wZwB8h+UwaxedCrpXIJWOsPryB
      s6Mfk6BQSUQYnBxC8E8w6H0124rPuXDpPPF6Gjm+zD9/WqTX7qB7wE8mW2EtGGSgx8f6Vgmd
      XuXUqIl0qsCkXk8inWZh6hahWIGB/m70ZgvxRAGvw8CFC+cPdI4tJ/iPELPdx/e++w52s55c
      Ygvv8GnS8S1yO2H01gY//2CJTpfhW5tPJZdl5PgZavkM2fQOobUVfCPn6AnYWFlcwGB1ADB8
      7Dznjw0BEIrnOD3koVBt8ODufUqFBNnGwc+t5QMcEIfJB0jGYng6u5GKaeqiha3FGQLDp7A1
      M9TNAYo7McYnxhCEV+w8y1ViqQYOfRMcHqT0FuuJMmOjw2wuz+LpHMBicVCvl+jv9ROLlunu
      8ROLxbAbVebXU1y+eJK15RABrxnFEqDdbT3QKbYM4IA4TAbQYv/s+QDNZnOvtUcmtk4oq3J+
      so9HDx4yenych588QrU6+dGfvsvSzBzHz57i6aNbSNZOOq1N5lbCnL36Lh1uC6ARWZ2jqG9j
      stfJrTvTXHnrHA/v3MXg7kEphqnUFTo7Oghvp7B72um0SKxFs7z93g9xW57v/miattt/R5PZ
      SRVob/Oxs7NDW3s7X1zLNLVJfDtFwO+hWGkgNyQ6Otv2/r2QToDFi8tmhGaNp6sb9A4MY1DK
      VFUTfrf9pW+koihUq78/PeBVE41GWV5eZmhoCI/HQzQaJZPJ0N7eTiwWw2KxYDKZePr0Kd/9
      7ncZGBh4rfPdL9VqlQcPHqDX63nnnXcOdOw9AzAYDLsrWLPIf/7oPle//x7LUzcpiO0YTXZs
      bgf1SoNavcji4iK9wwO42vtYWd5AtkJ3p5tEKku7px+bWOD6/RW+96M+Ht34V6ydp5FyCepG
      H81sAo/Lgd0OMnpcbh/VWpHA4AilfJqqYGXIa3vuZFVVpV6vg6aSiEZJpcFpNrAVS9De1ka7
      zw3A1uo8CiYkSSKf2WEnVaR/eASTHuRahrmdIv39bnQ6EUnSaA94KeZSFAslOru7sdqd6F/S
      OyoUCt/8Vzgg2tvbsdls6HQ6EokEx44do1Kp4HA46O3txWQyYTAYOH36NHr90Yl/WCwWLl++
      jMFw8H7LV7dAqkwqnUFFxGoyUKnVsTpc6DWJhqrDKMiUKnWsNgdSvYLR6sCih1yxilZJUjR0
      MNxuI5XOgt6IzQDlmoTd5UGulRBNdmxGgWyhjNfroVLIIZpsCHKdahP8XjdftzXdMwBAlZuU
      KjXsDgf1ShFVabK2EUbTdPQPDyKqCmarHYtJT1NqsLW+RrEm4Wvvxmk1IuqNWEwGBDQq1To2
      u41qpYyGiNPpRHzJ7XGhUMDlej3hxhbfnD0D+OIW6LCiaRqyLL/uaTyXarWK1XqwDlqLV0/L
      CT4gWk7w0aSlA7R4o9H93d/93d99+a9UVuc+ZTmcxmFocvf+FDZPO9HVGWIFGatW5tb9x3ja
      Olj69B7pmojDIDO/ukVnewDYjcLMPrpHvCijr6a5/ehTjA4P8/duEsnUEKUss8th2tv9rD6d
      weBqp56Ncm9qlraefoz70MAr+RQLyyFcHg/ry/M0MOO0mQGQ6mW2YkncThubwWVSRQlBKrAU
      3MLl82PQ7dp9IR1ncXULr9+PXoRULExDNCM2yywsBXH5Ahh0+3MGarUaFstX5f7XSTab5cGD
      B7jdbubm5qhUKpRKJWZmZujq6joyjrCqqszMzFCv1/F4PAc69lffAJqCu32QSmSeouBkpNvJ
      o6m7rMWbhJ9OUxZMnOk1c+vuXUJ5I0uf3qciqaytLX5hwgo9Q5MsPXnE7NQcJ6+9TY+jRrRg
      5sKZSR4+foJLyPFkOUomvka6VOfDD29z6uxpjPt5J2kyG+EkJ05MkNlax9s/QeALAoksa0hS
      A01V8HX1o1QLmJxeunxmEuni3nWCwcagz0iq3ARUBEWj0mgQDscZ7OsgEt/5Q+7toWBycpJI
      JMLY2BjpdBq/34/f72dn5+h8t1wuh8lkIhaLvbDK7GV5zuOmY3X2Hp7xq3TaNWLxLCYTGAxm
      TKKOWiHGzTWJ758dQm3kEI0WHJ4A5i/EDQUEHt+9wYW33+PExVOs3nyfG09yDHQZ+NnPfsFb
      b11laytCEwM+txM0hUa9zqfXf82Trf2U7GmIBiN6nZ6mCg6r6UshMqvdgVEnIuhEsok4HX2D
      GDSZdFHC9IVFT2mUKejcdLtMgA6Xazf+r4k6LGYTmqp8w9t6OFAUhWQyyeTkJBsbG5w4cQJV
      VSkWi69eBT5AFEXBYrG8kjfWV0eUSkTTZfyGGCFKFCWF3r6T5MLz1P1dxNa3sOvN7BTBYVAx
      eNqJrsyQyxZ4MjuDYPIx3imQKanow2EMXh012chQu514KE5H7wCVfBYc3Ux26rn9cRqjvM7l
      SydZCSfpb3O8eNaCAZ9d5PH0DGOjQzx9/AiX10uxkEfTRNraPITDETRNYyeZJF9VcNs1atUa
      tkqOqak1wIhBX6cpi9hMegxGA5HgGgXVyFhvgE/nlhk/cebAb/i3yebmJtlsFkEQCIfDSJKE
      yWSiVCoduu3a78Pr9fL06VM8Hs+BG+6BRoEq+TSizYfF8O2vLv/2a3zdjdrvdS9LKwp0NDnQ
      d4rN7T/I4V6K/T7IR+nV3+LV89xcoMOKpmmo6jfrZvCqqVQqKMrR9hneRI6UEPbFVIjDRisV
      4mjSEsJavNE8RwhTeDr1gIWNbWz6JnfvP8Rg87GxMMVWpo5RynL73mMcXi9PHt0nnm9AOc7t
      h0+wetpxWk2ocoOpu7fYytTo6fDz4KPfYOkapp7aYHplGzW/xf1Pl3B4fCxO3ydVFRBrKZYi
      WbrafF872S/mAhUz2yyvbeFwOlhbXkQSviCE1YosLi5jtDmJhlbIVmRMWo3F1U3cfj/6zzLd
      irkkO9kyLqvIzJN5aoqIx2lHqhZZXFzBZHeSjm+gGlyYXyBQNBoNzGbzN/8lDohYLEY2m8Xt
      dpPJZJiamsLn8zEzM7O3zZ2ZmaG9vf2VZFe+ClRV5fHjx1SrVXy+r38+vgnPEcKgZ+QY9cQa
      kslDl9vC4tKnxPMGMuuL6D0B2q0SwUSVwaF+wsFVVpYX6B09SbvnszRmQWDs+GnWl+cpxpdY
      WoqQr8s8WVgiEdliZXGFwWMn0TJBtgo6etq9GM1WIrHw/matycSSJU4cnyQbi9A1cox277Mc
      /tjmJq62TkxqjTpG6uUCsWSWscEOtrfTe9cZzHaUZg2plEPnCND5mfGFNzdxt3diMepx2g1U
      akdjby/LMuvr6+TzeYC92P/09DSBQICdnR1isRg+n490Ov2C0Q4PuVwOl8tFJpP5NoQwjU/v
      3qD33HfxWwRURBS5iSCICHwWRjSYkGsN5GYTvSgwfvoqlfA0d2dDuyOoMrduXOed937I9ev3
      UJQCc/c+YHkrzfpmmInzV9hZuMPDxSig8P7vPsThdL3EfkxDEAQEQUDTQKcTvhTd0TSQagVW
      1+OIgoYqKyiCgCiKwDMn2mKxIgggWNy4TQpLy6t7/79ZybEe2TkUq/p+WVpaYmdnh/X19b1g
      gU6nQ9M0RFFE+OweNJvNI3ewt06neyURvK+GQZtVig0VbWsdk+RlO1dhfPIcufBT6p4RSvEw
      yYLCyDEjobUQgd5+mtUCBcnAgKXGzFKYyW49kiwSDK7zN//+fyURXETXPU7AqvJ0Pkizkqcm
      OLj6zkWCs4/Rd0+y+GSGWiHHdq5Kp+cFacWCgXaPhbn5BUZGhthYnMfucpPP59A0HX39XcQi
      MTr7+8lthxGsLrq9JpbWovR2B5iengaMeD1GthMZjGYrhVweb6CbfC5Hd18PwfUwnb0BVldX
      qZKnwz/5rbTp+EM4efIk4+PjpFIpnj59Sm9vL9PT05w/f575+Xna29sBCIfDDA+/XJe114nb
      7WZ1dRW32324hbBauYBodmJ6RZ3KWlGg/fH5fWrVJ7yYAxXCLPbD8QC86Yii2Hr490lLCDsg
      Go0GlcrLte9u8fo5UkLYYaaVC3Q0aQlhLd5oniOEyXx69xbzwTBWg8zdew9QjU5iyw9Jq26q
      28vcn5rD19nJzK0b4O4iv/mE21Pz2D4TwpRmjXufXGctUcTUzHH7zkPMHi+Pb39CPFeHSoI7
      Uwv4Ax7uf3KdvGxie+0J80treDv7sBhebJfp+CaLwU0cDhsLc3NIghm349m+N7g4h87qwfxZ
      eVkhnWAznsHrNDE/O0e63CTgdSPXCjyZfYqoN7K2skhoM0qgq/ul26IchoqwcrnM7du3qdVq
      tLW1sbOzw/LyMjabjZs3bxIKhVAUhcePH9Pe3o7J9Gp7gx4UiqJw584dCoXCXiTroHiOECYy
      efo8UiaKYPPhMokkcwX6AnYi6TLLy0H8VombjzfxWnXkSxLrK0t4OgYIuHeFMFFn4OyFC0S3
      1vH627Dp6sTiMZIViITWmFrc4PyYlw/+5bfYBs6wuTLN0soqvf0juCz78Mu1Jsm8xLkzp0hH
      o4ydPkdv+7NSuWp+h1xZQpKedZCwuXwYBBlBNDI+MYGg7MbBw1sbWBxu7E4Xp8+cxufzYTqi
      70Wz2cz58+dpNHabaHo8HnQ6HS6Xi3fffZe2tjYymQwOh4NisfiC0Q4P2WyWrq4uKpXKtyCE
      aQo3P/gdx7/zI9wmkY7ONkrFIiajERB4909+hNOkw2AxYzbtSumn3/ohnmaU2zNrACjNGr/9
      7XV+9Oc/RkFPd5efZDiCxR3ALCooqkZDamIwGlCaEqoKP/jhj8mv3+dJZD+OuICqKKiaiihC
      o6l8KRNzPRikkEsSTz47fE1vMCAKApoqsxXZZmRkEEEAUafHYbexFlwjl9zGHej42r5Eh516
      vc7W1hanTp0CwGg0fib+QTAYZGRkZPe0FI/n0Ac8voggCDSbzVcSAPnqcis3wGgitLwAPQHW
      olmOHT/J4/lH1KU8SW8n4ZqT7573cPf2ApSWsHc5iZdEBntqfLoY5kSfCYPRxNz8ImPtJkJJ
      mctvv83a3KcYx0/R7xGYX0/ypz/+M+anHnDi7BXyqShlcw9nOp/fFe7Ld0RPX5ebubkFxifG
      2Vx9SsHhJpvJoCEyceoKQ1KZWqXK1NQUgt6Iz2lleyeF3iCSyWSoKdDX4aWnb5ClpRW6BsfR
      5NreW+woUqlU2N7eRlEUVFXF4/EQDodxOp14vV5sNhu9vb2sr69z5cqV1z3dfeP1egmFQrS3
      tx9uIUyqVxEMln13Uvhj4jBFgTRN2yt/bPH7OVAhzGhuiS+HAUEQWg//PjlyQthhbo141BLM
      WhwxIayVC9TioDmiAb8WLQ6G5whhTe5fv87s0jomvcK9u3epaRaWZ+4wu7aNUyvywa17uPwB
      7nz8EZuJAmIjzZ17DzC6u/DYTShShU8+/IClcBqfrsRvbz3G5fNy7+MPieUb6GpJ7s+u0xMw
      c/3DG4QzVUrbQR5MzRDoH8P6NW1VvrgF2omss7oRwWo1szD/lKZg/JIQtjw/jc7uxWL8bJen
      qSx8OoXZ38H6wgzFhojHZUcANhZmkCwekhtLxLM1/D43L+vGH5aKsC+STCa5d+8eVquVR48e
      kclkKBQKzM3NEQgEjoyfIMsyt27dIpvN0tnZeaBjP0cH0HPx7WvIxTQWTxsGRaYuy1z7zjvk
      UttMLa3z1396kYefPCRfbZLa2cbb1oEm1WlIu3tg0WDh7bffIrUT5+Pb9/G7nSipFQwDF2km
      N/AMjNMs5zBZfVy9fIpkYocT56/ioEKhuo99tNYkXxM4e/oUuUSSE+fO09fxrFSunEtQV/TI
      zWfaQD4VRxUEqoU4qbKI2bz74zdKGSoNjWY1TSxTx2Ixv/TDf1hZXFzEZrPhcrnw+/1omkYi
      kcDpdB6pbNFcLsfg4CCqqn4bQpjEv/zin7n8o7/Cptdx7vxxYuFNfv7zX/NXP/0pRk0ln82h
      KFXsXaPYqFMXLJye6GN7Z1d4UhpFfv7PH/PTv/lrbFY7Y0Nubt4PUi8VqEnKXppBNRflNzef
      8lc/eY+b7/+S7gs/YtC3n1VJRGk2kBUZgw4KlcaXHNBoOEI+u0Milfvsb1TC4SjZ9A7pfJVA
      eyeZRAQ0jUg4TCGfIZ7M4fb5EatJCvXDmXH6sthsNgYHB3ny5AlDQ0NUKhVOnz5NW1sbq6ur
      r3t6+0an01GpVJAk6cDH/qoT3Kxw/ZM7qHoro/0dBDeiHD91jIVHn6JaPVw7P8zDmSBXrlxg
      efohel8/HrHMaiTLYKedtOLjzICVG59MoXMFePfsILcfzHH26jWiC1OYOkbRcpusRVIMDPSx
      FY7hCnRiqGXI11XOXv4OAefzjeCLTnCtlGVtM8Ho+CjR9RWMNieZTBpN0zF2/Dh6pU6tUmYj
      EkfUGxmfOAb1AoLNTTocRDF7cVt0OFwelFqZhs5ELRMn19AxOtDz0mrwYXSCq9UqMzMzjI2N
      sby8THd3N2azmVAo9MqOHHoVaJrG/Pw8Xq+Xnp6eAx37QKNAitwEUY/uZc8X2ietKFCLg+ZA
      hTCd/misKC1afM6RE8IOq2whSdJrPya1xctzpISww8xhygVqsX9aQliLN5qv+gBak3s3PmGn
      WOfMyXEWFxdpHzxJZXuJnZqRS2NtPF1eo3P0FPn4BlvbBS5M+FlPSly8co0evwNFqnDz4xsU
      sHFhxMfs/DJDF99l8/EdvP3HcIsFltbjTJw8werTp1h8XViaObIVjfd+/GfYX9hWRSMaWmY7
      V2N4oI/V4DrtvUMMdu+eUZaMrLERT9PVP0wmGkKzeDlzfBQBUJUmj+7fwdUxwsRIL+nYBhux
      JL1DIyQ2Q8iimTNnT/Iajjj4g8nlcjx69Aifz8eFCxdYWloiFApx/PhxVldX6erqAmB9fZ33
      3nsPu93+ghEPB5IkcePGDZxOJ1evXj3QsZ/zBtBz/vJFtEYVhz8A9TqaTs+ly5epV0r0jp2g
      221CNri4cnIAf88ImVgEwWDFYd0NX4oGC5cun6NSLhEIBGjUa5Qii6zlZAxGAyMnzuGzQKVS
      pVqvk8vmyGTzNPMh5rf2UamkNilJRi6eP0c2leLc5ct7Dz+AIu8KYNVcAW//KC5R4fMIsqpU
      qJQU7A4baFCrVkEUiW5uosgqaBpHdVPodruxWq3odLtloJIkIQgCyWSSQqGAXq+nVqvxgx/8
      gI2Njdc82/2Tz+cZHx9Hp9MdeFHMVw1ArfPLX7zPW3/6YwwaXH7rLOHQCj//5e/4yV/+BdM3
      f0PDf5ILwwEeTD3l8qUTnHn3LzjXo+PB7BqKoiLXsvzy/Tv85V/8iLpm5p1LY8RSNXr7hokt
      PeaD9/8Z1/gVOkwNOsbOojar/PDHf0mn10/As4+6WkGH3KhQrVUx6wUSmSLVam3vn4uVOqOj
      fZQrFcqFEpVmc+9VJ2oGzr39FjuRDVRNpWtglMmhLiwmI3pXB069RONwJpy+kM+Frkwmg6Io
      FItFTp48SbFYZGRkhGg0Sr1eZ3t7+8is/gAGg4FcLketVjvwgpiv5gIpMuVqhZ1UBofFwMpm
      kssXT6NUq8STeTo6vGR2thEtHgJtAToDXirZBKGUzLBPIZhS6PRYKBeLbGfLeE0Ky7E6737/
      XRxKGnffCbxWSCa2CQydQM3HGDt5gUpqC8E/wmTPPrr/CiIep5m1jRi9I2OU4iHqTYXg6iqx
      eILugX6242nGjk0i1nLYfR1sb6wQ2orQFC1UMzECPcOoUg2UBluJEhOTE1BNodnbaPfYXzod
      4jAUxUuSxOzsLBMTEywuLnL8+HHW19e5dOkSlUqF9vZ2BgcHicfjTE5OHpnTcsxmM/l8nt7e
      3gM33AONAn0+1FG5sQfJYYoCvcm/w8tyoEJY64YfDlq/w/45ckLYYa26qlarryRZq8Wr5UgJ
      Ya1coBYHTUsIa/FG8xwhTOLe9ZtEMwXOnTvJyuICnp5Jmpl1wnmV/+Fv/4y//z//D97+9/+B
      5Y9+zeA7f4kQf8L8RpKzb/+AkU43slTm1sefsNPQ8fbxbmZnF+g+eZmd0DIVycCJYQ8Li2uM
      nb1IbHWRus5On1vP9ONp3vnv/gOj/hdVVmmE15ZJlyX6uztY34zQ3jNAf+fuOcW5nQih6Da+
      rlE8+jJLkTJD7WYi8QydQ+N0+XZPo98KLrCdqXD87DkcBo25J7M0dVZ6fGY2Yyn6x07Q4Tk6
      fYIKhQKPHz/Gbrdz+fJllpeXWVtbo6Ojg1QqhdfrxWKxsLW1xbvvvovT6XzdU94X9Xqdmzdv
      YrfbuXbt2oGO/Zw3gIGTZ0+iF0V8bW1otTp6i40zp0+hE0XWZ+7j6R5GFswcG+1Fbqqsx/L8
      8LvnWQvtiis6g43TpyYQBZFAIEC1VsNo93Pu+DCCTiQQaKNWl3C42zg21oeoM3Hm4iUcbb0M
      v/DhB9Qmdc3CuTOnKeQKnL1wYe/hB3AHuuhub8NqhFShgctiwN/ZS0e771mJJNAUzFyc7CJZ
      kNBqeWydo3S79GyXNC6eOU6pWPiDb/C3idPpZHJyci8aNTExQX9/P36/n9OnT6PT6VAUhffe
      e49IJPKaZ7t/SqUSx44dw2w2fwtCmFLln/7pfU5dvkqzWufY6Qlim8v87BcfcO3qZZL5Mpnt
      EOGtMJlcgVw+h82gsRLcwm63U601kCo7/Pz9e7x15QKlmsr5k4OE5j/lnz6c5urlszRkmBzw
      szI3xYePNrh0/jjJ9Sf4hk7tb08m6FGlMulMGotRx1YsQaH0rDf/TiRETTOhV2pksxk2t7ZY
      Xw2iGmxYTM9SthWpRiSRx2YCWWeikt0hW5Kw6SSiiSR6g/EAbvG3RyqVIhqNEggEqNfr1Gq7
      4qDL5doTwer1Omtra0fKXzEajcTjcSqVyrfQGU5psLS8ShM93W1e4jsZBgb7iKyt09RbOHF8
      DKmQQ9Ub2AitIxisDPV2EI4lceqrpNQAx3rtLC2vo5ns9PnMRHZKDA10Egptojc78dpF0sUm
      /Z0e1jejmBxeut1mDE4/5t+TB/RFJ1huVInvZOns7iK3E0PQG4jG4miajs6uduq1Gi5fO16n
      hVq1Tr1aIF+qYTbq2d5JAUbGJ/spFBq0+xw0VBG5kkPW2XBZ9SSSWTq6OtDt84YfBie4XC6z
      ubmJzWajUCgwOTkJ7D5AkUgEt9uNwWAgHo8zNDR0ZMKlmqYRjUZxOBy43e4DHbsVBTogDoMB
      tHh59jbEh7nY5HNUVT20RyQd5uObWnw9ewYgyzLlcvl1zuVIoyjKoRXpWnw9R2oLdJg5TLlA
      LfZPSwhr8UbzNULYJ2xsp7h4+QKri/PY2scQS2GCOzUmOsxk8xWGTp5j5vEMejndjbAAACAA
      SURBVKOVNqdKodzk1NUfMNK1K4Td/PgTIkWZq8Nunm7XuHrlIlO/+RWjf/LfIoXusZkXuXzl
      NPf+9Rec/bP/ifrWDHMLi7z1l/8jfe4XdZfQWF+cJVtT6e9qI7gVo+sLFWHRtQWi6QL+jl4y
      22E0o4vL50/sVoRJZZ7MLiHpzFw+e5LtzRUiqRwdvSPkIkFERxsnJoeP5MrweUWYxWLhnXfe
      IRgMsrKyQiAQIJlM7nWHy2QynDt3ju7u7tc95X1RrVb56KOPsNlsvPfeewc69nOFsIljY1hs
      Lto72lCrNWwuD5NjIzicLixmM2aTytOlMJoso6gaNosFUa2xurErrugMNiZG+3E63cwuB3Hp
      VaqygZOTQ2iqxsJqCKNORhWsTI70omoCgYCfWgOsJt2LZ61KNHUuLp4/R75Q5sq/qQjT6XWo
      ikqzJtE9Nkmn3bBXESYYbAwP9hDw714viiKiqGcntECmpqHKEop6NHeFbrcbs9mMzbarXnd2
      dqKqKg6HA0EQCIfDe2KY0Xh0NI5yucyZM2dwOp0HHmj4akGMXOb/+X9/xqlLF9EpEgaTjlhi
      m/u3p7h4+TLdXR0Uk3HsXg81LBiaZY6dPkMllybQO4JZLyJIKf7+Zze4eOUCZqWG1W0lEi1T
      Tm6Qw4bHIGMyiuSqGqmtJSp6LxahiVDPonqGaXe+6McRScXDlGp1bHqBjZ0MgqDDbt1VkXfi
      MSwOG42GQrmQoyKp9HS2IwBKPcunT7fwB7wYdGAym5EbZcyeLgyoCEodm7fz9+oRz+MwFMTk
      cjlkWSadTuPz+chms4iiiCzLBAKBvbO2fD4fiqIQCARePOghQFEUnj59SqPROHD94qtOsCoT
      306gIOJx2sgXyvgCPrI7SVSdEa/LTKEi09nmI5tKIJqdmASJYk1FrCXJiW2MdtqIx5NoBjM9
      bW7iiTR+v5dUMoWgNxLwOklni3g9DlLJNKLJil2vUmkKdLQH2E9jOaXZIFco4/F6KReyaKrM
      WiiMhsjo5CRyvYbL40GqFMFgIhZapVCV8LV3YzfrEQ0mHBYToqBRKNfxet1I1TJ1RcTltL10
      RdhhcIIlSSKZTOJ2u9nc3KS/v59isUggENgzClVV97osf36A3mFH0zSy2eyX3m4HRSsKdEAc
      BgNo8fLsOcGqqh7a44eOArIstwpijiBfMoDD/gMe5jnWarUjs6Vo8Yw9A9Dr9Ye+VcZhzgVq
      NptH6tCJFrs8pyheQ5EVVEAnCsiygt5gQEBDUTR0OoGmrGDQ65HlJiDuXqeoGAx6BEFA0zQU
      WQZRRC+KyIqMqNOjqQqCqANVRVE19Ho9mqagagKisDu+3qDflwOqaSqKou42S1IUBFHcW4F3
      83I0dDoRVVXQNBBF4bP56/Z6/2uqiqJp6ERxb96qpiEKfHateGQyJr8ORVEQRRFF2W0W9vmf
      9Xr9kflumqahKAqCIOw1/ToovhoG1Zo8un2bO3fuYLbZeTJ1j62MjJBe5j/+y6cYKxGmn0xT
      Eo28/19+BSYbSjXFvdvXKYp+uv0OlGaFOzdvcf3BDGdPDvN//W//O/6zl7n7D/8JuW2MmRu/
      ZHFpFbO/j+Vbv+Dmep7k0mPmnszi7JvEZX7+l3x2RpjG+tI88WQOUa6zFNpCE4247LsrcCmX
      ZD64RZffwcz0LFVZoJSKENrcQjR7cVh3hba1xVlCoS1s/g4sBh3FZIT7c0HEeoFwNI5qsOG0
      7u8crcN4Rpgsy/zjP/4jTqeT+/fvIwgCoVCIubm5vZPjjwLVapXr168TjUYZGho60LGfK4QN
      DnRicXXQ3RWgns9jsxpYTSmMtttIFOv85MffJTa7is3nIl8s4PX5KBVqOJ27D6DOYKO3w017
      Zy8zt25y8q1rCDoLJ4+PImoQ8PtRmwWezjymbunGY2xSFzz8yeVRVsLpF89alVCNHk6dPE6x
      2uDC2TP0fuGMMKe3nTa3g0apTENtUi1XaOosnDl1ikY1++zLmx1cOt5HptREk+skyxpdPjsm
      kxFVkUjn8n/wDX6drK2tMTExQS6Xo9lsksvlMJlM/OAHPyCZTL7u6e2barXKqVOn8Hq930JF
      WLPI3//X9wl0+EhE47g6OkhvR0Cps7C4gs1i4re/u4N3eISRwW4y23Gi2zu0tftIbsdIpHLU
      81v8028e4vM40FttbAUX2VxbZW5phaWlJbyBThCsdHV4qJd2WA0l0Ks5bjwOMtLjf840/w2C
      EUHKs7i0jNNqYmZunljy2YNdyCTY3NwkV5exm23I9QpKs8b84gJGq2fvOrVeZno5htukkCuW
      qRYzrG9G0Jls6EQ9fq/neZ9+ZKjVaiwtLVGpVHA4HBSLRRqNBjdv3jwyIhiA1WplYWGBfD7/
      LVSEaSqVahUNAZPBQKPZxGKxohOgKcvodSLVegOLxUy9WkNnMCGiIDUVqtkIFWMn/QEblWoN
      RB12q2X36CRB3O3tKOow6AQUTcBsMgEqsqIiotFoqlgspq/1Ab7oBGuqQkOSMZqMyFIDpVFl
      eX0TTdMxPD6OUdTQG4wImoKKiEEnIDUV5GqelY0oYOTY6QkERcOo133m83y+V9aQZRWj0bjv
      s8IOa0HM5ytms9nc20NLkoTZbD5SPkCj0UCv16PXH2gvt6MlhB3mKNBhNYAWv589c1IU5dA+
      XJ/z+UpwGGk2m3tF6C2ODnsG8CpCTK+Cg34FHhSyLB+ZqEqLZ+w9TaIoHrow3lGiWq227t8R
      5DlhUI1KKU82X6Ip1UgmU0iyiqY0yRVKaKpCOpWk0ZTJppKkM3mkRpV0Jo/6mTuhaRrFXIZi
      uYZUr5BIJKjWmyjNOsVylXq1RCKxQ70p02xUKVbqNOtVMrki+3VIVFkiny+gqBrlYoFa41k9
      rqapFAt5JFmhWi5SrTdQ5SaFQulLp7/IUoN8oYiqadRq1WfzVxWqtTqaplEuFahLRyNHSlEU
      ksnk3la22WySSqWQZZlcLkelUtm75nNh7CigaRqFQuGVbDGfe0bY6tIqa8FlTr/1LunwMmV9
      J33GFB/MFXh7xEzB2MbJcYlf/+IWV793jam7U5hMZvyjFzk11I7SrLCyvMLTUIRRmx5tcIRJ
      i4vFuRvMR2UGbWX0nSc44XAxf/1XhA3deOspBE1m7N2/Zsj7AvFJU1ldWkC0OKkVMiTKEh1t
      7VgCu2HLxOYq6bpAT0BiLRxDUwXcNpGGJOPuHKW3bbc1YmonTi61Q65zlFxig9GJszgsOoq5
      NMFoipMj7aysJhAMOs6dOnbgN/+gqVQqRCIRisUi3/ve94jH48RiMSwWC7IsUygUcDgc6PV6
      nE7nkdjywm5BzKNHjxAEgffee+9Ao1dffQMIBnxOA2ZfH91tLjLbSWxmWEk06LSLrMfiNNMR
      NsM5bG4zq2sh+vt6KRVzRLZ3xRWdwYpV36RnYAxHh49saJVweJV4zYzDAHaXj2Q4yMbqU8oG
      P2a1iiS6uHKqn41Y7sWz1ppgdDM2Mkyp1uTUsQk6A89i9oV8gWo5T7ZUQ2nUkBFBb2ZyfIJm
      9dn4Pp8XnT1AV5uH7o7AXvh1t6GWFb3Rhk6rk0hl/qCb/G3hcDgol8s4HLsG3t7ejslkYmRk
      BLfbzfDwMJlMhmQySSZzNL4T7OoZ4+PjuN3uA2/d81UDaOT5L7/4AJNJR3hjE53dQalQIOCx
      E9tOMDQ4TF1TyOXq+D02ysUCRrOFRlNgqMtDOJ6kltvknz+cRtAU7A4Heq1JOi/jt4lspzIY
      bA6Qa1SaOmwGmUS6glUs8Nv7QSb69yGEiUZ0cp6px9O4HFbuP3hAKLpDs9mk2WziDQRA06iU
      ymiA1mggqA0efjqN2eH97DqZJ9OPyeezZNMplhaXWF7bJJvNkopvsby0TCRZQq/bVa6PAp9v
      fwqFArFYjLt375JIJAiFQty7d4+dnR26u7vRNO1IRazsdjszMzPk8/kDz7g9UB0gG1+nbu6k
      y/vtZ0U2q3kWVjfQNB2jx45hNz0/WlTNJ1nZiAFGjp85hvGAXqeHqSBGVVXC4TADAwOveyqH
      niMlhB1mDpMBtNg/X+oMV6lUft+1LX4P1Wr1yDiVLZ6xZwA6na5VEPMHIH6hHqHF0eFIKcGH
      eY6HeW4tvp6vFsSgMPfwHk/XY9gMMnfvP0Qwmph/+ICHs6t4rCr37k1hCwR4+OHviOclKrkw
      Dx88RDL5aPPYUOUGD29/wkaqQl9XG3d/+89Y2rt4fO8O27k6Zq3M7HKETq+Z333wAdmahpyP
      8mh2jZ6BPr6uJc+zghjIp2KsrIdxOOwElxaQBBNO225fnlopz0Ysic/tIBxaIVGoY9KqLK5s
      4PYFMOh2PyC3E2FlI47P70MnamwFl9gpSlhFiYXlNexuH0b9/lb1w1gQs7y8zPT0NKqqsrKy
      giRJlMtlHj9+TFtb25FpjqUoClNTU1QqFfwHHJH76q+rwcDESRrJDWSzl3aHkWiywtvffQtB
      U/F6A/hMEhubITbSGhPjg0yevIjXIuJw7safEUSOnTrL5toShegCwfUdCrKRwf5uohsbmF1O
      krEIlVyUQsPE2EAHT5biHA80mQ7tRweQSaSrnDgxSSYWpWfsBJ2+Z+dd6U0WdKg0K3lSZRm/
      x0UiXWBiuJtEIrV3XSpfZbTdQrzQQKvnqRv9WOQS6/Es4yO9JJKp5336kWFiYoLh4WEURaGj
      o2OvN9Dw8DD5/NEp9snn8/h8PvL5/LegA6Dx8ObHDF36Pj6LgMlsoSHVWZ++y/C5t0ADs8NG
      rWri3WvH+ODX/0K5kiFetdLr212BNUXixsfX+d6f/Cmf3H6E0syxFdlG1OnRoWCy2NGJYHH3
      cu5YD79+/1+/8OnfgH/zxjAYTejE3RpfUScSW1+j9ga27lcUhUKh8KXoVCaTQRCEI9MX9FXz
      1WB5s0ZNEYiGgujrPsLpEqMnxijtaJwZ9BBdmSOeVZg46SO8+pSBY6doFoucu3yRYmKNUM7I
      8R4DiqZneTnIX//3/ws7a8uobgfLszN0DgwTevqEWr3KRixJLBrj2KlL+PVFFmIV3v3uPqqw
      BD0dfivz84uMjg6zsfwUm8tFPpdD03QEAi4SiQQ68whes0jV5KXbZ2IlFKe3y8/09DRgpLvb
      xdpOhYlRhaJixSyFqBtcDLeZWFmLMDJ5+NMffh+1Wo2BgQGcTidra2u0t7eTTCYpFApYrdYj
      UxXmdrtZW1vD4/F8CxVhfwD1SgnRbMeoezWVRoc5CtQqiDmaHGhyvdnmOMjhWrR45ewZQLPZ
      pFQqvc65vJDDfA5Xo9FoCYlHkFYqxAHRSoU4mrSkyxZvNM8RwmSmbt1kfmUTs17h7r17KDo7
      i5/eZimSpc3U4INbjzCZjXz66CGPZ5fx2HXcm1liZKAPAKVZ486Nj1mN59DlYtyZW8DsaKOa
      DHJ/Psxwj49f/+oXuPxtPLx9i+28RHJjnqcrIbydfVgML7bLZCzEUnATu8PG07lZJMGE2/Es
      C3Xl6RN0Ng8W4+4uL5+KsxHP4HOZePLpDLmagt/jopTdZm5hCcFgIry2QixVpK3Nv68zCr7I
      YTggA3abYX1+HNLW1hYPHjzAbrdTKpUIBoPUajXu379PX1/foa2v/rfIssytW7fI5/N0dHQc
      6NjPEcJETl64iJTbRu/0Y9cLpDI7pHIlEpFNPrx5m0BbG762Lt6+MI7e6qGto49acefZoDoj
      Fy5dYjuyxdLSCs5AJ20eEwvBLSrZFKHFGUqNOk3RzsULJ4mEt1heDdLRPYDLso8fRWuSLiic
      P3eaTCzGxNkL9HU8235UcgmKNYWm9Kzsz+FtwyQqqFKFJiaajd1oUrlcxmK1Uq3JtAV8oEgc
      Ti/jxUiSRCwW28v17+rqYmJigkqlQigUQpIkUqkUb731Fuvr6695tvsnl8vR29tLvV4/cCHs
      OSWRMh/95jec/t6f4zTqGBzsZWo1jM7oxSHnEExm2j3w0SdzBIQIFy79CXqDAfEL8VmlWeH9
      33zMj//iJ4iNIsXtRf7hv/4KmSbpVB6puE0+l2QjtMJOOMqP//yH1Is5Np58woytnfP9L4om
      CahKE0VR0IlQqzcxmESMnyWjhdbXyWcLGJJttHk+a9eo220GqzSqWD0BpNJu9VqjIeEP+NnZ
      KdA+0IkplUGSwfCic/oOISsrKySTSRKJBKdPn2Z7e3svRykajVIulxkfH6dWq2E4Ql9QFEUa
      jcYrOb/iq06wVOZ3H99EZ3Yy3NvG2maUY6fOkQzNUzP6OTvs4+6jp5y6dI1sfIOxiUm2lmaY
      C27R0e5H5+zjVJ+ZDz5+iNnXyfEeO09X45y/9jZem8jaWpiRkSESkXVUDR7PreDr7KXNKBHO
      Nrh27QrmfeTflHI7BDd3mJgcZ3N1EYvDTSadRkNk4tRpdFKFarXCRjiGoDfic1pJJNP0DY1S
      2Alj8nTjtRsw6jRW17boGRgiHdtEM3uYGOl/6S3QYXGCm80mmUyGSCSCxWIhFotx/Phxurq6
      2NnZQafTsby8zFtvvXVktkCqqjI9PY3X6z3w5rgHGgVqNmoIBjP6l316/gg4LAYAu+HiZrN5
      ZJLdXicHugQYTK/fCWyxm5rdevj3x5ETwg7rOWbVapVms/niC1scKo6UENbKBWpx0LSEsBZv
      NM89IunejevMLAQx61Xu3b1DRTExP3WT+VACtRjjwaMnuDp7ePDRb9gpqdRT69x+8BiTuxOP
      3YwiVfjkww9Y2EwipMLcXVzGYnfz6MYHpCoa+egyd6dmEUWN+3fvU5B0FKIr3L4/RdvAGNav
      EcK+eERSIrzO6kYEq8XEwtMFmoJxTwjLbG+xtLKGYLQQDi6RLDYI+NwIgKrUWZ5+gt7fRT4a
      ZCkYxtvejkFQWX46SyxTwa5vMrcYxOJ6JqS9iMNQEZbP57l79y6lUomOjg4SiQT379/H5XLx
      6NEjqtUq29vbTE1NYTKZcLvdr3W++6XZbHLz5k2y2SxdXV0HOvZznjQ9l65dQy5lsXj90GjQ
      aFYpFEpkkkmi0RhGoczvfvkLFhI1rHYbpVyeeq1ErlTdHdRg4drbV8mkdgiuBxEMViyVDRaT
      Dax2G4V8nnolv9vGr6Hw+NEDAgE/jVoVZT8bMq1Joa7j3JnTZHdSnDh/gf7OZ6VyTUkCESrZ
      HK7uQeyaxOe7c1Fnpr/bj6RCRRI4N+Innquj1XLofYO0WRSW1qPojQYMuqMRJvwcl8uFxWLZ
      y5lfWlrCZDJRKpXI5XJYLBZOnjxJd3f3kSqIyefzDA8Pv5JkyOcowRK/+vmv+M5f/BSb3sC1
      a+fYXFvG4OjDp1e5/KO/5vRQF96uTvqHxonO3WNtp8yVCydIpXfLGeVGgX/65XX+3d/+DW//
      +Kd8Z8DAR48j9A+NszV7l41MnUunRtB7Bvhv/vwdPA47Zk8Xp3qtRDL76VimQ5FqNGUJow5y
      xdqXzg0oVxuMjvRRLleoVWrUFYXnlavLskSx0sBs1IHegFQtU20oOOxWhvq72AxHv+FtfT3U
      ajXOnj1LNrt7XJTD4WBycpJgMMjo6ChbW1tfOinmqKDX6ymXyzQajW+hIKZZ5ebtuzQFM2OD
      nayGopy9cInk+jw1U4Aeu8JyvMxbl06zsTBN3dRGn1tgeinMQLuVlOLjzKCNmzenEBx+Tg+4
      mVtNcOXtq8SWp5EsHXTaZObXdzh3epzZ6Vkmzl4kF14iXoRrV89j+Bod4YtOcKOcY3Vzm9Hx
      MeKhZQxWF+l0Ck3T0TfQzXZsh6HRMQqJTQSbj0o6TrEm4Q0EKKRSYHEy2uUmnCoz0hugIuup
      52JIBjedHgurwRB9w+PYzft7CxwGJ7hUKjE9Pc3o6CixWIwTJ04wMzPDqVOn2NrawmKx4Pf7
      MZlMmEz7O/3yMKBpGgsLC3i93gPfAh1oFEhVZBB1X0qLOEhaUaD98flW4Sit8q+LA93kikds
      z/zHylHb4rxOjpwQdliRJOlIdVxuscuREsIOM4cpF6jF/mkJYS3eaJ57RNK9G5+wna/ywx//
      OXd/9Z9pO/dDkkv3aRj8jNoVVstNjg32srC8hsPXTYchSzCpcPHqNXr8DhSpws2Pb5BVzUw6
      IFhXOTEywub6KpuxPOP9LrIlhXMXz7L65AkNk48eS4VISeM77/wA5wv1JI3I2hKJQp3h/h5W
      1zZo7x1isHu3z002scXaVpy2/km8+jKLW0WunN/t8aM2Kzx5sohmcnDu5ASFVJTgZgRvxwC1
      bIJqU+DM+TMYj+DSkM/nefjwIW63m8uXLxMMBllaWuLMmTPMz88TCAS4cOEC//AP/8BPf/rT
      I5Mw12g0uHHjBg6Hg2vXrh3o2M8Vws5ePIcgSyQ3lxAsLtLZKKJlCHstz2o6iSDq///2zvw3
      riu785/aN1YVyeK+L6IWyjK12ZItL21HbsMJkBgTTCM/BGhgMDP/yGD+hWAwQDCdQWdmkvQC
      DNrpdDu21V7atjZzEfe9WPte9are/t6dHyhT1liO6A4lVSH8/PpePV4+3PPuPed7zj0EPDaK
      ZrMxP0c8lcHh8RMK7L9QpyfI5csz6KpKKp/D6XAT6xvmyvQwfeNnUKQaZj3DVloh5Hdimip3
      59bxub24XIcQOmyDuunjhUsXKRVKXLxy5WDyA3T0DjM62IvPZZMu1mnzPXAIHe4g06cnabvf
      0rS9oxOnw4HL4+PU6Snao+FDd4dvNqLRKOfPnz9okVSpVLh+/TorKyvMzMwghGBtbY3Ozs6m
      9qf+f6rVKmfOnMHj8TwFIcxW+eUv3uPFN96ilE5RLmbIZGrISoGKafLStTd5cTTA3W2Td956
      hfaOKJdeeZvn+53cWtjEMEwMpcAv3/uUt996k4uvXefykJePb2/y+e1lXnphmmtvvMNIfy9B
      n4vJcxepl3N0dvcy3CZzd/MQvascLiytQU2qEXA7SOVK1BvyweVcYhvNFSWISqFQYGt7G/V+
      Eqlt1FnbLTA61IttWzRUg6kTE1QKaVbX4wwMDR5taOwpUiwWSaVSjI+PYxgGtm2TTCYJhUJk
      s1lUVWVvb4+trS2SyeSzHu6h8Xg85PN5FEV5CkKYqXLnq1l04WHm/AXcRo26CKDkt9G9XXR4
      FFZ3CszMnGZ54R5DU2dxKXk2khX6I4Kc1c3MWBu379xDBNo5PRhhbbfA+UszFLMZ+gcGyMbX
      yctuTo7GWJhfom/8NJ0+g6WtHBfOn+UwB8sZSo3N3SwTJybJxDdw+YKkU2kETnp7u6jVJLr6
      R+iLtVGvSaT2dqjKOp1d3SiNOp5ghP5YFBcmu8k8o2PDJHZ3sZwepk5M4fmeUcRmcIIrlQpL
      S0u0t7dTr9c5d+4ca2trnD17lo2NDXp6eujs7DzoFtkq/QyEEGxsbNDe3n7kxzkeR4GOiGYw
      gGO+P63xCTjmmCdEywlhuq4/62E8EkV5OCHvmNagpbZAx7lAxxw1x1ugY/5N8wghTOf3H/6O
      eL7MO3/2Lh/9/V/Td+XPsNLzrOc0rl+aYHZ2gcjQJNlUhlC0mx++9jz/47//NW/96D8x1h3E
      1Ov87oMbZBQHr50bZm52gd7TF1hfXMQbiDDS4WA7U+PcuTMszi/iCccI2hKSYvPmn75Lh+9x
      drnfz6vYMBgd6GVzN0Hv0NhBUUx6Z41koUJX3wjlTBzbF+XiuVM4AKNRZmF1G0m1ee2ly9RL
      KVa204xNniC1tYbhDB46EtVsVCoV7ty5QygU4urVq8zNzZHNZjlz5gyLi4uMjOwfXZlMJrl2
      7RrB4NNvaP6HoKoqN27cIBQK8eqrrx7psx8x0zw8NzON1+Mlu7VAuHcIQzjoao8ghIOu7m5k
      RSHg9yEExFeXmbv7FX2joxj2/m7K5Qlx7uwUXo+P7u5uGopKwO/F1A1UTSdeUfnhy6fZ2kli
      GDqaboItQE6xvFd7/KhtA40gF8/PUKlIXLz8cEWYw+FA2AJdVugZn6Lb7+Rrz8ET6uDcqVFG
      RsdxOCCXz+F0urDqRdoGTjLc6aXRooc7RKNRfD7fQWmmZVkIIZibm0NRFEzTJJFI4HK5mvZ0
      jUchSRJnz54lGAw+BSHMavAPP3uP6QsXkSpVipkE8d1tPG29uI0GhbrOzPQ4xZqLFy+dpb2r
      C6UukYlvsZdMU28o6PUMv3jv91y+eI5qw2BmepT1hUWCvWP4hYJPWCyu7eFxWLQPncAyZC68
      8CKhYAdDPYfoVexwY+sSmWyWkM/FVjxJufrAgW8oGn39XWiaSjmXo6IaHBwEKAR7qRLDAzE0
      TSMUCtPV002hIlEvpslXVQ5ZA9N01Go1BgcHKZfLyLLMxMQEvb29jIyM0N/fTz6fp6Ojg4GB
      AeLx+LMe7qHx+Xzs7e3RaDSeghBm6WxsbmPiYnxiApepINtOyuk9XG0xIh6TVF5ifHxfOOoa
      GCUa8qE0ahTTO1ScfZwZamNjcxfhDTLQ7idVlJiYnCC/t4073E17AJL5GqNDfSR3dwjG+hBy
      GdURYLjvu9tgftMJNnWFXKFKT28P1UIWnE7iiSRCuJiYmkSWJLp6elFqRRzeILm9bWqKTqx/
      hN6ONvx+P4os4/f7yGWzRGK9mHIFyxV46JTpw9IMTrCmacTjcXp6etjd3WV0dJRqtcrw8DDZ
      bBaPx0M4HGZvb4+xsbGWqRkQQpDJZAiFQkQikcf/4HtwHAU6IprBAI75/hws9s3cfuhrbNvG
      sqzH3/gMEEI07diO+W4ODMCyrOMeV/8KbNtu+g/IMd/mwADcbvfxEv6vwLKs4/fXghwLYcf8
      m+Y7hLAbbCUz/PGf/4j3f/pXDLzyI5y5e9zbq3Gpy8uOM8DFqTE++XwWt8fPWMxFolhl8vwb
      XD41cCCE7ZY13jg/zuLSIv7hGaglmFtO8fYrz7G8ss74uRco7q5TMrz49TShziFeuPYDOoKP
      i0MK1hdnqaiC0b5u1uIpBkceVIQhTD754AOmLr1K3/0OMcXMHlvpGi9cfmlTgQAAD8dJREFU
      mCa9ucxmVfDKxbOUM7us7GQYm5gkm9ghk6/w+vXrBFojQPIQX1eE+f1+Xn/9dW7evEmhUGBq
      aort7W1s26a3t5elpSWuXr3K5OTksx7yoZBlmffff59gMMhbb711pM9+xEzzcOr0JBnJILc+
      S//kNDhddLWHcadVLL8XT0MHtweHZWJ7HHg9TnRVx+3ej7a7PCGmJgaRduqMnjjFyso6Y2Pj
      RKsadJxk6lSMnZ0k/YPDtBkFnHIQM19C14zDxXltHcvdzguXxllbWeWlq1ceUm5zyT26h0cf
      Wt5ifcPU5C0srU5NhOgM7Ps7hWIBl9OFYTs5N32SYLrWkpMf9oWwEydOHLxDr9eLEIJisUg0
      GkXXdc6fP4+u64yPjz/j0R6eer3OhQsXyOVy2LZ9pHUM336SKfG//v49RsbHUHSTbHKb3Z0t
      FMuPy1TpGZ+kPwz35pfxtHfjQyNbVhge7qNUyFAs19BqCX7+j18yNjLAP/3ib3HExgh7HHw+
      v8WVc+P86h/+N/6eIeTkAu/f2WWov5MTp57DoxdIlA8R5nR4QKuwtrFBOOBhfnGFdL58cLnR
      qJPc3SKVe1BdVilkSCQSpNJZysUMazsp6nWJSLSDtnAblXKJdDpLf//RdiF8miQSCdbX13E4
      HJTLZfr7+2lrayMcDuN2u5EkiWq1SiQSOXJB6UkSCARYXV2lWq0+BSHMNskXitg4icW6cNg6
      hnAi18o4fSECbkFFUol1ddKolHD4QgTcUK41sBt5JE8fk70h8oUSuL2EPFBXdNqinThsg2Ao
      RK1cQNFMQqEQjUYDty9AwCWQDejqbD9UTa5t6tTqCuFIBKVexTZ11jZ3D3qEBV2g1Iosb8Zx
      uL1MjI+DbRIIhfF73ZimiRA2Ho8HqVoj0BYBYeH2ePhDXnEzFMRomka5XMbr9ZLJZBgfH0dR
      FKLRKMVikVAohNfrxeVytUw1GOyHmGu1Gl6v98hb0baUENbMNIMBHPP9OfABbNtu2mKTVsAw
      jKZVqY/5bh5SgptdyRRCNG3VlaZpx0JiC3JgAC6Xi9D9s3KalaOOABwluq4f+f70mCfPI2aT
      QNdUFFVDALqmYVo2wrZQVR3LNKjX6+imharIaLqBbZk0ZAX7vjshhEC7fw0h0FQFSwhURUY3
      TCxDR1bUg2fJioqpayjq4b/u++PRsIW4P0brG9fsg2tC2BjfyH0XtoWiKKiajhDsj09TsSwb
      yzTQdINWdYqEEAd5/7CvTiuKgm3bB10sv66rbiXX7+uV/0l04Xzk0YizN2+yubPNW+/+e377
      079i+Ad/Sb+yzP+9XeTlfiel9h5mJidYW1sjmSwyHHNTVlT6Tr7M1bPDWEaDW198yWqqyH/4
      iz/hv/2X/8rb//k/8uXv53AjaPPrOPEwPj1DObXB7EaB4Q4vWBZX/uRH9Lc9JhAvBBsr+33B
      uiJB9gpV+voHGezZd0KrhTSJbA5fdJh2Z4WVpMKrV84BYGoNdrYT5CsNXn3pBYqZXeL5OqNj
      I8TXVmnrGmBibPAPigQ9a2q1GouLi9i2zSuvvMLdu3eRZZmBgQHy+TyyLPP666/zk5/8hB//
      +Mct0yRDlmU+/fRTPB4Pb7zxxpGGQr+9Aji8DA/G8LcPkF29y9j0eSxdYqMgONETwtcZQS9m
      kewA/RE3XUOjtAU8SDWZQGC/EsntDdHbEaBvYIw7H3/MzMsv4/T6EWoD4fIw2NuDrpbJ110M
      RDxcfe2P6Iu1Y2lFNlPVx49a6AhvO9NnTlOTNS7MnDuY/ADRWDehQJiuiIua6aE78mBr4glE
      GB/oYPTEaRyOffXUNnVquRRVXSBVy5iHalTWfEQiEWKxGGNjYwC0tbWhqupBaDQQCLC4uMjM
      zMyzHej3RJZlzp49S0dHx5GvXN82AL3C//w/v6K9I4zl9JLeWSe+vYtTaCwureBt7ybksthZ
      vMnP/nmWaNBLWVLp6IhQLqRJZYsopW1+9uubtAW9BCJRttcW2VhaxhVqwyV02qIxTNvP+HA7
      d9bKnD/ZS2esE8UKc3rkEJ0LHV6cepn5hUUiQR+3786yl3kgem0tL1CoNajVakilPNu7u2hf
      74KEIJ6rM9Idplat0N7RicvpQrZddAbc2IaG3qIGsLu7y/LyMrVajVwuRzgcRghBJBJBlmUk
      ScIwDO7du0cqlXrWwz00wWCQ+fl5yuXyUxDChEC/v9fyeDwgBAIHTgdYto0DMC0bt/t+XanD
      gdvlxDRtarltZN8Aw11BDMMEHHi9HmzbAocT2zTA6cIhBDbgdrnut/JxYpkmNk487u/e/nyz
      IEYIG8vabwNkWxamKrG0vo0QLk6cOUPA7cDpcuFyOrAtk6211fsVYaMM93bgdDqxbRuHw4Fl
      WThdLhA2QoDT5freW6BmKIixbftg/59IJBgdHcW2bdxuN4Zh4HK59t/X/f+7VdTgryOUT6Lz
      TUsJYccVYcccNQdOsGmaTTu5vqaZxTpd15Fl+fE3HtNUHBiA0+lsiYYJz7ob+3dh2/aRF2wf
      8+RpOQNoVtxu9/H7a0EeKYRJlQK5YgUBSJUSimZQyKbZS+cw1AapTB5bCKRKkXyxim0apFMp
      VGNfjBJCUMpnKFUbCNsknUyiGBamJlOqSliGRqUqIWyLfCZNraEiS2WyxcqhB24ZGoVCCcsW
      VMtFGuqDrZGwLUrFApphIVXLSLKKZeoUSxXsb3g8lqnTkFUQFsV8nqrU+Mbvi2iGhSrXMVoo
      KqRp2sFWzDAMMpkMtm1TKBSQZRlVVUmn0y0nhBWLxSeSavJIIWx7M87G2j2uvfMuH/7d3zD4
      0rvszn/G5auv8NGtT4hG/OykR9laWefq1RfYnv0ELTLMc5FO/B4XliGzs7PH3NoW031BzPZR
      zkRiLMx+xFLS4odXT/DRl+v8+R9fI763x+rmp/jdTsIei1M/+HeMRB9TESZs1paX8UXaMepl
      cqpNX7eLkH//C5zeWadqeugXNht7aYQtiASd2LagYTgZ6d3fqpQKebLlOmeGIqwnq0yO7P8+
      tb1G1fYz7A+Qjy/h7pphpLv5RSMhBJ9//jl+v5+rV68yPz+Poigkk0kqlQpOp/Ngpdc07UAv
      aHYkSWJubg4hBG+++eaTFsI8hP02vq5xUve+oGtkElUz6WzzMje/xMSJMWq1Cou3vqSqG8wv
      3GMznqGc2WInvR+Ld3kCuK06IxOn2c1kkNPrLN37ioTkJeCw6BudJBJw4wtF0aUCk9PnGR/s
      olLOksjXHz9qYeDwRZkYG0NSDZ47NUVv7IF+UKtWqVULFKoyliZjCie4/UxNTmEoD1aZ7r5B
      gn4PFvsFNtn7RTWlag25kqNQVRgaah1VOJFI4PP5sG0bIQRCCC5dukSxWOT06dOEQiH8fj/Z
      bLal8pZUVeXEiRNEIpGnIIRpFX7+3g08bgh1D+PU69QbFdpC7ciyjMfrp1q3eO3tt+kNODAN
      nVOnpzB0k0a1wE4ih1Le4de/m0dYBudOTqHYIGseRrqDVKQGS7O3WVld4fbvb/DZUhrTUPH7
      fWjOTqZHDhFKdHpxW1Vu3b5Le6SNL774gq29DIqioCgKnd3dIASqouxPBN3ALXS+vPMVwbaO
      +/ep7G2usLqySqaq4nG60HSNcqlEb083li3Q1AaLC0usrqzS3Hmy+/h8PizLolwuHxjDb37z
      G0ZHR7l16xaqqqJpGh6Pp6UyV9va2pidnUWSpCNPhjxSHaCU3kL399PX8fS/LoZcY3UrDjgZ
      P3mKkPfRgolcLbC1lwE8nDx7Eu8RLafNVBBj2zaJROLgNOhjvpuWEsKamWYygGMOz0Mtkur1
      Q+y/j3kkT+Lk4mOePC11Mlwzp0K4XK793KljWooDA2iV5KhmrQhzOBxNO7ZjvptHCmH51C6b
      u2kEkE/vUZFqLM3NMb+4hlTJs3BvhUajysL8HEtrW+i6yuryMpK6n0UqhE1ie51EtgRCkN7d
      RjEt4purJHMVKvkUS6sbGJZFfHONkqQghMXO9s6hoy2mJhPfS2JYNrl0gkpdObhmWwal8n5d
      Qb1SIJ0vY+oKiWTmISFMV+okM/mD0FqtlKNYrWMZGslkCtNubfcomUyysLBAqVQiHo9Tq9Vo
      NBqsrKw0ff33NxFCkEgkKJfLj7/5e/JtAxAG5arK8pcfkCmV+fBXv2Q+XqOrO8bNmzfRDQtX
      dYvPVgr0xMLc/PIuX37wT6iuAI77E8kyFBqqxYcf/BZTyfPzv/lbEoUKkunik/d/i2wJyrv3
      +PjjT1iKF7jx0Q3Ke6v89O/+kUMVRQqbjY0tgkEfhb1tapYbxzdOZm5INVLZHLYmsZUoEPB5
      2NnaQph1EtkHBTfb2zsY1Sy5ugFGnZ10hWx8h63tLSxTZS9dfNRfbxnC4TCwXyeQTqeZn5+n
      WCwihGipDjG1Wu3AmJ+8DuDwYMl5fH2niN/9GF9HD1JdxaVmGJl+kZAXVpMletoj1DNxpq9c
      I58vsLN8h8XtNAAut59qbofJMxf48Nfv0z82SE0TVPZWGX/+EiGnRaLQwGmqdI9O4bAk/vnj
      OwzE/NQbhzABYeL0ttEV60LRLUYH+4hGHhT0h9tjtPm9GIpGvV5iY20Tw+Wjv3cAS3/QSsnl
      DTDc105dMRG6Qqizl86wl4blZaivB9NszszTwxIOh9F1nd7eXoaHh/H7/USjUTRNY3h4+FkP
      79Dous7AwAChUOjpCGEffjYHlsrA6UuM9rbj9zr5ajnNtctTJOIJ/H4/hmGwkZF4fqKP52fO
      Ytsg1Cobu2nUapwvZndRGhLnX3qNWCSEVdjg5moGrV5jZzdOwO+lo3+EndsfEewY5eVXrxFp
      Cx5OdXV68Dtk7s7OEe2I8tXt22zHUxTyefL5ArlUnK2tLbKySTQQwOFyEXLb3J2/RyDYRj6f
      J58v4RIqt5fTdAdNaiJAI71OsmrRH3Zwa3aJSKS5gwKPQ5IkYrEYHR0dzM3NYds2t2/fplgs
      PpHtxJMiHA6ztLSEpmnNLYRVsnuYwR66wk8mb+ZfigJZukwqWwQcdPcP4Hc/+kVpskSuWAFc
      9A/14z4ix/+4IKY1aSkhrJnDoMcG0Jo8JIRJkvQv3fvMEUI8kbNhjgJFUVoijHzMw7TUCtDM
      HKdCtCaPSLw3+PzDGxRVwR/98Dq3fvMLOqavklm8i7tziJGoYHllhY5TrzMeLHFnq86ZbsFi
      QuLSlWsMdYWx9Aa/+/AjVG8npyKwWKpz/sxZ1lYWsTwRTg8GWd6r8+r5MT67NUtJdjIRc5OT
      4Po71/Efws9J766TKEicPDHO6vIa3cMPOsRUC2m2sxLnpydZWZjDCsToC9qsxXNMX7hM1L+f
      KJfeWWM7I3Hx8gX8blieu4vqijLe42dpM8mp5y4Qe0L+zDHNwf8D0AcuYFCOyTAAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='V/C Explore Map (AM)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='VMT Table' width='192'>
      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
      2QV92eu8LP8BrtJ66nHrgDoAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
